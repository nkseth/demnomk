{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../../../appConfigSlice\";\nimport { SEARCH_TYPE_SEARCH } from \"../../../../../lib/querys\";\nimport SearchIcon from \"../../../../../assets/icons/search-gray.svg\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport { client_categoryBrands } from \"../../../../../lib/api/client/clientCommon\";\nimport { brandsPageSize } from \"../Categories\";\nimport { Translate } from \"react-localize-redux\";\nimport { Loading } from \"../../../../common\";\nvar SearchTimer = null;\nvar brandQuery = {\n  pageSize: null,\n  pageNumber: 1,\n  catId: null,\n  search: \"\"\n};\nvar resCount = 0;\n\nvar Brands = function Brands(_ref) {\n  var brands = _ref.brands,\n      catId2 = _ref.catId2;\n  var lang = useSelector(selectLang);\n  var curr = useSelector(selectCurr); // const [search, setSearch] = useState(\"\");\n\n  var _useState = useState(brands),\n      brandsList = _useState[0],\n      setbrandsList = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      seeloading = _useState3[0],\n      setSeeLoading = _useState3[1];\n\n  brandQuery.catId = catId2;\n  brandQuery.pageSize = brandsPageSize; // const rowRenderer = ({\n  //   index, // Index of row\n  //   isScrolling, // The List is currently being scrolled\n  //   isVisible, // This row is visible within the List (eg it is not an overscanned row)\n  //   key, // Unique key within array of rendered rows\n  //   parent, // Reference to the parent List (instance)\n  //   style, // Style object to be applied to row (to position it);\n  //   // This must be passed through to the rendered row element.\n  // }) => {\n  //   // if (search && brands[index].brandTitle.toLowerCase().includes(search)) {\n  //   return (\n  //     <li key={brandsList[index].brandId} style={style}>\n  //       <Link\n  //         href={`/${curr}-${lang}/search?brandId=${brandsList[index].brandId}&type=${SEARCH_TYPE_SEARCH}`}\n  //       >\n  //         <a className=\"categories__list-link\">\n  //           {brandsList[index].brandTitle}\n  //         </a>\n  //       </Link>\n  //     </li>\n  //   );\n  //   // }\n  // };\n\n  var handleSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var q, callback;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              q = e.target.value;\n              brandQuery.search = q;\n              brandQuery.pageNumber = 1;\n\n              if (SearchTimer) {\n                clearTimeout(SearchTimer);\n                SearchTimer = null;\n              }\n\n              callback = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(brandQuery) {\n                  var res;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          setLoading(true);\n                          _context.prev = 1;\n                          _context.next = 4;\n                          return client_categoryBrands(brandQuery);\n\n                        case 4:\n                          res = _context.sent;\n\n                          if (res.result) {\n                            resCount = res.result.length;\n                            setbrandsList(res.result);\n                            setLoading(false);\n                          }\n\n                          _context.next = 12;\n                          break;\n\n                        case 8:\n                          _context.prev = 8;\n                          _context.t0 = _context[\"catch\"](1);\n                          setbrandsList([]);\n                          setLoading(false);\n\n                        case 12:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 8]]);\n                }));\n\n                return function callback(_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              SearchTimer = setTimeout(callback.bind(null, brandQuery), 500);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSearch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSeeMoreClick = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!loading) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              setSeeLoading(true);\n              brandQuery.pageNumber = brandQuery.pageNumber + 1;\n              _context3.prev = 5;\n              _context3.next = 8;\n              return client_categoryBrands(brandQuery);\n\n            case 8:\n              res = _context3.sent;\n\n              if (res.result) {\n                resCount = res.result.length;\n                setbrandsList([].concat(_toConsumableArray(brandsList), _toConsumableArray(res.result)));\n                setSeeLoading(false);\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.log(_context3.t0);\n              setSeeLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 12]]);\n    }));\n\n    return function handleSeeMoreClick(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"checklist__search\"\n  }, __jsx(SearchIcon, {\n    className: \"checklist__search-input-icon\"\n  }), __jsx(\"input\", {\n    onChange: handleSearch,\n    type: \"text\" // value={search}\n    ,\n    className: \"checklist__search-input\",\n    placeholder: \"search\"\n  })), loading ? __jsx(Loading, {\n    width: \"20px\",\n    height: \"20px\"\n  }) : __jsx(\"ul\", {\n    className: \"categories__list\"\n  }, brandsList.map(function (brand) {\n    return __jsx(\"li\", {\n      key: brand.brandId,\n      className: \"categories__list-item d-flex justify-content-between align-items-center\"\n    }, __jsx(Link, {\n      href: \"/\".concat(curr, \"-\").concat(lang, \"/search?brandId=\").concat(brand.brandId, \"&type=\").concat(SEARCH_TYPE_SEARCH)\n    }, __jsx(\"a\", {\n      className: \"categories__list-link\"\n    }, brand.brandTitle)), __jsx(\"span\", null, \"(\", brand.goodsCount, \")\"));\n  })), resCount >= brandsPageSize && !loading && __jsx(React.Fragment, null, seeloading ? __jsx(Loading, {\n    width: \"20px\",\n    height: \"20px\"\n  }) : __jsx(\"a\", {\n    href: \"\",\n    onClick: handleSeeMoreClick,\n    className: \"seemore__link-brands\"\n  }, __jsx(Translate, {\n    id: \"seemore\"\n  }))));\n};\n\nexport default Brands;","map":null,"metadata":{},"sourceType":"module"}