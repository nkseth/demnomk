{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { LandScapePhonesAndBigger } from \"../../../../../../../Responsive\";\nimport { BoxStyle1, BoxStyle2 } from \"../../../../../../common\";\nimport AddAddressStep1 from \"./AddAddressStep1\";\nimport AddAddressStep2 from \"./AddAddressStep2\";\nimport AddAddressStep3 from \"./AddAddressStep3\";\nimport SelectAddress from \"./SelectAddress\";\n\nclass AddressesAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setData\", data => {\n      const newData = _objectSpread({}, this.state.data);\n\n      for (let key in data) {\n        newData[key] = data[key];\n      }\n\n      this.setState({\n        data: newData\n      });\n    });\n\n    _defineProperty(this, \"setDefaultHandler\", e => {\n      this.setData({\n        isDefault: e.target.checked\n      });\n    });\n\n    console.log(this.props, \"----\");\n    const {\n      verifyPhone\n    } = this.props;\n    this.state = {\n      currentSituation: verifyPhone ? 2 : 1,\n      showSelectAddress: false,\n      data: {\n        isDefault: false,\n        phoneNumberVeri: {\n          requestId: verifyPhone ? verifyPhone.requestId : null,\n          addressId: verifyPhone ? verifyPhone.addressId : null,\n          phoneNumber: verifyPhone ? verifyPhone.phoneNumber : null,\n          phoneIso: verifyPhone ? verifyPhone.phoneIso : null,\n          phoneCode: verifyPhone ? verifyPhone.phoneCode : null\n        }\n      }\n    };\n    this.handleSituation = this.handleSituation.bind(this);\n  }\n\n  handleSituation({\n    type\n  }) {\n    let nextState;\n\n    switch (type) {\n      case \"addresses\":\n        this.setState({\n          currentSituation: 1\n        });\n        break;\n\n      case \"phoneveri\":\n        this.setState({\n          currentSituation: 2\n        });\n        break;\n\n      case \"changephone\":\n        this.setState({\n          currentSituation: 3\n        });\n        break;\n\n      case \"next\":\n        nextState = this.state.currentSituation >= 2 ? 3 : this.state.currentSituation + 1;\n        this.setState({\n          currentSituation: nextState\n        });\n        break;\n\n      case \"prev\":\n        break;\n\n      case \"showMap\":\n        this.setState({\n          showSelectAddress: true\n        });\n        break;\n\n      case \"hideMap\":\n        this.setState({\n          showSelectAddress: false\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  renderBoxHeader() {\n    return __jsx(React.Fragment, null, __jsx(\"h2\", {\n      className: \"user-panel__box-header\"\n    }, __jsx(Translate, {\n      id: \"addresses.addnewadd\"\n    })), this.state.currentSituation === 1 && __jsx(LandScapePhonesAndBigger, {\n      className: \"add-address-step1__check add-address-step1__check--desktop\"\n    }));\n  }\n\n  render() {\n    if (this.state.showSelectAddress) {\n      var _this$props$editItem, _this$props$editItem2;\n\n      return __jsx(CSSTransition, {\n        appear: true,\n        in: true,\n        classNames: \"user-panel__routes\",\n        timeout: 400\n      }, __jsx(BoxStyle2, null, __jsx(SelectAddress, {\n        setData: this.setData,\n        handleSituation: this.handleSituation,\n        lat: (_this$props$editItem = this.props.editItem) === null || _this$props$editItem === void 0 ? void 0 : _this$props$editItem.locationX,\n        lng: (_this$props$editItem2 = this.props.editItem) === null || _this$props$editItem2 === void 0 ? void 0 : _this$props$editItem2.locationY\n      })));\n    }\n\n    let page;\n\n    switch (this.state.currentSituation) {\n      case 1:\n        page = __jsx(AddAddressStep1, {\n          data: this.state.data,\n          handleSituation: this.handleSituation,\n          editItem: this.props.editItem,\n          setData: this.setData\n        });\n        break;\n\n      case 2:\n        page = __jsx(AddAddressStep2, {\n          addpage: this.props.addpage,\n          data: this.state.data.phoneNumberVeri,\n          setData: this.setData,\n          handleSituation: this.handleSituation\n        });\n        break;\n\n      case 3:\n        page = __jsx(AddAddressStep3, {\n          handleSituation: this.handleSituation,\n          data: this.state.data.phoneNumberVeri,\n          setData: this.setData\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return __jsx(BoxStyle1, {\n      headerContent: this.renderBoxHeader()\n    }, __jsx(SwitchTransition, null, __jsx(CSSTransition, {\n      classNames: \"user-panel__routes\",\n      timeout: 200,\n      key: this.state.currentSituation\n    }, page)));\n  }\n\n}\n\nexport default withRouter(AddressesAdd);","map":null,"metadata":{},"sourceType":"module"}