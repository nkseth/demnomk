{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { selectLang } from \"../../../../../appConfigSlice\";\nimport { client_sendForgetEmail } from \"../../../../../lib/api/client/clientCustomer\";\nimport { validateEmail } from \"../../../../../lib/formValidator\";\nimport { getErrorMsg } from \"../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { Button, FormErrorMsg, Loading } from \"../../../../common\";\nimport { VERIFY_EMAIL } from \"../SignIn/SignIn\";\n\nconst EnterEmail = ({\n  dis,\n  setForgotEmail\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState(false);\n  const lang = useSelector(selectLang);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (submitStatus) return;\n\n    for (let key in errors) {\n      if (errors[key]) {\n        toast.error(getErrorMsg(lang, \"error-detected\"), getToastConfig());\n        return;\n      }\n    }\n\n    setSubmitStatus(true);\n\n    try {\n      const res = await client_sendForgetEmail({\n        email\n      });\n      setForgotEmail(email);\n      dis({\n        type: VERIFY_EMAIL\n      });\n    } catch (err) {\n      toast.error(err.response.data.message, getToastConfig());\n      setSubmitStatus(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"forgetpass\" // onClick={() => {\n    //   dis({ type: VERIFY_EMAIL });\n    // }}\n\n  }, __jsx(\"section\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"h4\", {\n    className: \"auth__header-sub text-align-center-ltr\"\n  }, __jsx(Translate, {\n    id: \"forget-pass\"\n  })), __jsx(\"h4\", {\n    className: \"auth__header mt-0 text-align-center-ltr\"\n  }, __jsx(Translate, {\n    id: \"enter-email\"\n  })), __jsx(\"div\", {\n    className: \"forgetpass__input-cnt\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", {\n    className: \"auth__form-label\"\n  }, __jsx(\"span\", {\n    className: \"auth__input-label\"\n  }, __jsx(Translate, {\n    id: \"email\"\n  })), __jsx(Translate, null, ({\n    translate\n  }) => {\n    return __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"email\",\n      placeholder: translate(\"email-placeholder\"),\n      onChange: event => {\n        setEmail(event.target.value);\n      },\n      value: email,\n      name: \"email\",\n      required: true,\n      onBlur: e => {\n        validateEmail({\n          name: \"email\",\n          value: e.target.value,\n          handler: setErrors,\n          lang\n        });\n      },\n      pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\n    });\n  }), __jsx(FormErrorMsg, {\n    show: errors[\"email\"],\n    msg: errors[\"email\"]\n  })), __jsx(\"div\", {\n    className: \"forgetpass__btn-cnt\"\n  }, __jsx(Button, {\n    radius: \"true\",\n    value: submitStatus ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"submit-email\"\n    })\n  }))))));\n};\n\nexport default EnterEmail;","map":null,"metadata":{},"sourceType":"module"}