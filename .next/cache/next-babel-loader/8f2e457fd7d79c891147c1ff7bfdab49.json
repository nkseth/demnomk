{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { UploadBox, Loading } from \"../../../../common\";\nimport { COMPLETE_AND_NEXT } from \"../CreateShopConstant\";\nimport { CreateShopContext } from \"../CreateShopContext\";\nimport { FormErrorMsg } from \"../../../../common\";\nimport Select from \"react-select\";\nimport { client_getShopActiveDocumentById } from \"./../../../../../lib/api/client/clientShop\";\nimport { BANKGROUPID } from \"./../CreateShopConstant\";\n\nclass Bank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setErrors\", func => {\n      const error = func(this.state.errors);\n      this.setState({\n        errors: error\n      });\n    });\n\n    _defineProperty(this, \"handleBenefityChange\", event => {\n      this.setState({\n        beneficiary: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleBankChange\", event => {\n      this.setState({\n        bank: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleBranchChange\", event => {\n      this.setState({\n        branch: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleAccountChange\", event => {\n      this.setState({\n        account: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleIbanChange\", event => {\n      this.setState({\n        iban: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSwiftCodeChange\", event => {\n      this.setState({\n        swiftCode: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleCurrencyChange\", event => {\n      this.setState({\n        currencyId: event.value\n      });\n    });\n\n    _defineProperty(this, \"handleSelectFile\", (file, index) => {\n      this.state.files[index] = file[0];\n      this.state.filesModel[index].FileUrl = \"file.jpg\";\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n\n      for (let key in this.state.errors) {\n        if (this.state.errors[key]) {\n          return;\n        }\n      }\n\n      let valid = true; // this.state.files.forEach((element) => {\n      //   if (element == null) {\n      //     this.setState({ showUploadFileError: true });\n      //     valid = false;\n      //   }\n      // });\n\n      if (valid) {\n        this.context.handleBank(this.state.beneficiary, this.state.bank, this.state.branch, this.state.account, this.state.iban, this.state.swiftCode, this.state.currencyId, this.state.files, this.state.filesModel);\n        this.context.handleStep(COMPLETE_AND_NEXT);\n      }\n    });\n\n    this.state = {\n      beneficiary: \"\",\n      bank: \"\",\n      branch: \"\",\n      account: \"\",\n      iban: \"\",\n      swiftCode: \"\",\n      currencyId: 0,\n      errors: {},\n      filesModel: [],\n      files: [],\n      showComponent: false,\n      showUploadFileError: false,\n      showLoader: false,\n      currencyOptions: [{\n        value: 0,\n        label: \"Dollar\"\n      }, {\n        value: 1,\n        label: \"Dinar\"\n      }]\n    };\n    this.handleBenefityChange = this.handleBenefityChange.bind(this);\n    this.handleBankChange = this.handleBankChange.bind(this);\n    this.handleBranchChange = this.handleBranchChange.bind(this);\n    this.handleAccountChange = this.handleAccountChange.bind(this);\n    this.handleIbanChange = this.handleIbanChange.bind(this);\n    this.handleSwiftCodeChange = this.handleSwiftCodeChange.bind(this);\n    this.handleCurrencyChange = this.handleCurrencyChange.bind(this);\n    this.handleBenefityChange = this.handleBenefityChange.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      showLoader: true\n    });\n    const result = await client_getShopActiveDocumentById(BANKGROUPID);\n    this.setState({\n      documents: result.result\n    });\n\n    if (this.context.filesData.bankFiles.length > 0) {\n      this.setState({\n        beneficiary: this.context.formData.bankBeneficiaryName,\n        bank: this.context.formData.bankName,\n        branch: this.context.formData.bankBranch,\n        account: this.context.formData.bankAccountNumber,\n        iban: this.context.formData.bankIban,\n        swiftCode: this.context.formData.bankSwiftCode,\n        currencyId: this.context.formData.fkCurrencyId,\n        files: this.context.filesData.bankFiles,\n        filesModel: this.context.filesData.bankFileDto\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            showComponent: true\n          });\n        }, 200);\n      });\n    } else {\n      result.result.forEach((item, index) => {\n        this.state.filesModel.push({\n          fileId: 0,\n          shopId: 0,\n          FkDocumentTypeId: this.state.documents[index].documentTypeId,\n          FileUrl: \"\",\n          index: index\n        });\n        this.state.files.push(null);\n      });\n      this.setState({\n        showComponent: true\n      });\n    }\n\n    this.setState({\n      showLoader: false\n    });\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      className: \"createshop__transition-cnt\",\n      onSubmit: this.handleSubmit\n    }, this.state.showLoader ? __jsx(Loading, {\n      type: \"gray\",\n      width: \"11%\",\n      height: \"70%\"\n    }) : __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"mt-5\"\n    }, __jsx(\"h3\", {\n      className: \"createshop__header-text\"\n    }, __jsx(Translate, {\n      id: \"store.store-msg1\"\n    })), __jsx(\"div\", {\n      className: \"createshop__form createshop__form--bank\"\n    }, __jsx(Translate, null, ({\n      translate: t\n    }) => {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"createshop__form-cnt row justify-content-between\"\n      }, __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.bene-name\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.bene-name-placeholder\"),\n        onChange: this.handleBenefityChange,\n        value: this.state.beneficiary\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"ben\"],\n        msg: this.state.errors[\"ben\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.bank-name\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.bank-name-placeholder\"),\n        onChange: this.handleBankChange,\n        value: this.state.bank\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"bank\"],\n        msg: this.state.errors[\"bank\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.branch-name\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.branch-name-placeholder\"),\n        onChange: this.handleBranchChange,\n        value: this.state.branch\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"branch\"],\n        msg: this.state.errors[\"branch\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.acc-number\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.acc-number-placeholder\"),\n        onChange: this.handleAccountChange,\n        value: this.state.account\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"account\"],\n        msg: this.state.errors[\"account\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.IBAN-number\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.IBAN-number-placeholder\"),\n        onChange: this.handleIbanChange,\n        value: this.state.iban\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"iban\"],\n        msg: this.state.errors[\"iban\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.swift-code\"\n      })), __jsx(\"input\", {\n        className: \"gray__input\",\n        type: \"text\",\n        placeholder: t(\"bank.swift-code-placeholder\"),\n        onChange: this.handleSwiftCodeChange,\n        value: this.state.swiftCode\n      }), __jsx(FormErrorMsg, {\n        show: this.state.errors[\"swift\"],\n        msg: this.state.errors[\"swift\"]\n      }))), __jsx(\"div\", {\n        className: \"col-12\"\n      }, __jsx(\"label\", {\n        className: \"auth__form-label\"\n      }, __jsx(\"span\", {\n        className: \"auth__input-label\"\n      }, __jsx(Translate, {\n        id: \"bank.currency\"\n      })), __jsx(Select, {\n        className: \"react-select\",\n        options: this.state.currencyOptions,\n        onChange: this.handleCurrencyChange,\n        placeholder: t(\"bank.currency-placeholder\"),\n        value: this.state.currencyId == 0 ? this.state.currencyOptions[0] : this.state.currencyOptions[1],\n        required: true\n      }))), this.state.showComponent && this.state.documents.map((item, index) => {\n        return __jsx(\"div\", {\n          className: \"col-12\",\n          key: item.fkPersonId\n        }, __jsx(\"p\", {\n          className: \"createshop__check-text mt-5\"\n        }, __jsx(Translate, {\n          id: \"document.upload\"\n        }), \" \", item.documentTitle), __jsx(UploadBox, {\n          className: \"createshop__centered-upload\",\n          handleSelectFile: this.handleSelectFile,\n          index: index,\n          oldFile: this.state.files\n        }), __jsx(\"div\", {\n          className: \"col-12 text-center mt-4\"\n        }, this.state.showUploadFileError && this.state.files[index] == null && __jsx(\"span\", {\n          className: \"country-error\"\n        }, __jsx(Translate, {\n          id: \"document.upload-file-error\"\n        }))));\n      })));\n    }))), __jsx(\"div\", {\n      className: \"createshop__btm text-align-center-ltr mb-5\"\n    }, __jsx(\"div\", {\n      className: \"auth__btn\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"createshop__primary-btn primary-btn\"\n    }, __jsx(Translate, {\n      id: \"country.next\"\n    }))))));\n  }\n\n}\n\n_defineProperty(Bank, \"contextType\", CreateShopContext);\n\nexport default Bank;","map":null,"metadata":{},"sourceType":"module"}