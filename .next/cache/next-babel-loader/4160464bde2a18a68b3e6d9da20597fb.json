{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // import \"./GoodDetail.scss\";\n// import \"./GoodDetail-rtl.scss\";\n\nimport { connect } from \"react-redux\";\nimport { BoxStyle1, BoxStyle2, BreadCrump } from \"../../../common\";\nimport { Translate } from \"react-localize-redux\";\nimport Cookies from \"js-cookie\";\nimport { ItemDetail, DeliveryPanel, GoodDetailAside, GoodDetailTabs } from \"./GoodDetailLayouts\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { selectLang, selectCurr, selectLogin, PREVLINK_CHANGE } from \"../../../../appConfigSlice\";\nimport { generatetGoodsVarietyExistencePossibilityAndPrintStructure } from \"./GoodDetailAlgo\";\nimport { GoodDetailContext } from \"./GoodDetailContext\";\nimport { client_addToCart, client_likeGood } from \"../../../../lib/api/client/clientCart\";\nimport { setCartCookie } from \"../../../../lib/helpers\";\nimport axiosClient from \"../../../../lib/api/axios\";\nimport { withRouter } from \"next/router\";\nimport { client_viewGood } from \"../../../../lib/api/client/clientCommon\";\nimport { selectWishCount, addWishCount } from \"../CartAndWishlist/cartAndWishlistSlice\";\nimport GoodsSlider from \"../../GoodsSlider\";\nimport { DesktopsAndBigger } from \"../../../../Responsive\";\n\nclass GoodDetail extends React.Component {\n  constructor(props) {\n    var _this$goodData, _this$goodData2, _this$goodData3, _this$goodData4, _this$goodData5, _this$goodData6, _this$goodData7, _this$goodData8, _this$goodData9, _this$goodData10, _this$goodData11, _this$goodData12, _this$goodData13, _this$goodData14, _this$goodData15, _this$goodData16;\n\n    super(props);\n\n    _defineProperty(this, \"handleCityClick\", (providerCityDeliveryType, shippingImage, shippingDesc, providerCityDeliveryPostTimeoutDay, providerCityText, selectedCountryId, selectedCityId, selectedProvinceId) => {\n      this.setState(state => {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          providerCityText,\n          selectedCityId,\n          selectedCountryId,\n          selectedProvinceId,\n          providerCityDeliveryType,\n          shippingImage,\n          shippingDesc,\n          providerCityDeliveryPostTimeoutDay,\n          deliveryBoxLoading: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleSelectedItemCount\", count => {\n      this.setState({\n        selectedItemCount: count\n      });\n    });\n\n    _defineProperty(this, \"addToCart\", async () => {\n      let count = this.state.selectedItemCount;\n      if (!count) count = 1;\n\n      try {\n        const result = await client_addToCart({\n          goodId: this.goodId,\n          providerId: this.state.selectedProviderId,\n          cityId: this.state.selectedCityId,\n          count: count,\n          countryId: this.state.selectedCountryId,\n          provinceId: this.state.selectedProvinceId\n        });\n\n        if (result.status === 200) {\n          const id = result.result.cookieId;\n          const cartId = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name_cart);\n\n          if (!cartId && id) {\n            setCartCookie(id);\n            axiosClient.setCartId(id);\n          }\n\n          this.props.router.push(`/${this.props.curr}-${this.props.lang}/cart`);\n        }\n      } catch (err) {// return false;\n      }\n    });\n\n    _defineProperty(this, \"handleDeliveryBoxLoading\", show => {\n      this.setState({\n        deliveryBoxLoading: show\n      });\n    });\n\n    _defineProperty(this, \"handleVariSelect\", (newVariSelected, providerIndex) => {\n      // this.setState({ variSelected: newVariSelected });\n      this.setState(state => {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedItemCount: 1,\n          variSelected: newVariSelected,\n          SelectedProviderIndex: providerIndex,\n          selectedProviderId: this.goodData.goodsProviderVarity[providerIndex].providerId\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleNonMatchedVariSelect\", providerIndex => {\n      const newVariSelect = {};\n      this.goodData.goodsProviderVarity[providerIndex].tGoodsVariety.forEach(vari => {\n        newVariSelect[vari.parameterTitle] = vari.fkVariationParameterValueId;\n      });\n      this.setState(state => {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedItemCount: 1,\n          variSelected: newVariSelect,\n          SelectedProviderIndex: providerIndex,\n          selectedProviderId: this.goodData.goodsProviderVarity[providerIndex].providerId\n        });\n      });\n    });\n\n    _defineProperty(this, \"openPanel\", () => {\n      this.setState({\n        inProp: true\n      });\n    });\n\n    _defineProperty(this, \"closePanel\", () => {\n      this.setState({\n        inProp: false\n      });\n    });\n\n    _defineProperty(this, \"handleLikeClick\", e => {\n      e.preventDefault();\n\n      if (!this.props.isLogin) {\n        this.props.saveLink(this.props.router.asPath);\n        this.props.router.push(`/${this.props.curr}-${this.props.lang}/Auth`);\n        return;\n      }\n\n      const result = client_likeGood(this.goodId);\n      this.setState({\n        itemLiked: !this.state.itemLiked\n      });\n      const wishCount = this.state.itemLiked ? this.props.wishCount - 1 : this.props.wishCount + 1;\n      this.props.addWishCount(wishCount);\n    });\n\n    _defineProperty(this, \"handleBuyNow\", async () => {\n      if (!this.props.isLogin) {\n        this.props.saveLink(this.props.router.asPath);\n        this.props.router.push(`/${this.props.curr}-${this.props.lang}/Auth`);\n        return;\n      }\n\n      let count = this.state.selectedItemCount;\n      if (!count) count = 1;\n\n      try {\n        const result = await client_addToCart({\n          goodId: this.goodId,\n          providerId: this.state.selectedProviderId,\n          cityId: this.state.selectedCityId,\n          count: count,\n          countryId: this.state.selectedCountryId,\n          provinceId: this.state.selectedProvinceId,\n          oneClick: true\n        });\n\n        if (result.status === 200) {\n          if (result.result.setOneClick) {\n            this.props.router.push(`/${this.props.curr}-${this.props.lang}/order?to=pay`);\n          } else {\n            this.props.router.push(`/${this.props.curr}-${this.props.lang}/cart`);\n          }\n        }\n      } catch (err) {// return false;\n      }\n    });\n\n    this.lang = this.props.lang;\n    this.panelRef = /*#__PURE__*/React.createRef();\n    this.goodData = this.props.data;\n    this.providerId = this.goodData.goodsProviderVarity[0] && this.goodData.goodsProviderVarity[0].providerId;\n    this.goodId = this.goodData.goodsId;\n    const [printStructure, VarietyExistencePossibility] = generatetGoodsVarietyExistencePossibilityAndPrintStructure(this.goodData.goodsProviderVarity);\n    this.VariSelected = {};\n    this.goodData.goodsProviderVarity[0].tGoodsVariety.forEach(vari => {\n      this.VariSelected[vari.parameterTitle] = vari.fkVariationParameterValueId;\n    });\n    this.state = {\n      descriptionCalculateShopRate: (_this$goodData = this.goodData) === null || _this$goodData === void 0 ? void 0 : _this$goodData.descriptionCalculateShopRate,\n      saleWithCall: (_this$goodData2 = this.goodData) === null || _this$goodData2 === void 0 ? void 0 : _this$goodData2.saleWithCall,\n      isDownloadable: (_this$goodData3 = this.goodData) === null || _this$goodData3 === void 0 ? void 0 : _this$goodData3.isDownloadable,\n      inProp: false,\n      variSelected: this.VariSelected,\n      selectedItemCount: 1,\n      changeSelectedItemCount: this.handleSelectedItemCount,\n      variPrintStructure: printStructure,\n      VarietyExistencePossibility: VarietyExistencePossibility,\n      handleVariSelect: this.handleVariSelect,\n      handleNonMatchedVariSelect: this.handleNonMatchedVariSelect,\n      SelectedProviderIndex: 0,\n      selectedProviderId: (_this$goodData4 = this.goodData) === null || _this$goodData4 === void 0 ? void 0 : _this$goodData4.goodsProviderVarity[0].providerId,\n      providerShopId: (_this$goodData5 = this.goodData) === null || _this$goodData5 === void 0 ? void 0 : _this$goodData5.goodsProviderVarity[0].fkShopId,\n      providerCityId: (_this$goodData6 = this.goodData) === null || _this$goodData6 === void 0 ? void 0 : _this$goodData6.shopCityId,\n      selectedCityId: (_this$goodData7 = this.goodData) === null || _this$goodData7 === void 0 ? void 0 : _this$goodData7.shopCityId,\n      selectedCountryId: (_this$goodData8 = this.goodData) === null || _this$goodData8 === void 0 ? void 0 : _this$goodData8.shopCountryId,\n      providerCountryId: (_this$goodData9 = this.goodData) === null || _this$goodData9 === void 0 ? void 0 : _this$goodData9.shopCountryId,\n      selectedProvinceId: (_this$goodData10 = this.goodData) === null || _this$goodData10 === void 0 ? void 0 : _this$goodData10.shopProvinceId,\n      providerProvinceId: (_this$goodData11 = this.goodData) === null || _this$goodData11 === void 0 ? void 0 : _this$goodData11.shopProvinceId,\n      providerCityText: (_this$goodData12 = this.goodData) === null || _this$goodData12 === void 0 ? void 0 : _this$goodData12.shopCityTitle,\n      providerCityDeliveryType: (_this$goodData13 = this.goodData) === null || _this$goodData13 === void 0 ? void 0 : _this$goodData13.goodsProviderVarity[0].shippingPossibilities,\n      providerCityDeliveryTypeImage: (_this$goodData14 = this.goodData) === null || _this$goodData14 === void 0 ? void 0 : _this$goodData14.goodsProviderVarity[0].shippingImage,\n      providerCityDeliveryTypeDesc: (_this$goodData15 = this.goodData) === null || _this$goodData15 === void 0 ? void 0 : _this$goodData15.goodsProviderVarity[0].shippingDesc,\n      providerCityDeliveryPostTimeoutDay: (_this$goodData16 = this.goodData) === null || _this$goodData16 === void 0 ? void 0 : _this$goodData16.goodsProviderVarity[0].postTimeoutDay,\n      deliveryBoxLoading: false,\n      handleCityClick: this.handleCityClick,\n      handleDeliveryBoxLoading: this.handleDeliveryBoxLoading,\n      itemLiked: this.goodData.like\n    };\n  }\n\n  componentDidMount() {\n    client_viewGood(this.goodId).then(() => {}).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    var _this$goodData$parent, _this$goodData17, _this$goodData18;\n\n    return __jsx(GoodDetailContext.Provider, {\n      value: this.state\n    }, __jsx(\"div\", {\n      className: \"container siteWidthContainer\"\n    }, __jsx(DesktopsAndBigger, {\n      className: \"w-100\"\n    }, ((_this$goodData$parent = this.goodData.parentCategory) === null || _this$goodData$parent === void 0 ? void 0 : _this$goodData$parent.length) > 0 ? __jsx(BreadCrump, {\n      className: \"col-12 goods-details-Bread-crump\",\n      data: this.goodData.parentCategory,\n      isGoodsDetails: true,\n      goodsName: (_this$goodData17 = this.goodData) === null || _this$goodData17 === void 0 ? void 0 : _this$goodData17.title\n    }) : __jsx(\"div\", {\n      style: {\n        height: \"10px\",\n        width: \"100%\"\n      }\n    })), __jsx(\"div\", {\n      className: \"goodDetail\"\n    }, __jsx(CSSTransition, {\n      unmountOnExit: true,\n      in: this.state.inProp,\n      timeout: 300,\n      classNames: \"goodDetail__panel--anim\",\n      nodeRef: this.panelRef\n    }, __jsx(DeliveryPanel, {\n      panelRef: this.panelRef,\n      closePanel: this.closePanel\n    })), __jsx(\"div\", {\n      className: \"row goodDetail__row\"\n    }, __jsx(\"section\", {\n      className: \"col-lg-9 col-12 goodDetail__row-p-0\"\n    }, __jsx(\"article\", {\n      className: \"goodDetail__left-top-cnt\"\n    }, __jsx(BoxStyle2, null, __jsx(ItemDetail, {\n      handleLikeClick: this.handleLikeClick,\n      openPanel: this.openPanel,\n      data: this.goodData\n    }))), __jsx(\"article\", {\n      className: \"goodDetail__left-bottom-cnt\"\n    }, __jsx(BoxStyle2, null, __jsx(GoodDetailTabs, {\n      description: (_this$goodData18 = this.goodData) === null || _this$goodData18 === void 0 ? void 0 : _this$goodData18.description\n    })))), __jsx(\"aside\", {\n      className: \"col-lg-3 col-12 goodDetail__aside\"\n    }, __jsx(BoxStyle2, null, __jsx(GoodDetailAside, {\n      data: this.goodData,\n      handleLikeClick: this.handleLikeClick,\n      addToCart: this.addToCart,\n      handleBuyNow: this.handleBuyNow,\n      providerId: this.providerId,\n      goodId: this.goodId,\n      shopDetailAccess: this.goodData.shopDetailAccess\n    })))), __jsx(\"section\", {\n      className: \"goodDetail__recommend\"\n    }, this.goodData.recommendation && __jsx(Translate, null, ({\n      translate\n    }) => {\n      return __jsx(BoxStyle1, {\n        headerContent: translate(\"common.recommended\")\n      }, __jsx(GoodsSlider, {\n        reloadOnClick: true,\n        data: this.goodData.recommendation,\n        count: 6\n      }));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  saveLink: link => {\n    return {\n      type: PREVLINK_CHANGE,\n      payload: {\n        link\n      }\n    };\n  },\n  addWishCount\n};\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state),\n    isLogin: selectLogin(state).isLogin,\n    wishCount: selectWishCount(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GoodDetail));","map":null,"metadata":{},"sourceType":"module"}