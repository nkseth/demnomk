{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { selectLang } from \"../../../../../appConfigSlice\";\nimport { client_sendForgetEmail } from \"../../../../../lib/api/client/clientCustomer\";\nimport { validateEmail } from \"../../../../../lib/formValidator\";\nimport { getErrorMsg } from \"../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { Button, FormErrorMsg, Loading } from \"../../../../common\";\nimport { VERIFY_EMAIL } from \"../SignIn/SignIn\";\n\nvar EnterEmail = function EnterEmail(_ref) {\n  var dis = _ref.dis,\n      setForgotEmail = _ref.setForgotEmail;\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState({}),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(false),\n      submitStatus = _useState3[0],\n      setSubmitStatus = _useState3[1];\n\n  var lang = useSelector(selectLang);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var key, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!submitStatus) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.t0 = _regeneratorRuntime.keys(errors);\n\n            case 4:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 11;\n                break;\n              }\n\n              key = _context.t1.value;\n\n              if (!errors[key]) {\n                _context.next = 9;\n                break;\n              }\n\n              toast.error(getErrorMsg(lang, \"error-detected\"), getToastConfig());\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.next = 4;\n              break;\n\n            case 11:\n              setSubmitStatus(true);\n              _context.prev = 12;\n              _context.next = 15;\n              return client_sendForgetEmail({\n                email: email\n              });\n\n            case 15:\n              res = _context.sent;\n              setForgotEmail(email);\n              dis({\n                type: VERIFY_EMAIL\n              });\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t2 = _context[\"catch\"](12);\n              toast.error(_context.t2.response.data.message, getToastConfig());\n              setSubmitStatus(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[12, 20]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"forgetpass\" // onClick={() => {\n    //   dis({ type: VERIFY_EMAIL });\n    // }}\n\n  }, __jsx(\"section\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"h4\", {\n    className: \"auth__header-sub text-align-center-ltr\"\n  }, __jsx(Translate, {\n    id: \"forget-pass\"\n  })), __jsx(\"h4\", {\n    className: \"auth__header mt-0 text-align-center-ltr\"\n  }, __jsx(Translate, {\n    id: \"enter-email\"\n  })), __jsx(\"div\", {\n    className: \"forgetpass__input-cnt\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", {\n    className: \"auth__form-label\"\n  }, __jsx(\"span\", {\n    className: \"auth__input-label\"\n  }, __jsx(Translate, {\n    id: \"email\"\n  })), __jsx(Translate, null, function (_ref3) {\n    var translate = _ref3.translate;\n    return __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"email\",\n      placeholder: translate(\"email-placeholder\"),\n      onChange: function onChange(event) {\n        setEmail(event.target.value);\n      },\n      value: email,\n      name: \"email\",\n      required: true,\n      onBlur: function onBlur(e) {\n        validateEmail({\n          name: \"email\",\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang\n        });\n      },\n      pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\n    });\n  }), __jsx(FormErrorMsg, {\n    show: errors[\"email\"],\n    msg: errors[\"email\"]\n  })), __jsx(\"div\", {\n    className: \"forgetpass__btn-cnt\"\n  }, __jsx(Button, {\n    radius: \"true\",\n    value: submitStatus ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"submit-email\"\n    })\n  }))))));\n};\n\nexport default EnterEmail;","map":null,"metadata":{},"sourceType":"module"}