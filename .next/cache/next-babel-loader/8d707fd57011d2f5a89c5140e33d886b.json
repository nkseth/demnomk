{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { BoxStyle2, SelectBox2 as SelectBox, Loading } from \"../../../../../../common\";\nimport { Translate } from \"react-localize-redux\";\nimport { ReactComponent as BackIcon } from \"./../../../../../../../assets/icons/back.svg\";\nimport { Link } from \"react-router-dom\";\nimport SlideDown from \"react-slidedown\";\nimport { ReturnItem } from \".\";\nimport jyalBlackIcon from \"./../../../../../../../assets/icons/img-jyal-backicon.svg\";\nimport { client_getReturningReasonList, client_getReturningActionList, client_submitReturnRequest, client_getReturningProduct } from \"../../../../../../../lib/api/client/clientUserPanel\";\nimport { ProtraitPhonesAndBigger, ProtraitPhones } from \"../../../../../../../Responsive\";\nimport Select from \"react-select\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { getErrorMsg } from \"../../../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../../../lib/toast\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setDropQuanyityOPtions\", () => {\n      let options = [];\n\n      for (let index = this.props.data.quantity; index < 1; index--) {\n        options.push(index);\n      }\n\n      this.setState({\n        quantityOPtions: options\n      });\n    });\n\n    _defineProperty(this, \"selecAction\", id => {\n      this.setState({\n        fkReturningActionId: id\n      });\n    });\n\n    _defineProperty(this, \"handleSelectReason\", item => {\n      this.setState({\n        fkReturningReasonId: item.value,\n        reasonComment: item.condition,\n        selectedReasopnOPtions: item\n      });\n    });\n\n    _defineProperty(this, \"handleCommentChange\", e => {\n      this.setState({\n        requestComment: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleQuantiyChange\", value => {\n      this.setState({\n        quantity: value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async () => {\n      if (this.state.fkReturningReasonId == 0) {\n        this.setState({\n          selectReasonError: true\n        });\n      }\n\n      if (this.state.fkReturningActionId == 0) {\n        this.setState({\n          actionReasonError: true\n        });\n      }\n\n      try {\n        this.setState({\n          showButtonLoader: true\n        });\n        const result = await client_submitReturnRequest({\n          fkOrderItemId: this.props.match.params.id,\n          fkReturningReasonId: this.state.fkReturningReasonId,\n          fkReturningActionId: this.state.fkReturningActionId,\n          requestComment: this.state.requestComment,\n          quantity: this.state.quantity\n        });\n        this.setState({\n          showButtonLoader: false\n        });\n\n        if (result.status == 200) {\n          toast.success(getErrorMsg(this.props.lang, \"return-req\"), getToastConfig());\n          this.props.history.push(\"/\" + this.props.currency + \"-\" + this.props.lang + \"/panel/returns\");\n        }\n      } catch (error) {\n        var _error$response;\n\n        this.setState({\n          showButtonLoader: false\n        });\n        toast.error((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message, getToastConfig());\n      }\n    });\n\n    this.state = {\n      showRatingInput: false,\n      showMoreAddresses: false,\n      showLoader: false,\n      showButtonLoader: false,\n      fkReturningReasonId: 0,\n      fkReturningActionId: 0,\n      reasonComment: \"\",\n      requestComment: \"\",\n      quantity: 1,\n      reasopnOPtions: [],\n      selectedReasopnOPtions: null,\n      actionOptions: [],\n      quantityOPtions: [],\n      data: null,\n      selectReasonError: false,\n      actionReasonError: false\n    };\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const reasonResult = await client_getReturningReasonList();\n    let options = [];\n    reasonResult.result.forEach(element => {\n      options.push({\n        value: element.reasonId,\n        label: element.reasonTitle,\n        condition: element.returnCondition\n      });\n    });\n    const actionResult = await client_getReturningActionList();\n    this.setDropQuanyityOPtions();\n    this.setState({\n      reasopnOPtions: options,\n      actionOptions: actionResult.result\n    });\n\n    try {\n      const product = await client_getReturningProduct(this.props.match.params.id);\n      this.setState({\n        data: product.result\n      });\n    } catch (error) {\n      this.props.history.push(\"/\" + this.props.currency + \"-\" + this.props.lang + \"/panel/returns\");\n    }\n  }\n\n  handleSelectChange(data) {\n    if (data.name === \"refund\") {\n      this.setState({\n        showRefundDetail: true\n      });\n    } else {\n      this.setState({\n        showRefundDetail: false\n      });\n    }\n  }\n\n  handleShowMoreAddresses() {\n    this.setState(state => {\n      return {\n        showMoreAddresses: !state.showMoreAddresses\n      };\n    });\n  }\n\n  renderBoxHeader() {\n    return __jsx(\"header\", {\n      className: \"mapAddress__header\"\n    }, __jsx(Link, {\n      to: this.props.match.url.split(\"/\").slice(0, -1).join(\"/\"),\n      className: \"orderDetail__backlink\"\n    }, __jsx(BackIcon, {\n      className: \"mapAddress__back-icon\"\n    }), __jsx(\"div\", {\n      className: \"orders__item-header\"\n    }, __jsx(\"h2\", {\n      className: \"orders__item-cnt-header text-transform-none\"\n    }, __jsx(Translate, {\n      id: \"returns.returns\"\n    })))));\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      className: \"order-review returns-add-single\"\n    }, __jsx(BoxStyle2, {\n      headerContent: this.renderBoxHeader()\n    }, __jsx(\"div\", {\n      className: \"col-12 col-lg-7\"\n    }, this.state.data && __jsx(ReturnItem, {\n      withoutRightBox: true,\n      withoutReason: true,\n      currency: this.props.currency,\n      data: this.state.data\n    }), __jsx(\"div\", {\n      className: \"mt-4 row no-gutters\"\n    }, __jsx(\"div\", {\n      className: \"col-12 col-sm-7 cart-item__quantity\"\n    }, __jsx(\"span\", {\n      className: \"order-cancel__text\"\n    }, __jsx(Translate, {\n      id: \"returns.return-msg1\"\n    })), __jsx(Select, {\n      className: \"react-select\",\n      options: this.state.reasopnOPtions,\n      onChange: this.handleSelectReason,\n      placeholder: __jsx(Translate, {\n        id: \"returns.select-reason-place\"\n      }),\n      value: this.state.selectedReasopnOPtions,\n      required: true\n    })), this.state.selectReasonError && __jsx(\"span\", {\n      className: \"error-text\"\n    }, __jsx(Translate, {\n      id: \"returns.reason-error\"\n    }))), __jsx(\"div\", {\n      className: \"mt-3 returns-add-single__box-gray\"\n    }, __jsx(\"p\", {\n      className: \"mb-0 returns-add-single__text2\"\n    }, this.state.reasonComment)), __jsx(Translate, null, ({\n      translate: t\n    }) => {\n      return __jsx(\"textarea\", {\n        value: this.state.requestComment,\n        onChange: this.handleCommentChange,\n        placeholder: t(\"returns.return-des-placeholder\"),\n        className: \"gray__input order-review__text-area\",\n        required: true\n      });\n    })), __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(\"div\", {\n      className: \"returns-add-single__slc-cnt\"\n    }, __jsx(\"p\", {\n      className: \"returns-add-single__text3 returns-add-single__text3--bold\"\n    }, __jsx(Translate, {\n      id: \"returns.req-type\"\n    })), __jsx(SelectBox, {\n      className: \"returns-add-single__select-box\",\n      onChange: this.handleSelectChange.bind(this)\n    }, this.state.actionOptions.map(item => {\n      return __jsx(SelectBox.SelectItem, {\n        key: item.returningTypeId,\n        handleSelect: this.selecAction,\n        name: item.returningTypeTitle,\n        value: item.returningTypeId\n      }, __jsx(\"span\", {\n        className: \"order-review__text\"\n      }, item.returningTypeTitle));\n    })), this.state.actionReasonError && __jsx(\"span\", {\n      className: \"error-text\"\n    }, __jsx(Translate, {\n      id: \"returns.action-error\"\n    }))), __jsx(SlideDown, null, this.state.showRefundDetail && __jsx(\"div\", {\n      className: \"returns-add-single__box-gray\"\n    }, __jsx(\"div\", {\n      className: \"text-align-right\"\n    }, __jsx(\"img\", {\n      src: jyalBlackIcon,\n      alt: \"jyal refund icon\",\n      className: \"d-inline\"\n    }), __jsx(\"span\", {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      className: \"d-inline ml-4 orders__header-gray-text\"\n    }, \"Refund to Wallet\")), __jsx(\"p\", {\n      className: \"mb-0 mt-3 returns-add-single__text2\"\n    }, \"The amount of returned or canceled purchases will be refunded to your wallet\")))), __jsx(ProtraitPhonesAndBigger, null, __jsx(\"button\", {\n      onClick: this.handleSubmit.bind(this),\n      className: \"primary-btn order-review__submit-btn\"\n    }, this.state.showButtonLoader ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"returns.submit-req\"\n    }))), __jsx(ProtraitPhones, null, __jsx(\"div\", {\n      className: \"checkout-fix\"\n    }, __jsx(\"button\", {\n      onClick: this.handleSubmit.bind(this),\n      className: \"primary-btn returns__add-btn\"\n    }, this.state.showButtonLoader ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"returns.submit-req\"\n    }))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}