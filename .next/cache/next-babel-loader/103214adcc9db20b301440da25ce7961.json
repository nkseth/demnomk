{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // import \"./CreateShop.scss\";\n// import \"./CreateShop-rtl.scss\";\n\nimport { connect } from \"react-redux\";\nimport { Translate } from \"react-localize-redux\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CreateShopContext } from \"./CreateShopContext\";\nimport classnames from \"classnames\";\nimport BackIcon from \"./../../../../assets/icons/back.svg\";\nimport { getErrorMsg } from \"../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../lib/toast\";\nimport logo from \"./../../../../assets/images/logo-2.png\";\nimport { client_submitShop } from \"./../../../../lib/api/client/clientShop\";\nimport { selectLang } from \"../../../../appConfigSlice\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { LOGIN, COUNTRY, STORE, DOCUMENT, VAT, BANK, PREV, NEXT, COMPLETE_AND_NEXT, END, Langs } from \"./CreateShopConstant\";\nimport { CreateShopNav, Login, Country, Document, Store, Bank, Vat, End, CreateShopMobileNav } from \"./CreateShopLayouts\";\nimport { TabletsAndBigger, Tablets } from \"../../../../Responsive.js\";\nimport { switchLang } from \"../../../../lib/switch\";\n\nclass CreateShop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleLogin\", (email, pass, mobileNumber, countryId, iso, phoneCode, countryName) => {\n      this.state.formData.email = email;\n      this.state.formData.password = pass;\n      this.state.formData.fkCountryId = countryId;\n      this.state.formData.iso = iso;\n      this.state.formData.phoneCode = phoneCode;\n      this.state.formData.countryName = countryName;\n      this.state.formData.phone = mobileNumber;\n      this.state.formData.phone = mobileNumber;\n    });\n\n    _defineProperty(this, \"handleCountry\", (city, cityName, clearAddress, provinceId) => {\n      this.state.formData.fkCityId = city;\n      this.state.formData.fkProvinceId = provinceId;\n      this.state.formData.cityName = cityName;\n\n      if (clearAddress === true) {\n        this.state.formData.address = '';\n        this.state.formData.locationX = 0;\n        this.state.formData.locationY = 0;\n      }\n    });\n\n    _defineProperty(this, \"handleStore\", (person, name, storename, address, cat, lat, lng) => {\n      this.state.formData.fkPersonId = person;\n      this.state.formData.storeName = storename;\n      this.state.formData.vendorUrlid = storename;\n      this.state.formData.address = address;\n      this.state.filesData.selectedCategory = cat;\n      this.state.formData.locationX = lat;\n      this.state.formData.locationY = lng;\n\n      if (person == 2) {\n        this.state.formData.fullName = name;\n      } else {\n        this.state.formData.companyName = name;\n      }\n    });\n\n    _defineProperty(this, \"handleBank\", (ben, bank, branch, acc, iban, swift, curr, files, filesModel) => {\n      this.state.formData.bankBeneficiaryName = ben, this.state.formData.bankName = bank, this.state.formData.bankBranch = branch, this.state.formData.bankAccountNumber = acc, this.state.formData.bankIban = iban, this.state.formData.bankSwiftCode = swift, this.state.formData.fkCurrencyId = curr, this.state.filesData.bankFileDto = filesModel, this.state.filesData.bankFiles = files;\n    });\n\n    _defineProperty(this, \"handleDocuments\", (dto, files) => {\n      this.state.filesData.identityFileDto = dto;\n      this.state.filesData.identityFiles = files;\n    });\n\n    _defineProperty(this, \"handleVat\", (vat, dto, files) => {\n      this.state.formData.taxRegistrationNumber = vat;\n      this.state.filesData.taxFileDto = dto;\n      this.state.filesData.taxFiles = files;\n    });\n\n    _defineProperty(this, \"handleStep\", type => {\n      let step, newFormState;\n      const curstep = this.state.step;\n\n      if (type === COMPLETE_AND_NEXT) {\n        newFormState = _objectSpread(_objectSpread({}, this.state.formState), {}, {\n          [curstep]: _objectSpread(_objectSpread({}, this.state.formState[curstep]), {}, {\n            active: false,\n            complete: true\n          })\n        });\n        type = NEXT;\n      } else {\n        newFormState = _objectSpread(_objectSpread({}, this.state.formState), {}, {\n          [curstep]: _objectSpread(_objectSpread({}, this.state.formState[curstep]), {}, {\n            active: false,\n            complete: false\n          })\n        });\n      }\n\n      switch (type) {\n        case NEXT:\n          step = curstep >= 7 ? 7 : curstep + 1;\n          break;\n\n        case PREV:\n          step = curstep <= 1 ? 1 : curstep - 1;\n          break;\n\n        case LOGIN:\n          step = LOGIN;\n          break;\n\n        case COUNTRY:\n          step = COUNTRY;\n          break;\n\n        case STORE:\n          step = STORE;\n          break;\n\n        case DOCUMENT:\n          step = DOCUMENT;\n          break;\n\n        case BANK:\n          step = BANK;\n          break;\n\n        case VAT:\n          step = VAT;\n          break;\n\n        case END:\n          step = END;\n          break;\n\n        default:\n          step = curstep >= 7 ? 7 : curstep + 1;\n          break;\n      }\n\n      newFormState[step].active = true; // update NEXT_OR_PREV\n\n      this.NEXT_OR_PREV = step >= curstep ? NEXT : PREV;\n      this.setState({\n        step,\n        formState: newFormState\n      });\n    });\n\n    _defineProperty(this, \"handleLastStep\", () => {\n      if (this.state.step == 6) {\n        this.child.handleVatFromParent();\n      }\n    });\n\n    const formState = {\n      [LOGIN]: {\n        complete: true,\n        active: true,\n        id: uuidv4()\n      },\n      [COUNTRY]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      },\n      [STORE]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      },\n      [DOCUMENT]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      },\n      [BANK]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      },\n      [VAT]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      },\n      [END]: {\n        complete: false,\n        active: false,\n        id: uuidv4()\n      }\n    };\n    const formData = {\n      email: \"\",\n      password: \"\",\n      fkCountryId: 0,\n      fkProvinceId: 0,\n      fkCityId: 0,\n      cityName: \"\",\n      fkPersonId: 0,\n      companyName: \"\",\n      fullName: \"\",\n      storeName: \"\",\n      address: \"\",\n      locationX: 0,\n      locationY: 0,\n      bankBeneficiaryName: \"\",\n      bankName: \"\",\n      bankBranch: \"\",\n      bankAccountNumber: \"\",\n      bankIban: \"\",\n      bankSwiftCode: \"\",\n      fkCurrencyId: 0,\n      taxRegistrationNumber: \"\",\n      shopId: 0,\n      fkStatusId: 1,\n      vendorUrlid: \"\",\n      phone: \"\",\n      tShopCategory: [],\n      tShopFiles: []\n    };\n    const filesData = {\n      selectedCategory: null,\n      identityFileDto: [],\n      identityFiles: [],\n      bankFileDto: [],\n      bankFiles: [],\n      taxFileDto: [],\n      taxFiles: []\n    };\n    this.NEXT_OR_PREV = NEXT;\n    this.state = {\n      step: LOGIN,\n      formData,\n      filesData,\n      handleStep: this.handleStep,\n      handleLogin: this.handleLogin,\n      handleCountry: this.handleCountry,\n      handleStore: this.handleStore,\n      handleDocuments: this.handleDocuments,\n      handleBank: this.handleBank,\n      handleVat: this.handleVat,\n      finalSubmit: this.finalSubmit,\n      formState,\n      lang: this.props.lang\n    };\n    this.finalSubmit = this.finalSubmit.bind(this);\n  }\n\n  async finalSubmit() {\n    let filesDto = this.filesData.identityFileDto.concat(this.filesData.bankFileDto, this.filesData.taxFileDto);\n    filesDto.forEach(function (v) {\n      delete v.index;\n    });\n    this.formData.tShopFiles = filesDto;\n    this.formData.tShopCategory = [];\n    this.formData.tShopCategory.push({\n      shopCategoryId: 0,\n      fkShopId: 0,\n      fkCategoryId: this.filesData.selectedCategory.value\n    });\n    let formData = new FormData();\n    let allFiles = this.filesData.identityFiles.concat(this.filesData.bankFiles, this.filesData.taxFiles); // حذف کردن فایل های خالی\n\n    let fileIndex = [];\n    allFiles = allFiles.filter((el, index) => {\n      if (el === null) {\n        fileIndex.push(index);\n      }\n\n      return el != null;\n    });\n    this.formData.tShopFiles = this.formData.tShopFiles.filter((item, index) => item.FileUrl !== '');\n    allFiles.forEach(element => {\n      formData.append(\"FilesDto\", element);\n    });\n    formData.append(\"Shop\", JSON.stringify(this.formData));\n\n    try {\n      const result = await client_submitShop(formData);\n\n      if (result.status === 200) {\n        return true;\n      } else {\n        toast.error(result.message, getToastConfig());\n        return false;\n      }\n    } catch (er) {\n      toast.error(getErrorMsg(this.lang, \"error-create-shop\"), getToastConfig());\n      return false;\n    }\n  }\n\n  renderSubNav() {\n    const needBack = this.state.step !== LOGIN && this.state.step !== END ? true : false;\n    return __jsx(\"header\", {\n      className: \"createshop__subnav align-items-center d-flex justify-content-between\"\n    }, __jsx(\"div\", {\n      className: \"createshop__prev-cnt\"\n    }, __jsx(TabletsAndBigger, null, needBack && __jsx(\"div\", {\n      onClick: () => {\n        this.handleStep(PREV);\n        this.handleLastStep();\n      },\n      className: \"text-align-right\",\n      style: {\n        cursor: \"pointer\"\n      }\n    }, __jsx(BackIcon, {\n      className: \"createshop__back-icon\"\n    }), __jsx(Translate, {\n      id: \"subheader.back\"\n    })))), __jsx(\"a\", {\n      href: \"/\",\n      className: \"align-self-center createshop__logo-cnt\"\n    }, this.state.step !== END && __jsx(\"img\", {\n      src: logo,\n      alt: \"logo jyal\",\n      className: \"createshop__logo\"\n    })), __jsx(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: e => {\n        e.preventDefault();\n        switchLang(this.props.loc, true);\n      },\n      className: \"createshop__lang\"\n    }, Langs[this.props.lang]));\n  }\n\n  render() {\n    let content; // height = \"400px\";\n\n    switch (this.state.step) {\n      case LOGIN:\n        content = __jsx(Login, null);\n        break;\n\n      case COUNTRY:\n        content = __jsx(Country, null);\n        break;\n\n      case STORE:\n        content = __jsx(Store, {\n          lang: this.props.lang\n        });\n        break;\n\n      case DOCUMENT:\n        content = __jsx(Document, null);\n        break;\n\n      case BANK:\n        content = __jsx(Bank, null);\n        break;\n\n      case VAT:\n        content = __jsx(Vat, {\n          ref: Ref => this.child = Ref\n        });\n        break;\n\n      case END:\n        content = __jsx(End, null);\n        break;\n\n      default:\n        content = __jsx(Login, null);\n    }\n\n    return __jsx(\"div\", null, __jsx(\"section\", {\n      className: \"createshop\"\n    }, __jsx(CreateShopContext.Provider, {\n      value: this.state\n    }, __jsx(Tablets, null, __jsx(CreateShopMobileNav, null)), __jsx(\"div\", {\n      className: \"createshop__box\"\n    }, __jsx(TabletsAndBigger, null, __jsx(CreateShopNav, null)), this.renderSubNav(), __jsx(TransitionGroup // style={\n    //   {\n    //     // height: height,\n    //   }\n    // }\n    , {\n      className: classnames(\"createshop__rel\", {\n        next: this.NEXT_OR_PREV === NEXT,\n        prev: this.NEXT_OR_PREV === PREV\n      })\n    }, __jsx(ToastContainer, _extends({\n      rtl: this.is_rtl\n    }, getToastConfig())), __jsx(CSSTransition, {\n      key: this.state.formState[this.state.step].id,\n      timeout: 300,\n      className: \"createshop__anim\"\n    }, content))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state)\n  };\n};\n\nexport default connect(mapStateToProps)(CreateShop);","map":null,"metadata":{},"sourceType":"module"}