{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\"; // import \"./Categories.scss\";\n// import \"./Categories-rtl.scss\";\n\nimport GoodsSlider from \"../../GoodsSlider\";\nimport { BoxStyle1, Loading } from \"../../../common\";\nimport ImgCols from \"../../ImgCols\";\nimport { Translate } from \"react-localize-redux\";\nimport { fetchCategory, selectBrands, selectCategoryStatus, selectCats, selectSlider, selectCatTitle, LOADING, selectwebHomeModuleList, IDLE, selectCatId } from \"./categorySlice\"; /// for UI development\n\nimport Dropdown from \"../../../common/Dropdown/Dropdown\";\nimport { connect } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../../appConfigSlice\";\nimport { withRouter } from \"next/router\";\nimport { ADV1, ADV2, ADV3, ADV4, ADV6, CATEGOR_LIST, PRODUCT_LIST } from \"../index/homeConstant\";\nimport HomeSliderLoader from \"../../HomeSlider/HomeSliderLoader\";\nimport GoodsSliderLoader from \"../../GoodsSlider/GoodsSliderLoader\";\nimport { SEARCH_TYPE_CATEGORY } from \"../../../../lib/querys\";\nimport Link from \"next/link\";\nimport Brands from \"./categoryLayouts/Brands\";\nimport { client_categoryBrands } from \"../../../../lib/api/client/clientCommon\";\nimport { forceCheck } from \"react-lazyload\"; // import categoryIcon from \"./../../../../assets/icons/cate.svg\";\n\nexport const brandsPageSize = 10;\n\nclass Categories extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lang = this.props.lang;\n    this.state = {\n      brands: []\n    };\n    this.check = false;\n  }\n\n  componentDidMount() {\n    // const { id } = this.props.router.query;\n    this.props.fetchCategory(this.props.catId2);\n    this.check = true;\n    client_categoryBrands({\n      pageSize: brandsPageSize,\n      pageNumber: 1,\n      catId: this.props.catId2\n    }).then(res => {\n      this.setState({\n        brands: res.result\n      });\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      this.check = false;\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // force to visiable image in the viewport after 3 sec in each render\n    setTimeout(() => {\n      forceCheck();\n      console.log(\"check ...\");\n    }, 5000); //////////\n\n    if (this.props.isIDLE && !this.check) {\n      const {\n        id\n      } = this.props.router.query;\n      this.props.fetchCategory(id[0]); // get new brands\n\n      client_categoryBrands({\n        pageSize: brandsPageSize,\n        pageNumber: 1,\n        catId: this.props.catId2,\n        search: \"\"\n      }).then(res => {\n        this.setState({\n          brands: res.result\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  renderModules(data = []) {\n    const HomeModules = [];\n    data.map(module => {\n      switch (module.fkModuleId) {\n        case CATEGOR_LIST:\n          ///// TOP CATEGORY LIST\n          HomeModules.push(__jsx(TopCategoriesList, {\n            headerTitleComponent: __jsx(LinearHeader, {\n              headerText: module.iModuleTitle\n            }),\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId\n          }));\n          break;\n\n        case PRODUCT_LIST:\n          /// Products Slider\n          HomeModules.push(__jsx(BoxStyle1, {\n            headerContent: module.webModuleCollections[0].collectionTitle\n          }, __jsx(GoodsSlider, {\n            data: module.webModuleCollections[0].goods,\n            count: 5\n          })));\n          break;\n\n        case ADV1:\n          // Images module\n          HomeModules.push(__jsx(React.Fragment, null, __jsx(\"div\", {\n            className: \"imgCols_big-desktop\"\n          }, __jsx(ImgCols, {\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          })), __jsx(\"div\", {\n            className: \"imgCols_mobile\"\n          }, __jsx(ImgCols, {\n            mobile: true,\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          }))));\n          break;\n\n        case ADV2:\n          // Images modules\n          HomeModules.push(__jsx(React.Fragment, null, __jsx(\"div\", {\n            className: \"imgCols_big-desktop\"\n          }, __jsx(ImgCols, {\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          })), __jsx(\"div\", {\n            className: \"imgCols_mobile\"\n          }, __jsx(ImgCols, {\n            mobile: true,\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          }))));\n          break;\n\n        case ADV3:\n          // Images modules\n          HomeModules.push(__jsx(React.Fragment, null, __jsx(\"div\", {\n            className: \"imgCols_big-desktop\"\n          }, __jsx(ImgCols, {\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          })), __jsx(\"div\", {\n            className: \"imgCols_mobile\"\n          }, __jsx(ImgCols, {\n            mobile: true,\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          }))));\n          break;\n\n        case ADV4:\n          // Images modules\n          HomeModules.push(__jsx(React.Fragment, null, __jsx(\"div\", {\n            className: \"imgCols_big-desktop\"\n          }, __jsx(ImgCols, {\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          })), __jsx(\"div\", {\n            className: \"imgCols_mobile\"\n          }, __jsx(ImgCols, {\n            mobile: true,\n            hieght: \"sm\",\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          }))));\n          break;\n\n        case ADV6:\n          // Images modules\n          HomeModules.push(__jsx(React.Fragment, null, __jsx(\"div\", {\n            className: \"imgCols_big-desktop\"\n          }, __jsx(ImgCols, {\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          })), __jsx(\"div\", {\n            className: \"imgCols_mobile\"\n          }, __jsx(ImgCols, {\n            mobile: true,\n            data: module.webModuleCollections,\n            iModuleId: module.iModuleId,\n            selectedHeight: module.selectedHeight\n          }))));\n          break;\n\n        default:\n          break;\n      }\n    });\n    return HomeModules;\n  }\n\n  render() {\n    var _this$props$cats;\n\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"container siteWidthContainer\"\n    }, __jsx(\"div\", {\n      className: \"category-page\"\n    }, this.props.isLoading ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"category-page__left\"\n    }, __jsx(\"aside\", {\n      className: \"categories\"\n    }, __jsx(Loading, {\n      type: \"gray\",\n      width: \"50px\",\n      height: \"50px\",\n      styleSheet: {\n        margin: \"100px auto\"\n      }\n    }))), __jsx(\"div\", {\n      className: \"category-page__right\"\n    }, __jsx(HomeSliderLoader, null), __jsx(GoodsSliderLoader, null), __jsx(GoodsSliderLoader, null))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"category-page__left\"\n    }, __jsx(\"aside\", {\n      className: \"categories\"\n    }, __jsx(Dropdown, {\n      headerClass: \"categories__top-link\",\n      containerClass: \"categories__list-container\",\n      alwaysOpen: true,\n      noDropIcon: true,\n      text: this.props.catTitle\n    }, __jsx(\"ul\", {\n      className: \"categories__list\"\n    }, (_this$props$cats = this.props.cats) === null || _this$props$cats === void 0 ? void 0 : _this$props$cats.map(cat => {\n      let allLink;\n\n      if (cat.haveWebPage) {\n        allLink = `/${this.props.curr}-${this.props.lang}/category/${cat.categoryId}`;\n      } else {\n        allLink = `/${this.props.curr}-${this.props.lang}/search?id=${cat.categoryId}&type=${SEARCH_TYPE_CATEGORY}`;\n      }\n\n      return __jsx(\"li\", {\n        key: cat.categoryId,\n        className: \"categories__list-item\"\n      }, __jsx(Link, {\n        href: allLink\n      }, __jsx(\"a\", {\n        className: \"categories__list-link\"\n      }, cat.categoryTitle)));\n    }))), __jsx(Dropdown, {\n      headerClass: \"categories__top-link\",\n      containerClass: \"categories__list-container\",\n      alwaysOpen: true,\n      noDropIcon: true,\n      text: __jsx(Translate, {\n        id: \"brands\"\n      })\n    }, __jsx(Brands, {\n      brands: this.state.brands,\n      catId: this.props.catId2\n    })))), __jsx(\"div\", {\n      className: \"category-page__right\"\n    }, this.renderModules(this.props.modules))))));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchCategory\n};\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state),\n    cats: selectCats(state),\n    brands: selectBrands(state),\n    slider: selectSlider(state),\n    catId: selectCatId(state),\n    isIDLE: selectCategoryStatus(state) === IDLE,\n    isLoading: selectCategoryStatus(state) === LOADING || selectCategoryStatus(state) === IDLE,\n    catTitle: selectCatTitle(state),\n    modules: selectwebHomeModuleList(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Categories));","map":null,"metadata":{},"sourceType":"module"}