{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\"; // import \"./Addresses.scss\";\n// import \"./Addresses-rtl.scss\";\n\nimport { BoxStyle1, MobileItemDrop, Loading } from \"../../../../../common\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport NoAddressesPage from \"./AddressesLayouts/NoAddressesPage\";\nimport AddressesAdd from \"./AddressesLayouts/AddressesAdd\";\nimport { ReactComponent as ArsIcon1 } from \"./../../../../../../assets/icons/business-and-trade.svg\";\nimport { ReactComponent as EditIcon } from \"./../../../../../../assets/icons/edit-small.svg\";\nimport { ReactComponent as DeleteIcon } from \"./../../../../../../assets/icons/delete.svg\";\nimport { LandScapePhonesAndBigger, LandScapePhones } from \"../../../../../../Responsive\";\nimport { client_getUserAddresses } from \"./../../../../../../lib/api/client/clientUserPanel\";\nimport { getErrorMsg } from \"../../../../../../lib/helpers\";\nimport { connect } from \"react-redux\";\nimport { selectLang, selectCurr } from \"../../../../../../appConfigSlice\";\nimport { client_getAddresses, client_deleteAddress, client_changeDestination } from \"../../../../../../lib/api/client/clientOrder\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { getToastConfig } from \"../../../../../../lib/toast\";\nimport { isRtl } from \"./../../../../../../lib/isRtl\";\nimport classnames from \"classnames\";\nimport { client_changeMobileNumber, client_setDefaultAddress } from \"../../../../../../lib/api/client/clientCommon\";\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\n\nclass Addresses extends React.Component {\n  constructor(props) {\n    super(props); // for UI development\n\n    _defineProperty(this, \"handleAddressPage\", () => {\n      this.props.history.push(\"/\" + this.state.curr + \"-\" + this.state.lang + \"/panel/addresses\");\n    });\n\n    _defineProperty(this, \"getAddresses\", async () => {\n      this.setState({\n        showLoader: true\n      });\n      const result = await client_getUserAddresses();\n      let showEmpty = result.result.length == 0 ? true : false;\n      this.setState({\n        data: result.result,\n        showLoader: false,\n        emptyAddresspage: showEmpty\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", async addressId => {\n      const con = confirm(getErrorMsg(this.state.lang, \"confirm-address-delete\"));\n      if (!con) return;\n      const del_resutl = await client_deleteAddress(addressId);\n\n      if (del_resutl.status === 200) {\n        this.getAddresses();\n        toast.success(getErrorMsg(this.props.lang, \"success-delete-address\"), getToastConfig());\n      }\n    });\n\n    _defineProperty(this, \"handleClickEdit\", item => {\n      this.setState({\n        selectedItemForEdit: item\n      });\n      this.props.history.push(this.props.match.url + \"/add\");\n    });\n\n    _defineProperty(this, \"handleVerifyClick\", async item => {\n      this.verifyPhone = null;\n      if (this.state.verifyLoading) return;\n      this.setState({\n        verifyLoading: true\n      });\n\n      try {\n        const res = await client_changeMobileNumber({\n          addressId: item.addressId,\n          mobileNumber: item.transfereeMobile.trim()\n        });\n\n        if (res.status == \"200\") {\n          this.verifyPhone = {\n            requestId: res.result.requestId,\n            addressId: item.addressId,\n            phoneNumber: item.transfereeMobile.trim(),\n            phoneIso: item.iso,\n            phoneCode: item.phoneCode\n          };\n          this.props.history.push(this.props.match.url + \"/add\");\n          this.setState({\n            verifyLoading: false\n          });\n        }\n      } catch (err) {\n        this.setState({\n          verifyLoading: false\n        });\n        toast.error(err.response.data.message, getToastConfig);\n      }\n    });\n\n    _defineProperty(this, \"handleSetDefault\", async addressId => {\n      try {\n        const res = await client_setDefaultAddress({\n          addressId\n        });\n\n        if (res.status == \"200\") {\n          this.getAddresses();\n        }\n      } catch (err) {\n        toast.error(err.response.data.message, getToastConfig());\n      }\n    });\n\n    this.state = {\n      emptyAddresspage: true,\n      showLoader: false,\n      data: [],\n      selectedItemForEdit: null,\n      verifyLoading: false\n    };\n    this.verifyPhone = null;\n    this.phoneUtil = PhoneNumberUtil.getInstance();\n    this.PNF = PhoneNumberFormat;\n  } //// for testing\n\n\n  renderBoxHeader() {\n    return __jsx(React.Fragment, null, __jsx(\"h2\", {\n      className: \"user-panel__box-header\"\n    }, __jsx(Translate, {\n      id: \"addresses.addresses\"\n    })), __jsx(LandScapePhonesAndBigger, null, __jsx(Link, {\n      to: `${this.props.match.url}/add`,\n      className: \"addresses__addnew primary-btn\",\n      onClick: () => {\n        this.setState({\n          selectedItemForEdit: null\n        });\n      }\n    }, __jsx(Translate, {\n      id: \"addresses.addnewadd\"\n    }))));\n  }\n\n  componentDidMount() {\n    this.getAddresses();\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.match.url == location.pathname) {\n        this.getAddresses();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  componentDidUpdate() {\n    this.verifyPhone = null;\n  }\n\n  render() {\n    return __jsx(Switch, null, __jsx(Route, {\n      path: `${this.props.match.path}/add`,\n      render: () => __jsx(React.Fragment, null, __jsx(ToastContainer, _extends({\n        rtl: isRtl(this.props.lang)\n      }, getToastConfig())), __jsx(AddressesAdd, {\n        addpage: this.handleAddressPage,\n        editItem: this.state.selectedItemForEdit,\n        verifyPhone: this.verifyPhone\n      }))\n    }), __jsx(Route, {\n      path: `${this.props.match.path}`\n    }, __jsx(ToastContainer, _extends({\n      rtl: isRtl(this.props.lang)\n    }, getToastConfig())), this.state.showLoader ? __jsx(\"div\", {\n      style: {\n        minHeight: \"100vh\"\n      }\n    }, __jsx(Loading, {\n      type: \"gray\",\n      width: \"11%\",\n      height: \"70%\"\n    })) : this.state.emptyAddresspage ? __jsx(NoAddressesPage, null) : __jsx(BoxStyle1, {\n      headerContent: this.renderBoxHeader()\n    }, __jsx(\"section\", {\n      className: \"addresses\"\n    }, __jsx(\"div\", null, __jsx(\"ul\", {\n      className: \"addresses__list\"\n    }, this.state.data.map(item => {\n      return __jsx(\"li\", {\n        className: \"addresses__item-cnt flex-wrap no-gutters\"\n      }, __jsx(LandScapePhones, {\n        className: \"w-100\"\n      }, __jsx(\"div\", {\n        className: \"d-flex justify-content-between mb-2\"\n      }, __jsx(\"div\", null, item.isDefualt ? __jsx(\"a\", {\n        onClick: e => {\n          e.preventDefault();\n        },\n        className: \"addresses__right-item addresses__right-item--gray-btn\"\n      }, __jsx(Translate, {\n        id: \"addresses.pri-add\"\n      })) : __jsx(\"a\", {\n        onClick: e => {\n          e.preventDefault();\n          this.handleSetDefault(item.addressId);\n        },\n        className: \"addresses__right-item addresses__right-item--primary-btn\"\n      }, __jsx(Translate, {\n        id: \"addresses.default\"\n      }))), __jsx(\"div\", {\n        class: \"addresses__btn-cnt d-flex align-items-center\"\n      }, __jsx(\"a\", {\n        className: \"addresses__right-item addresses__right-item--iconi\",\n        onClick: () => this.handleDelete(item.addressId)\n      }, __jsx(DeleteIcon, {\n        className: \"addresses__right-item-icon\"\n      }), __jsx(Translate, {\n        id: \"common.delete\"\n      })), __jsx(\"a\", {\n        onClick: () => this.handleClickEdit(item),\n        className: \"addresses__right-item addresses__right-item--iconi\"\n      }, __jsx(EditIcon, {\n        className: \"addresses__right-item-icon\"\n      }), __jsx(Translate, {\n        id: \"addresses.edit\"\n      }))))), __jsx(\"div\", {\n        className: \"col-12 col-md-auto addresses__row-item addresses__row-item--first\"\n      }, __jsx(\"span\", {\n        className: \"addresses__icon-cnt\"\n      }, __jsx(ArsIcon1, {\n        className: \"addresses__left-icon\"\n      })), __jsx(\"p\", {\n        className: \"addresses__ars-text\"\n      }, item.address)), __jsx(\"div\", {\n        className: \"mt-2 mt-md-0 addresses__row-item\"\n      }, __jsx(\"span\", {\n        className: \"addresses__ars-head\"\n      }, __jsx(Translate, {\n        id: \"addresses.name\"\n      })), __jsx(\"span\", {\n        className: \"addresses__ars-value\"\n      }, item.transfereeName, \" \", item.transfereeFamily)), __jsx(\"div\", {\n        className: \"mt-2 mt-md-0 addresses__row-item\"\n      }, __jsx(\"span\", {\n        className: \"addresses__ars-head\"\n      }, __jsx(Translate, {\n        id: \"addresses.phone\"\n      })), __jsx(\"span\", {\n        className: \"addresses__ars-value\"\n      }, this.phoneUtil.format(this.phoneUtil.parseAndKeepRawInput(item.phoneCode + item.transfereeMobile, item.iso), this.PNF.INTERNATIONAL)), !item.mobileVerifed && __jsx(\"span\", {\n        className: classnames(\"addresses__ars-alert\", \"d-block\", {\n          \"addresses__ars-alert--disable\": this.state.verifyLoading\n        }),\n        onClick: () => {\n          this.handleVerifyClick(item);\n        }\n      }, __jsx(\"span\", {\n        className: \"addresses__alert-icon\"\n      }, \"!\"), __jsx(Translate, {\n        id: \"addresses.notvery\"\n      }))), __jsx(LandScapePhonesAndBigger, null, __jsx(\"div\", {\n        className: \"addresses__row-item\"\n      }, item.isDefualt ? __jsx(\"a\", {\n        onClick: e => {\n          e.preventDefault();\n        },\n        className: \"addresses__right-item addresses__right-item--gray-btn\"\n      }, __jsx(Translate, {\n        id: \"addresses.pri-add\"\n      })) : __jsx(\"a\", {\n        onClick: e => {\n          e.preventDefault();\n          this.handleSetDefault(item.addressId);\n        },\n        className: \"addresses__right-item addresses__right-item--primary-btn\"\n      }, __jsx(Translate, {\n        id: \"addresses.default\"\n      })), __jsx(\"a\", {\n        className: \"addresses__right-item addresses__right-item--iconi\",\n        onClick: () => this.handleDelete(item.addressId)\n      }, __jsx(DeleteIcon, {\n        className: \"addresses__right-item-icon\"\n      }), __jsx(Translate, {\n        id: \"addresses.delete\"\n      })), __jsx(\"a\", {\n        onClick: () => this.handleClickEdit(item),\n        className: \"addresses__right-item addresses__right-item--iconi\"\n      }, __jsx(EditIcon, {\n        className: \"addresses__right-item-icon\"\n      }), __jsx(Translate, {\n        id: \"addresses.edit\"\n      })))));\n    }))), __jsx(LandScapePhones, null, __jsx(\"div\", {\n      className: \"checkout-fix justify-content-center\"\n    }, __jsx(Link, {\n      to: `${this.props.match.url}/add`,\n      className: \"primary-btn returns__add-btn primary-btn--icon\",\n      onClick: () => {\n        this.setState({\n          selectedItemForEdit: null\n        });\n      }\n    }, __jsx(Translate, {\n      id: \"addresses.addnewadd\"\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectLang(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Addresses);","map":null,"metadata":{},"sourceType":"module"}