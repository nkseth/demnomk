{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { NEXT, COMPLETE_AND_NEXT } from \"../CreateShopConstant\";\nimport { CreateShopContext } from \"../CreateShopContext\";\nimport { Translate } from \"react-localize-redux\";\nimport { SelectBox2 as SelectBox, Loading } from \"../../../../common\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport SearchIcon from \"./../../../../../assets/icons/search-gray.svg\";\nimport { client_getActiveCities, client_getActiveProvince } from \"./../../../../../lib/api/client/clientShop\";\n\nvar Country = /*#__PURE__*/function (_React$Component) {\n  _inherits(Country, _React$Component);\n\n  var _super = _createSuper(Country);\n\n  function Country(props) {\n    var _this;\n\n    _classCallCheck(this, Country);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      if (_this.state.cityId == 0 || _this.state.cityId == undefined) {\n        _this.setState({\n          citySelectError: true\n        });\n\n        return;\n      }\n\n      debugger;\n\n      _this.setState({\n        countrySelectError: false,\n        citySelectError: false\n      });\n\n      _this.context.handleCountry(_this.state.cityId, _this.state.cityName, _this.state.clearAddress, _this.state.provinceId);\n\n      _this.context.handleStep(COMPLETE_AND_NEXT);\n    });\n\n    _this.state = {\n      countryId: null,\n      provinceId: 0,\n      cityId: 0,\n      cityName: \"\",\n      phoneCode: \"\",\n      provinceItems: [],\n      cityItems: [],\n      countrySelectError: false,\n      citySelectError: false,\n      showLoader: false,\n      clearAddress: false\n    };\n    _this.getActiveCities = _this.getActiveCities.bind(_assertThisInitialized(_this));\n    _this.setCityId = _this.setCityId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Country, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client_getActiveProvince(this.context.formData.fkCountryId);\n\n              case 2:\n                result = _context.sent;\n                this.setState({\n                  provinceItems: result.result,\n                  countryId: this.context.formData.fkCountryId,\n                  cityId: this.context.formData.fkCityId,\n                  provinceId: this.context.formData.fkProvinceId,\n                  showLoader: false\n                });\n\n                if (this.state.provinceId != 0) {\n                  this.getActiveCities(this.state.provinceId);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getActiveCities\",\n    value: function () {\n      var _getActiveCities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cntId) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  showLoader: true\n                });\n                _context2.next = 3;\n                return client_getActiveCities(cntId);\n\n              case 3:\n                result = _context2.sent;\n                this.setState({\n                  cityItems: result.result,\n                  isCitySelected: true,\n                  showLoader: false,\n                  clearAddress: true,\n                  provinceId: cntId\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getActiveCities(_x) {\n        return _getActiveCities.apply(this, arguments);\n      }\n\n      return getActiveCities;\n    }()\n  }, {\n    key: \"setCityId\",\n    value: function setCityId(cityId) {\n      var cityName = this.state.cityItems.find(function (x) {\n        return x.cityId == cityId;\n      }).cityTitle;\n      this.setState({\n        cityId: cityId,\n        cityName: cityName,\n        clearAddress: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"createshop__transition-cnt\"\n      }, this.state.showLoader && __jsx(Loading, {\n        type: \"gray\",\n        width: \"11%\",\n        height: \"70%\"\n      }), __jsx(\"div\", {\n        className: this.state.showLoader ? \"d-none\" : \"\"\n      }, __jsx(\"div\", {\n        className: \"mt-5\"\n      }, __jsx(\"h3\", {\n        className: \"createshop__header-text\"\n      }, __jsx(Translate, {\n        id: \"country.country-msg1\"\n      })), __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-6\"\n      }, __jsx(\"h3\", {\n        className: \"createshop__header-text mt-5\"\n      }, __jsx(Translate, {\n        id: \"country.province-choose\"\n      })), __jsx(SelectBox, {\n        className: \"createshop__country-cnt createshop__form--country\"\n      }, this.state.provinceItems.map(function (item) {\n        return __jsx(SelectBox.SelectItem, {\n          isCountry: false,\n          handleSelect: _this2.getActiveCities,\n          name: item.provinceId,\n          value: item.provinceId,\n          key: item.provinceId,\n          selectedId: _this2.state.provinceId\n        }, __jsx(\"span\", {\n          className: \"createshop__text1rem\"\n        }, item.provinceName));\n      }))), __jsx(\"div\", {\n        className: \"col-md-6\"\n      }, __jsx(\"h3\", {\n        className: \"createshop__header-text mt-5\"\n      }, __jsx(Translate, {\n        id: \"country.city-choose\"\n      })), this.state.cityItems.length > 10 && __jsx(\"div\", {\n        className: \"checklist__search\"\n      }, __jsx(SearchIcon, {\n        className: \"checklist__search-input-icon\"\n      }), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            search: e.target.value\n          });\n        },\n        type: \"text\",\n        value: this.state.search,\n        className: \"checklist__search-input\",\n        placeholder: \"search\"\n      })), __jsx(Scrollbars, {\n        renderView: function renderView(props) {\n          return __jsx(\"div\", _extends({}, props, {\n            className: \"deliveryPanel__scrol-view\"\n          }));\n        },\n        renderTrackVertical: function renderTrackVertical(props) {\n          return __jsx(\"div\", _extends({}, props, {\n            className: \"deliveryPanel__track-vertical\"\n          }));\n        } // Duration for hide animation in ms. autoHideDuration={200}\n        ,\n        style: {\n          height: \"400px\"\n        }\n      }, __jsx(SelectBox, {\n        className: \"createshop__country-cnt createshop__form--country\"\n      }, this.state.cityItems.map(function (item) {\n        var _item$cityTitle;\n\n        if (_this2.state.search && ((_item$cityTitle = item.cityTitle) === null || _item$cityTitle === void 0 ? void 0 : _item$cityTitle.includes(_this2.state.search)) || !_this2.state.search) return __jsx(SelectBox.SelectItem, {\n          isCountry: false,\n          handleSelect: _this2.setCityId,\n          name: item.cityId,\n          value: item.cityId,\n          key: item.cityId,\n          selectedId: _this2.state.cityId\n        }, __jsx(\"span\", {\n          className: \"createshop__text1rem\"\n        }, item.cityTitle));\n      })))), __jsx(\"div\", {\n        className: \"col-12 text-center\"\n      }, this.state.countrySelectError && __jsx(\"span\", {\n        className: \"country-error\"\n      }, __jsx(Translate, {\n        id: \"country.select-cntry\"\n      })), this.state.citySelectError && __jsx(\"span\", {\n        className: \"country-error\"\n      }, __jsx(Translate, {\n        id: \"country.select-city\"\n      })))))), __jsx(\"div\", {\n        className: \"createshop__btm text-align-center-ltr mb-5\"\n      }, __jsx(\"div\", {\n        className: \"auth__btn\"\n      }, __jsx(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"createshop__primary-btn primary-btn\"\n      }, __jsx(Translate, {\n        id: \"country.next\"\n      }))))));\n    }\n  }]);\n\n  return Country;\n}(React.Component);\n\n_defineProperty(Country, \"contextType\", CreateShopContext);\n\nexport default Country;","map":null,"metadata":{},"sourceType":"module"}