{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { Link } from \"react-router-dom\";\nimport { validatePhoneNumber } from \"../../../../../../../lib/formValidator\";\nimport { useSelector } from \"react-redux\";\nimport { selectLang } from \"../../../../../../../appConfigSlice\";\nimport { FormErrorMsg, Loading } from \"../../../../../../common\";\nimport { client_changeMobileNumber } from \"../../../../../../../lib/api/client/clientCommon\";\nimport { toast } from \"react-toastify\";\nimport { getErrorMsg } from \"../../../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../../../lib/toast\";\nexport default (function (_ref) {\n  var handleSituation = _ref.handleSituation,\n      data = _ref.data,\n      setData = _ref.setData;\n\n  var _useState = useState({}),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      mobile = _useState2[0],\n      setMobile = _useState2[1];\n\n  var lang = useSelector(selectLang);\n\n  var _useState3 = useState(false),\n      submitLoading = _useState3[0],\n      setSubmitLoading = _useState3[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var key, result, _err$response$data$re, _err$response$data$re2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!submitLoading) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.t0 = _regeneratorRuntime.keys(errors);\n\n            case 3:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 10;\n                break;\n              }\n\n              key = _context.t1.value;\n\n              if (!errors[key]) {\n                _context.next = 8;\n                break;\n              }\n\n              toast.error(getErrorMsg(lang, \"error-detected\"), getToastConfig());\n              return _context.abrupt(\"return\");\n\n            case 8:\n              _context.next = 3;\n              break;\n\n            case 10:\n              setSubmitLoading(true);\n              _context.prev = 11;\n              _context.next = 14;\n              return client_changeMobileNumber({\n                mobileNumber: mobile,\n                addressId: data.addressId\n              });\n\n            case 14:\n              result = _context.sent;\n\n              if (result.status == \"200\") {\n                setData({\n                  phoneNumberVeri: _objectSpread(_objectSpread({}, data), {}, {\n                    requestId: result.result.requestId,\n                    phoneNumber: mobile\n                  })\n                });\n                setSubmitLoading(false);\n                handleSituation({\n                  type: \"phoneveri\"\n                });\n              }\n\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t2 = _context[\"catch\"](11);\n\n              if ((_err$response$data$re = _context.t2.response.data.result) === null || _err$response$data$re === void 0 ? void 0 : _err$response$data$re.errorText) {\n                toast.error((_err$response$data$re2 = _context.t2.response.data.result) === null || _err$response$data$re2 === void 0 ? void 0 : _err$response$data$re2.errorText, getToastConfig());\n              } else toast.error(_context.t2.response.data.message, getToastConfig());\n\n              setSubmitLoading(false);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[11, 18]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Translate, null, function (_ref3) {\n    var t = _ref3.translate;\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"add-address-step3\"\n    }, __jsx(\"div\", {\n      className: \"add-address-step3__col\"\n    }, __jsx(\"p\", {\n      className: \"add-address-step3__p1\"\n    }, __jsx(Translate, {\n      id: \"addresses.changephone\"\n    })), __jsx(\"p\", {\n      className: \"add-address-step3__p2\"\n    }, __jsx(Translate, {\n      id: \"addresses.entermobile\"\n    })), __jsx(\"div\", {\n      className: \"add-address-step3__phone-container\"\n    }, __jsx(\"div\", {\n      className: \"add-address-step1__mobile-cnt\"\n    }, __jsx(\"span\", {\n      className: \"add-address-step1__mobile-code\"\n    }, \"+\", data.phoneCode), __jsx(\"input\", {\n      className: \"gray__input\",\n      type: \"text\",\n      placeholder: t(\"addresses.mobile-number-placeholder\"),\n      name: \"phone\",\n      value: mobile,\n      onChange: function onChange(e) {\n        setMobile(e.target.value);\n\n        if (errors[e.target.name]) {\n          validatePhoneNumber({\n            name: e.target.name,\n            value: e.target.value,\n            handler: setErrors,\n            lang: lang,\n            iso: data.phoneIso\n          });\n        }\n      },\n      onBlur: function onBlur(e) {\n        validatePhoneNumber({\n          name: e.target.name,\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang,\n          iso: data.phoneIso\n        });\n      }\n    })), __jsx(FormErrorMsg, {\n      show: errors[\"phone\"],\n      msg: errors[\"phone\"]\n    })), __jsx(\"button\", {\n      className: \"primary-btn add-address-step3__btn\",\n      onClick: handleSubmit\n    }, submitLoading ? __jsx(Loading, {\n      type: \"white\",\n      \"with\": \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"addresses.send-new-code\"\n    })), __jsx(\"a\", {\n      className: \"add-address-step3__link mt-5 mt-md-3 d-block primary-link\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        handleSituation({\n          type: \"phoneveri\"\n        });\n      }\n    }, __jsx(Translate, {\n      id: \"addresses.cancel\"\n    })))));\n  });\n});","map":null,"metadata":{},"sourceType":"module"}