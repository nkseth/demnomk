{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { switchLang } from \"../../../../../lib/switch\";\nimport { Button, FormErrorMsg, Loading } from \"../../../../common\";\nimport { useState } from \"react\";\nimport { validateEmail, validatePassword } from \"../../../../../lib/formValidator\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectLang, selectCurr, selectLogin, LOADING, LOGIN_CUSTOMER_LOADING, SUCCE_LOGIN, ERROR_LOGIN, selectPrevLink, PREVLINK_CHANGE } from \"../../../../../appConfigSlice\";\nimport { useRouter } from \"next/router\";\nimport { toast } from \"react-toastify\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { client_loginCustomer, client_loginWithSocial } from \"../../../../../lib/api/client/clientCustomer\";\nimport { getErrorMsg, removeCartCookie, setTokenCookie } from \"../../../../../lib/helpers\";\nimport axiosClient from \"../../../../../lib/api/axios\";\nimport GoogleLogin from \"react-google-login\"; // import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n\nimport FacebookLogin from \"react-facebook-login\";\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\nimport { useReducer } from \"react\";\nimport EnterEmail from \"../ForgetPassword/EnterEmail\";\nimport VerifyPhone from \"../../Order/OrderLayouts/ShippingAddress/VerifyPhone\";\nimport VerifyEmail from \"../ForgetPassword/VerifyEmail\";\nimport EnterNewPassWord from \"../ForgetPassword/EnterNewPassWord\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Logo from \"./../../../../../assets/images/logo-2.png\";\nexport var SIGNIN = 1;\nexport var ENTER_EMAIL = 2;\nexport var VERIFY_EMAIL = 3;\nexport var ENTER_NEW_PASSWORD = 4;\nexport default (function (props) {\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(null),\n      forgotEmail = _useState2[0],\n      setForgotEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState({}),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      captchaErrors = _useState5[0],\n      setcaptchaErrors = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      captchaToken = _useState6[0],\n      setcaptchaToken = _useState6[1];\n\n  var _useState7 = useState({}),\n      captchaRef = _useState7[0],\n      setcaptchaRef = _useState7[1];\n\n  var reducer = function reducer(state, action) {\n    return action.type;\n  };\n\n  var _useReducer = useReducer(reducer, SIGNIN),\n      situ = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var lang = useSelector(selectLang);\n  var curr = useSelector(selectCurr);\n  var LoginStatus = useSelector(selectLogin).status === LOADING;\n  var prevLink = useSelector(selectPrevLink);\n  var dis = useDispatch();\n  var router = useRouter();\n  var FACEBOOK = 2;\n  var GOOGLE = 1;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    if (LoginStatus) return;\n\n    if (captchaToken === \"\") {\n      setcaptchaErrors(true);\n      return;\n    } else {\n      setcaptchaErrors(false);\n    }\n\n    for (var key in errors) {\n      if (errors[key]) {\n        toast.error(getErrorMsg(lang, \"error-detected\"), getToastConfig());\n        return;\n      }\n    }\n\n    var result;\n    dis( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: LOGIN_CUSTOMER_LOADING\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return client_loginCustomer({\n                  email: email,\n                  pass: password,\n                  captchaToken: captchaToken\n                });\n\n              case 4:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  dispatch({\n                    type: SUCCE_LOGIN,\n                    payload: {\n                      token: result.result.token\n                    }\n                  });\n                  setTokenCookie(result.result.token);\n                  axiosClient.setToken(result.result.token);\n                  toast.success(getErrorMsg(lang, \"succ-login\"), getToastConfig());\n\n                  if (prevLink) {\n                    dispatch({\n                      type: PREVLINK_CHANGE,\n                      payload: {\n                        link: null\n                      }\n                    });\n                    router.push(prevLink);\n                  } else {\n                    router.push(\"/\".concat(curr, \"-\").concat(lang));\n                  }\n\n                  removeCartCookie();\n                }\n\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                captchaRef.reset();\n                toast.error(_context.t0.response.data.message, getToastConfig());\n                dispatch({\n                  type: ERROR_LOGIN,\n                  payload: {\n                    error: _context.t0.response.data.message\n                  }\n                });\n                setPassword(\"\");\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  var onResponse = function onResponse(response, type) {\n    var token;\n\n    if (type === GOOGLE) {\n      var tokenId = response.tokenId;\n      token = tokenId;\n    }\n\n    if (type === FACEBOOK) {\n      token = response.accessToken;\n    }\n\n    if (LoginStatus) return;\n    var result;\n    dis( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: LOGIN_CUSTOMER_LOADING\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return client_loginWithSocial({\n                  accessToken: token,\n                  socialType: type\n                });\n\n              case 4:\n                result = _context2.sent;\n\n                if (result.status === 200) {\n                  dispatch({\n                    type: SUCCE_LOGIN,\n                    payload: {\n                      token: result.result.token\n                    }\n                  });\n                  setTokenCookie(result.result.token);\n                  axiosClient.setToken(result.result.token);\n                  toast.success(getErrorMsg(lang, \"succ-login\"), getToastConfig());\n\n                  if (prevLink) {\n                    dispatch({\n                      type: PREVLINK_CHANGE,\n                      payload: {\n                        link: null\n                      }\n                    });\n                    router.push(prevLink);\n                  } else {\n                    router.push(\"/\".concat(curr, \"-\").concat(lang));\n                  }\n\n                  removeCartCookie();\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                toast.error(_context2.t0.response.data.message, getToastConfig());\n                dispatch({\n                  type: ERROR_LOGIN,\n                  payload: {\n                    error: _context2.t0.response.data.message\n                  }\n                });\n                setPassword(\"\");\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var renderSwitch = function renderSwitch() {\n    switch (situ) {\n      case ENTER_EMAIL:\n        return __jsx(EnterEmail, {\n          dis: dispatch,\n          setForgotEmail: setForgotEmail\n        });\n\n      case VERIFY_EMAIL:\n        return __jsx(VerifyEmail, {\n          dis: dispatch,\n          forgotEmail: forgotEmail\n        });\n\n      case ENTER_NEW_PASSWORD:\n        return __jsx(EnterNewPassWord, {\n          dis: dispatch,\n          forgotEmail: forgotEmail\n        });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"form sign-in\"\n  }, situ != SIGNIN ? __jsx(SwitchTransition, {\n    className: \"user-panel__container\"\n  }, __jsx(CSSTransition, {\n    key: situ,\n    classNames: \"user-panel__routes\",\n    timeout: 200\n  }, renderSwitch())) : __jsx(React.Fragment, null, __jsx(Translate, null, function (_ref3) {\n    var translate = _ref3.translate;\n    return __jsx(React.Fragment, null, !props.isDesktop && __jsx(\"a\", {\n      href: \"/\",\n      className: \"auth-mobile-logo\"\n    }, __jsx(\"img\", {\n      src: Logo\n    })), __jsx(\"a\", {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        switchLang(props.loc, true);\n      },\n      className: \"auth__lang-slt\",\n      href: \"#\"\n    }, __jsx(Translate, {\n      id: \"lang\"\n    })), props.isDesktop ? __jsx(React.Fragment, null, __jsx(\"h4\", {\n      className: \"auth__header\"\n    }, __jsx(Translate, {\n      id: \"welcome\"\n    })), __jsx(\"h4\", {\n      className: \"auth__header-sub\"\n    }, __jsx(Translate, {\n      id: \"signIn\"\n    }))) : __jsx(\"h4\", {\n      className: \"auth__header-sub-mobile\"\n    }, __jsx(Translate, {\n      id: \"signIn-mobile\"\n    })), __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"auth__form auth__form--login\"\n    }, __jsx(\"label\", {\n      className: \"auth__form-label\"\n    }, __jsx(\"span\", {\n      className: \"auth__input-label\"\n    }, __jsx(Translate, {\n      id: \"email\"\n    })), __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"email\",\n      placeholder: translate(\"email-placeholder\"),\n      onChange: function onChange(event) {\n        setEmail(event.target.value);\n      },\n      value: email,\n      name: \"email\",\n      required: true,\n      onBlur: function onBlur(e) {\n        validateEmail({\n          name: \"email\",\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang\n        });\n      },\n      pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\n    }), __jsx(FormErrorMsg, {\n      show: errors[\"email\"],\n      msg: errors[\"email\"]\n    })), __jsx(\"label\", {\n      className: \"auth__form-label\"\n    }, __jsx(\"span\", {\n      className: \"auth__input-label\"\n    }, __jsx(Translate, {\n      id: \"Password\"\n    })), __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"password\",\n      placeholder: translate(\"pass-placeholder\"),\n      onBlur: function onBlur(e) {\n        validatePassword({\n          name: \"password\",\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang\n        });\n      },\n      onChange: function onChange(event) {\n        setPassword(event.target.value);\n      },\n      value: password,\n      name: \"password\",\n      required: true\n    }), __jsx(FormErrorMsg, {\n      show: errors[\"password\"],\n      msg: errors[\"password\"]\n    }))), __jsx(\"div\", {\n      className: \"auth__captcha-cnt\"\n    }, __jsx(ReCAPTCHA // size=\"compact\"\n    , {\n      sitekey: \"6Lfh-usZAAAAAP3ZYWqEZ4hmjWOi_GA606Ho19aW\",\n      onChange: function onChange(token) {\n        setcaptchaToken(token);\n      },\n      ref: function ref(e) {\n        return setcaptchaRef(e);\n      }\n    }), captchaErrors ? __jsx(FormErrorMsg, {\n      show: true,\n      msg: \"please set captcha\"\n    }) : null), __jsx(\"div\", {\n      className: \"auth__btn\"\n    }, __jsx(Button, {\n      radius: \"true\",\n      value: LoginStatus ? __jsx(Loading, {\n        type: \"white\",\n        width: \"20px\",\n        height: \"20px\"\n      }) : __jsx(Translate, {\n        id: \"login\"\n      })\n    })), __jsx(\"a\", {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        dispatch({\n          type: ENTER_EMAIL\n        });\n      },\n      href: \"#\",\n      className: \"auth__forget\"\n    }, __jsx(Translate, {\n      id: \"forget\"\n    })), __jsx(\"div\", {\n      className: \"auth__footer-mobile\"\n    }, __jsx(\"h4\", {\n      className: \"auth__header-sub mt-5\"\n    }, __jsx(Translate, {\n      id: \"new\"\n    })), __jsx(\"h4\", {\n      className: \"auth__header mt-3\"\n    }, __jsx(Translate, {\n      id: \"sign-dis\"\n    })), __jsx(\"a\", {\n      onClick: props.clickSignUp,\n      className: \"auth__forget\"\n    }, __jsx(Translate, {\n      id: \"signUp3\"\n    })))), __jsx(\"div\", {\n      className: \"auth__google-btn\"\n    }, __jsx(GoogleLogin, {\n      disabled: LoginStatus,\n      clientId: process.env.NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID,\n      onSuccess: function onSuccess(res) {\n        onResponse(res, GOOGLE);\n      }\n    })), __jsx(\"div\", {\n      className: \"auth__facebook-btn\"\n    }, __jsx(FacebookLogin, {\n      appId: process.env.NEXT_PUBLIC_FACEBOOK_LOGIN_APP_ID,\n      fields: \"name,email,picture\" // onClick={componentClicked}\n      // cssClass=\"my-facebook-button-class\"\n      ,\n      icon: \"fa-facebook\",\n      size: \"small\",\n      isDisabled: LoginStatus,\n      callback: function callback(res) {\n        onResponse(res, FACEBOOK);\n      },\n      textButton: \"Sign in with Facebook\"\n    })));\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}