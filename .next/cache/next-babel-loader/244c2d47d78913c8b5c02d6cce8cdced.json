{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport Error from \"next/error\";\nimport { LocalizeProvider } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { wrapper } from \"../../../store\";\nimport { translationsPayload, mergeTranslations } from \"../../../translations/payload\";\nimport goodTranslations from \"../../../translations/good-detail-translations.json\";\nimport HeaderTranslations from \"../../../translations/header-translations.json\";\nimport Footer from \"../../../components/app/footer\";\nimport { Header } from \"../../../components/app/header\";\nimport { GoodDetail } from \"../../../components/app/pages/GoodDetail\";\nimport { slugy } from \"../../../lib/helpers\";\nimport { server_fetchFooter, server_fetchHeader } from \"../../../lib/api/client/serverCommon\";\nimport { server_fetchGoodDetail } from \"../../../lib/api/client/serverGoodDetail\";\nimport Head from \"next/head\";\nimport { WithUserAgentProps, withUserAgent, useUserAgent } from \"next-useragent\";\n\nclass GoodDetailPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (this.props.errorCode !== 200) return;\n    const slugyTitle = slugy(this.props.data.good.title);\n    const query = this.props.router.query;\n\n    if (!this.props.data.goodPermalink || slugyTitle !== slugy(this.props.data.goodPermalink)) {\n      this.props.router.replace(`${slugyTitle}`, `/${query[\"lang-curr\"]}/product/${query[\"good\"][0]}/${query[\"good\"][1]}/${slugyTitle}`, {\n        shallow: true\n      });\n    }\n  }\n\n  render() {\n    if (this.props.errorCode !== 200) {\n      return __jsx(Error, {\n        statusCode: this.props.errorCode\n      });\n    }\n\n    const goodDetail = __jsx(GoodDetail, {\n      data: this.props.data.good\n    });\n\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"ajyal.bh | \", this.props.data.good.title), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: this.props.data.good.metaTitle,\n      key: \"og:title\"\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: this.props.data.good.metaDescription,\n      key: \"og:description\"\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: process.env.NEXT_PUBLIC_Goods_PREFIX + \"/\" + this.props.data.good.goodsId + \"/thumb-\" + this.props.data.good.image,\n      key: \"og:image\"\n    }), __jsx(\"meta\", {\n      property: \"twitter:title\",\n      content: this.props.data.good.metaTitle,\n      key: \"twitter:title\"\n    }), __jsx(\"meta\", {\n      property: \"twitter:description\",\n      content: this.props.data.good.metaDescription,\n      key: \"twitter:description\"\n    }), __jsx(\"meta\", {\n      property: \"twitter:image\",\n      content: process.env.NEXT_PUBLIC_Goods_PREFIX + \"/\" + this.props.data.good.goodsId + \"/thumb-\" + this.props.data.good.image,\n      key: \"twitter:image\"\n    }), __jsx(\"meta\", {\n      property: \"title\",\n      content: this.props.data.good.metaTitle,\n      key: \"title\"\n    }), __jsx(\"meta\", {\n      property: \"description\",\n      content: this.props.data.good.metaDescription,\n      key: \"description\"\n    }), __jsx(\"meta\", {\n      property: \"keywords\",\n      content: this.props.data.good.metaKeywords,\n      key: \"keywords\"\n    })), __jsx(LocalizeProvider, {\n      initialize: translationsPayload(mergeTranslations(goodTranslations, HeaderTranslations), this.props.lang)\n    }, __jsx(Header, {\n      data: this.props.data.header,\n      lang: this.props.lang,\n      curr: this.props.curr,\n      isDesktop: this.props.ua.isDesktop\n    }), goodDetail, __jsx(Footer, {\n      data: this.props.data.footer,\n      isDesktop: this.props.ua.isDesktop,\n      lang: this.props.lang,\n      cartCount: this.props.data.header.cartCount\n    })));\n  }\n\n}\n\nexport default connect()(withRouter(GoodDetailPage));\nexport const getServerSideProps = wrapper.getServerSideProps(async ctx => {\n  var _Result$, _Result$2, _Result$3;\n\n  // initialize page lang and currency\n  // getting goodId & providerId\n  const [goodId, providerId, goodPermalink] = ctx.params.good;\n  const ua = useUserAgent(ctx.req.headers[\"user-agent\"]);\n  const Result = await Promise.all([server_fetchHeader(ua.isDesktop), server_fetchFooter(), server_fetchGoodDetail(goodId, providerId)]);\n  return {\n    props: {\n      errorCode: Result[2].status ? Result[2].status : 500,\n      ua,\n      data: {\n        header: (_Result$ = Result[0]) === null || _Result$ === void 0 ? void 0 : _Result$.result,\n        footer: (_Result$2 = Result[1]) === null || _Result$2 === void 0 ? void 0 : _Result$2.result,\n        good: (_Result$3 = Result[2]) === null || _Result$3 === void 0 ? void 0 : _Result$3.result,\n        // footer: {},\n        // good: data,\n        goodPermalink: goodPermalink ? goodPermalink : \"\" // good: {},\n\n      }\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}