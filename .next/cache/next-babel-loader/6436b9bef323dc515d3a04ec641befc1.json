{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Timer from \"react-compound-timer/build\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { selectLang } from \"../../../../../appConfigSlice\";\nimport EmailVerifyIcon from \"../../../../../assets/images/email-veri.png\";\nimport { client_sendForgetEmail, client_verifyForgetEmail } from \"../../../../../lib/api/client/clientCustomer\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { Button, Loading } from \"../../../../common\";\nimport { ENTER_NEW_PASSWORD } from \"../SignIn/SignIn\";\n\nconst VerifyEmail = ({\n  dis,\n  forgotEmail\n}) => {\n  const {\n    0: code,\n    1: setCode\n  } = useState(\"\");\n  const {\n    0: submitStatus,\n    1: setSubmitStatus\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const lang = useSelector(selectLang);\n  let can_send_new_email = false;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (submitStatus) return;\n    setSubmitStatus(true);\n\n    try {\n      const res = await client_verifyForgetEmail({\n        email: forgotEmail,\n        code\n      });\n      dis({\n        type: ENTER_NEW_PASSWORD\n      });\n    } catch (err) {\n      toast.error(err.response.data.message, getToastConfig());\n      setSubmitStatus(false);\n    }\n  };\n\n  const sendEmail = async () => {\n    try {\n      const res = await client_sendForgetEmail({\n        email: forgotEmail\n      });\n    } catch (err) {\n      toast.error(err.response.data.message, getToastConfig());\n      can_send_new_email = true;\n    }\n  };\n\n  const handleResendEmail = () => {\n    sendEmail();\n    can_send_new_email = false;\n  };\n\n  return __jsx(\"section\", {\n    className: \"forgetpass\"\n  }, __jsx(\"div\", {\n    className: \"verify-email\"\n  }, __jsx(\"img\", {\n    alt: \"verify your email\",\n    src: EmailVerifyIcon,\n    className: \"verify-email__img\"\n  }), __jsx(\"p\", {\n    className: \"verify-email__top-text\"\n  }, __jsx(Translate, {\n    id: \"check-inbox\"\n  })), __jsx(\"p\", {\n    className: \"verify-email__btm-text text-align-left px-5\"\n  }, __jsx(Translate, {\n    id: \"sent-email-msg1\"\n  }), __jsx(\"span\", {\n    className: \"timer__text\"\n  }, forgotEmail), __jsx(Translate, {\n    id: \"sent-email-msg2\"\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"verify-email__form\" //   onSubmit={this.handleSubmit}\n\n  }, __jsx(\"label\", {\n    className: \"auth__form-label\"\n  }, __jsx(Translate, null, ({\n    translate\n  }) => {\n    return __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"text\",\n      placeholder: translate(\"verify-code-placeholder\"),\n      onChange: event => {\n        setCode(event.target.value);\n      },\n      value: code,\n      name: \"code\",\n      required: true,\n      onBlur: e => {// validateEmail({\n        //   name: \"email\",\n        //   value: e.target.value,\n        //   handler: setErrors,\n        //   lang,\n        // });\n      } // pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n\n    });\n  })), __jsx(\"div\", {\n    className: \"forgetpass__btn-cnt\"\n  }, __jsx(Button, {\n    radius: \"true\",\n    value: submitStatus ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"verify\"\n    })\n  }))), __jsx(Timer, {\n    initialTime: 180000,\n    direction: \"backward\"\n  }, ({\n    start,\n    reset,\n    getTime\n  }) => {\n    if (getTime() <= 0) {\n      can_send_new_email = true;\n    }\n\n    return __jsx(\"div\", {\n      className: \"timer mt-5 d-flex align-items-center justify-content-center\"\n    }, __jsx(\"span\", {\n      className: \"timer__count\"\n    }, __jsx(Timer.Minutes, null), \" : \", __jsx(Timer.Seconds, null)), __jsx(\"a\", {\n      onClick: e => {\n        e.preventDefault();\n        if (!can_send_new_email) return;\n        handleResendEmail();\n        reset();\n        start();\n      },\n      className: \"timer__text\"\n    }, __jsx(Translate, {\n      id: \"send-new-email\"\n    })));\n  })));\n};\n\nexport default VerifyEmail;","map":null,"metadata":{},"sourceType":"module"}