{"ast":null,"code":"import axiosClient from \"../axios\";\nimport Axios from \"axios\";\nexport const client__fetchCountries = async () => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Form/ActiveCountry`);\n  return result.data;\n};\nexport const client__fetchCities = async provinceId => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Form/ActiveCity/${provinceId}`);\n  return result.data;\n};\nexport const client__fetchProvince = async countryId => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Form/ActiveProvince/${countryId}`);\n  return result.data;\n};\nexport const client_viewGood = async goodId => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.post(`/UserActivity/ViewGoods/${goodId}`);\n  return result.data;\n};\nexport const client_verifyAddressPhone = async ({\n  addressId,\n  code,\n  requestId\n}) => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Profile/VerifyMobileNumberAddress`, {\n    params: {\n      addressId: addressId,\n      code,\n      requestId\n    }\n  });\n  return result.data;\n};\nexport const client_changeMobileNumber = async ({\n  addressId,\n  mobileNumber\n}) => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Profile/ChangeMobileNumberAddress`, {\n    params: {\n      addressId: addressId,\n      mobileNumber\n    }\n  });\n  return result.data;\n};\nexport const client_setDefaultAddress = async ({\n  addressId\n}) => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.get(`/Profile/SetDefualtAddress`, {\n    params: {\n      addressId: addressId\n    }\n  });\n  return result.data;\n};\nexport const client_categoryBrands = async ({\n  pageSize,\n  pageNumber,\n  catId,\n  search,\n  BrandIds = []\n}) => {\n  const axios = axiosClient.getAxios();\n  const result = await axios.post(`/Form/BrandForWebsiteWithFillter`, {\n    PageSize: pageSize,\n    PageNumber: pageNumber,\n    Id: parseInt(catId),\n    Filter: search,\n    BrandIds\n  });\n  return result.data;\n};\nexport const client_updateUserNotificationKey = async (notificationKey, type = 1) => {\n  // for web type is 1\n  const axios = axiosClient.getAxios();\n  const model = {\n    notificationKey: notificationKey,\n    type: type\n  };\n  const result = await axios.put(`/Auth/UpdateUserNotificationKey`, model);\n  return result.data;\n};","map":null,"metadata":{},"sourceType":"module"}