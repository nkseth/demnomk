{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport LazyLoad from \"react-lazyload\";\nimport \"./CategoryItem.scss\";\nimport \"./CategoryItem-rtl.scss\";\nimport Tooltip from \"react-tooltip-lite\";\nimport Link from \"next/link\";\nimport { isRtl } from \"../../../../../../lib/isRtl\";\nimport { selectLang, selectCurr, selectLogin, PREVLINK_CHANGE } from \"../../../../../../appConfigSlice\";\nimport { Translate } from \"react-localize-redux\";\nimport { slugy, setCartCookie, trimText, roundDecimalNumber, formatMoney } from \"../../../../../../lib/helpers\";\nimport { withRouter } from \"next/router\";\nimport { client_addToCart, client_likeGood } from \"../../../../../../lib/api/client/clientCart\";\nimport axiosClient from \"../../../../../../lib/api/axios\";\nimport Cookies from \"js-cookie\";\nimport { selectCartCount, selectWishCount, addCartCount, addWishCount } from \"../../../CartAndWishlist/cartAndWishlistSlice\";\nimport { SEARCH_TYPE_CATEGORY } from \"../../../../../../lib/querys\";\nimport categoryIcon from \"./../../../../../../assets/icons/img-category.svg\";\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state),\n    isLogin: selectLogin(state).isLogin,\n    cartCount: selectCartCount(state),\n    wishCount: selectWishCount(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  saveLink: link => {\n    return {\n      type: PREVLINK_CHANGE,\n      payload: {\n        link\n      }\n    };\n  },\n  addCartCount,\n  addWishCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCartClick\", async e => {\n      e.preventDefault();\n      this.setState({\n        cartIconLoading: true\n      });\n\n      try {\n        const result = await client_addToCart({\n          goodId: this.props.goodsId,\n          providerId: this.props.providerId,\n          count: 1\n        });\n\n        if (result.status === 200) {\n          const id = result.result.cookieId;\n          const cartId = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name_cart);\n\n          if (!cartId && id) {\n            setCartCookie(id);\n            axiosClient.setCartId(id);\n          } // this.props.router.push(\n          //   `/${this.props.curr}-${this.props.lang}/cart`\n          // );\n\n\n          if (!this.state.inCart) {\n            this.props.addCartCount(this.props.cartCount + 1);\n          }\n\n          this.setState({\n            cartIconLoading: false,\n            inCart: true\n          });\n        }\n      } catch (err) {\n        this.setState({\n          cartIconLoading: false\n        }); // return false;\n      }\n    });\n\n    _defineProperty(this, \"handleLike\", e => {\n      e.preventDefault();\n\n      if (!this.props.isLogin) {\n        this.props.saveLink(this.props.router.asPath);\n        this.props.router.push(`/${this.props.curr}-${this.props.lang}/Auth`);\n        return;\n      }\n\n      const prevLike = this.state.liked;\n\n      try {\n        const result = client_likeGood(this.props.goodsId);\n        this.setState({\n          liked: !prevLike\n        });\n        const wishCount = prevLike ? this.props.wishCount - 1 : this.props.wishCount + 1;\n        this.props.addWishCount(wishCount);\n      } catch (err) {\n        this.setState({\n          liked: prevLike\n        });\n      }\n    });\n\n    this.is_rtl = isRtl(this.props.lang);\n    this.state = {\n      cartIconLoading: false,\n      liked: this.props.goodsLiked,\n      inCart: this.props.inCart,\n      navigation: false\n    };\n    this.goToDetails = this.props.haveVariation || this.props.saleWithCall;\n  }\n\n  render() {\n    const Category_pre = process.env.NEXT_PUBLIC_CategoryImages_PREFIX;\n    let allLink2 = \"#\";\n    let hrefLink = \"\";\n\n    if (this.props.haveWebPage) {\n      allLink2 = `/${this.props.curr}-${this.props.lang}/category/${this.props.categoryId}`;\n      hrefLink = \"/[usd-cur]/category\";\n    } else {\n      allLink2 = `/${this.props.curr}-${this.props.lang}/search?id=${this.props.categoryId}&type=${SEARCH_TYPE_CATEGORY}`;\n      hrefLink = \"/[usd-cur]/search\";\n    }\n\n    let imgPath = null;\n\n    if (this.props.imageUrl) {\n      imgPath = `${Category_pre}/${this.props.categoryId}/${this.props.imageUrl}`;\n    }\n\n    return __jsx(\"div\", {\n      className: \"categoryItem-container-parent\"\n    }, __jsx(\"div\", {\n      className: \"categoryItem-container categoryItem-container--hover\"\n    }, __jsx(\"article\", {\n      title: this.props.categoryTitle,\n      className: this.props.hover ? \"categoryItem categoryItem--hover\" : \"categoryItem\"\n    }, __jsx(Link, {\n      href: `${allLink2}`\n    }, __jsx(\"figure\", {\n      className: \"categoryItem__fig\"\n    }, __jsx(\"div\", {\n      className: \"categoryItem__fig-img\"\n    }, __jsx(LazyLoad, {\n      placeholder: __jsx(\"img\", {\n        className: \"goodItem-loader__img goodItem-loader__img--slider\",\n        src: \"/assets/imgs/placeholder-v2.png\"\n      })\n    }, __jsx(\"div\", {\n      className: \"categoryItem__aspect\"\n    }, this.props.imageUrl ? __jsx(\"img\", {\n      className: \"categoryItem__img\",\n      src: `${imgPath}`\n    }) : __jsx(\"img\", {\n      className: \"categoryItem__img\",\n      src: categoryIcon\n    })))), __jsx(\"figcaption\", {\n      className: \"categoryItem__fig-cap\"\n    }, trimText(this.props.categoryTitle, 30)))), __jsx(\"footer\", {\n      className: \"categoryItem__footer\"\n    }, __jsx(\"div\", {\n      className: \"categoryItem__footer__product-count-wrapper\"\n    }, __jsx(\"p\", {\n      className: \"categoryItem__footer__product-count-text\"\n    }, __jsx(\"span\", {\n      className: \"mr-2 ml-2\"\n    }, __jsx(Translate, {\n      id: \"Goods\"\n    })), __jsx(\"span\", null, roundDecimalNumber(this.props.goodsCount)), __jsx(\"span\", null, \"+\")))))));\n  }\n\n}));","map":null,"metadata":{},"sourceType":"module"}