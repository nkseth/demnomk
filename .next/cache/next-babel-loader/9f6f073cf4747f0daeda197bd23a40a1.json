{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../../../appConfigSlice\";\nimport { client_putArticleReview } from \"../../../../../lib/api/client/clientHelpCenter\";\nimport { slugy } from \"../../../../../lib/helpers\";\nimport { Tablets, TabletsAndBigger } from \"../../../../../Responsive\";\nimport CloseIcon, { fontsize } from \"./../../../../../assets/icons/close.svg\";\nimport OpenMenu from \"./../../../../../assets/icons/header-arrow-down.svg\";\nimport classnames from \"classnames\";\nimport { useEffect } from \"react\";\n\nconst Article = ({\n  data: article\n}) => {\n  var _article$articles, _article$articles2;\n\n  const {\n    0: openMenu,\n    1: setOpenMenu\n  } = useState(false);\n  const lang = useSelector(selectLang);\n  const curr = useSelector(selectCurr);\n  const {\n    0: accepted,\n    1: setAccepted\n  } = useState(0); /// 0 => nothing, 1 => yes, 2 => no\n\n  const handleReviewClick = async code => {\n    const prevState = accepted;\n    setAccepted(code);\n\n    try {\n      let acc = code === 1 ? true : false;\n      await client_putArticleReview(article.articleId, acc);\n    } catch (err) {\n      setAccepted(prevState);\n    }\n  };\n\n  useEffect(() => {\n    setOpenMenu(false);\n  }, [article.articleId]);\n  return __jsx(\"div\", {\n    className: \"container helpcenter doc\"\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\"\n  }, __jsx(\"aside\", {\n    className: \"col-lg-3 col-12 doc__aside\"\n  }, __jsx(\"div\", {\n    className: \"doc__list-cnt\"\n  }, __jsx(\"h4\", {\n    className: \"doc__list-header\"\n  }, __jsx(Translate, {\n    id: \"articles-in-section\"\n  }), __jsx(\"i\", {\n    className: \"doc__close-icon d-lg-none d-inline\",\n    onClick: () => {\n      setOpenMenu(!openMenu);\n    }\n  }, __jsx(React.Fragment, null, openMenu ? __jsx(CloseIcon, null) : __jsx(OpenMenu, null)))), __jsx(Tablets, null, openMenu && __jsx(\"ul\", {\n    className: \"doc__list\"\n  }, (_article$articles = article.articles) === null || _article$articles === void 0 ? void 0 : _article$articles.map(article => {\n    return __jsx(\"li\", {\n      key: article.articleId,\n      className: \"doc__list-item\"\n    }, __jsx(Link, {\n      href: `/${curr}-${lang}/hc/articles/${article.articleId}/${slugy(article.subject)}`\n    }, __jsx(\"a\", {\n      className: \"doc__list-link\"\n    }, article.subject)));\n  }))), __jsx(TabletsAndBigger, null, __jsx(\"ul\", {\n    className: \"doc__list\"\n  }, (_article$articles2 = article.articles) === null || _article$articles2 === void 0 ? void 0 : _article$articles2.map(article => {\n    return __jsx(\"li\", {\n      key: article.articleId,\n      className: \"doc__list-item\"\n    }, __jsx(Link, {\n      href: `/${curr}-${lang}/hc/articles/${article.articleId}/${slugy(article.subject)}`\n    }, __jsx(\"a\", {\n      className: \"doc__list-link\"\n    }, article.subject)));\n  }))))), __jsx(\"article\", {\n    className: \"col-lg-9 col-12\"\n  }, __jsx(\"div\", {\n    className: \"doc__content ql-editor\"\n  }, __jsx(\"h1\", {\n    className: \"helpcenter__subheader helpcenter__subheader--article\"\n  }, article.subject), __jsx(\"section\", {\n    style: {\n      fontSize: \"16px\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: article.description\n    },\n    className: \"helpcenter__content doc__article-content  reset-html\"\n  }), __jsx(\"div\", {\n    className: \"doc__ques-content\"\n  }, __jsx(\"p\", {\n    className: \"doc__ques\"\n  }, __jsx(Translate, {\n    id: \"article-ques\"\n  })), __jsx(\"button\", {\n    className: classnames(\"doc__ques-btn\", {\n      active: accepted === 1\n    }),\n    onClick: () => {\n      handleReviewClick(1);\n    }\n  }, __jsx(Translate, {\n    id: \"yes\"\n  })), __jsx(\"button\", {\n    className: classnames(\"doc__ques-btn\", {\n      active: accepted === 2\n    }),\n    onClick: () => {\n      handleReviewClick(2);\n    }\n  }, __jsx(Translate, {\n    id: \"no\"\n  })))))));\n};\n\nexport default Article;","map":null,"metadata":{},"sourceType":"module"}