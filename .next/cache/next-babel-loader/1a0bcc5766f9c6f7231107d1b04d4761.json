{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { wrapper } from \"../store\";\nimport \"./../node_modules/react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/react-dropdown/style.css\";\nimport \"../styles/skeleton.min.css\";\nimport \"../styles/react-input-range/index.css\";\nimport \"../styles.scss\";\nimport \"../assets/scss/base/_utilities.scss\"; // import './../styles/globals.css';\n\nimport \"./../styles/owl.carousel.min.css\";\nimport \"./../styles/quill.snow.css\";\nimport \"../styles/globals.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { detectLang, detectCurrency } from \"../lib/analyser\";\nimport { isRtl } from \"../lib/isRtl\";\nimport { isServer } from \"../lib/isServer\";\nimport axiosClient from \"./../lib/api/axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { SUCCE_LOGIN, updateLang, updateCurrency } from \"../appConfigSlice\";\nimport App from \"next/app\";\nimport cookieparser from \"cookieparser\";\nimport { checkValidCurr, checkValidLand } from \"../lib/langRoutes\";\nimport Router from \"next/router\";\nimport { PageLoading } from \"../components/common\";\nimport \"react-virtualized/styles.css\";\nimport { registerServiceWorker } from '../serviceWorker.js';\n\nif (!isServer()) {\n  var token = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name);\n  var cartId = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name_cart);\n  if (cartId) axiosClient.setCartId(cartId);\n  if (token) axiosClient.setToken(token);\n}\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var vari = useRouter().query[\"lang-curr\"];\n  var lang, curr;\n\n  var _useState = useState(false),\n      navigation = _useState[0],\n      setNavigation = _useState[1];\n\n  if (vari) {\n    lang = detectLang(vari);\n    curr = detectCurrency(vari);\n    axiosClient.setLangAndCurrency(lang, curr);\n  }\n\n  if (isRtl(lang) && !isServer()) {\n    document.body.classList.add(\"rtl\");\n  }\n\n  var dis = useDispatch();\n  useEffect(function () {\n    //// disable mobile menu overflow result after each closed menu\n    document.body.style.overflowY = \"auto\";\n  });\n  useEffect(function () {\n    registerServiceWorker();\n    var token = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name);\n\n    if (token) {\n      dis({\n        type: SUCCE_LOGIN,\n        payload: {\n          token: token\n        }\n      });\n    } //// loading\n\n\n    Router.events.on(\"routeChangeStart\", function (url) {\n      setNavigation(true);\n    });\n    Router.events.on(\"routeChangeComplete\", function () {\n      return setNavigation(false);\n    });\n    Router.events.on(\"routeChangeError\", function () {\n      return setNavigation(false);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: isRtl(lang) ? \"rtl\" : \"\"\n  }, __jsx(Component, pageProps), navigation && __jsx(PageLoading, null));\n};\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var ctx, router, req, res, store, lang, curr, cookies, cookiesParsed, _token, _cartId, appProps;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // calls page's `getInitialProps` and fills `appProps.pageProps`\n            ctx = appContext.ctx, router = appContext.router;\n            req = ctx.req, res = ctx.res, store = ctx.store;\n            lang = detectLang(router.query[\"lang-curr\"]);\n            curr = detectCurrency(router.query[\"lang-curr\"]);\n\n            if (!(req && res && isServer())) {\n              _context.next = 9;\n              break;\n            }\n\n            if (!(!checkValidLand(lang) || !checkValidCurr(curr))) {\n              _context.next = 9;\n              break;\n            }\n\n            res.writeHead(302, {\n              Location: \"/bhd-en\"\n            });\n            res.end();\n            return _context.abrupt(\"return\", {});\n\n          case 9:\n            if (req && lang && curr) {\n              axiosClient.setToken(null);\n              axiosClient.setCartId(null);\n              store.dispatch(updateLang(lang));\n              store.dispatch(updateCurrency(curr));\n              axiosClient.setLangAndCurrency(lang, curr);\n              cookies = req.headers.cookie;\n\n              if (cookies) {\n                cookiesParsed = cookieparser.parse(cookies);\n                _token = cookiesParsed[process.env.NEXT_PUBLIC_Token_Cookie_name];\n                _cartId = cookiesParsed[process.env.NEXT_PUBLIC_Token_Cookie_name_cart];\n\n                if (_token) {\n                  axiosClient.setToken(_token);\n                }\n\n                if (_cartId) {\n                  axiosClient.setCartId(_cartId);\n                }\n              }\n            }\n\n            _context.next = 12;\n            return App.getInitialProps(appContext);\n\n          case 12:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: _objectSpread(_objectSpread({}, appProps.pageProps), {}, {\n                lang: lang,\n                curr: curr\n              })\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default wrapper.withRedux(MyApp);","map":null,"metadata":{},"sourceType":"module"}