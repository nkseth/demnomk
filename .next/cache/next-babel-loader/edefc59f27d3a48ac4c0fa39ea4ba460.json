{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { BoxStyle2, SelectBox3 as SelectBox, MobileItemDrop, Loading } from \"../../../../../common\";\nimport { ProtraitPhonesAndBigger, ProtraitPhones, LandScapePhones, LandScapePhonesAndBigger } from \"../../../../../../Responsive\";\nimport { Translate } from \"react-localize-redux\";\nimport { ReactComponent as ArsIcon1 } from \"./../../../../../../assets/icons/business-and-trade.svg\";\nimport { ReactComponent as EditIcon } from \"./../../../../../../assets/icons/edit-small.svg\";\nimport { ReactComponent as DeleteIcon } from \"./../../../../../../assets/icons/delete.svg\";\nimport { ReactComponent as AddBlueIcon } from \"./../../../../../../assets/icons/add-blue.svg\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { client_getAddresses, client_deleteAddress, client_changeDestination } from \"../../../../../../lib/api/client/clientOrder\";\nimport { SELECT_ADDRESS, VERIFY_PHONE } from \"./ShippingAddressConstant\";\nimport { getErrorMsg } from \"../../../../../../lib/helpers\";\nimport { useSelector } from \"react-redux\";\nimport { selectLang } from \"../../../../../../appConfigSlice\";\nimport { NEXT } from \"../../OrderConstants\";\nimport { toast } from \"react-toastify\";\nimport { getToastConfig } from \"../../../../../../lib/toast\";\nimport NoAddressesPage from \"../../../UserPanel/PanelPages/Addresses/AddressesLayouts/NoAddressesPage\";\nimport classnames from \"classnames\";\nimport { client_changeMobileNumber, client_setDefaultAddress } from \"../../../../../../lib/api/client/clientCommon\";\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\n\nconst AddressesList = ({\n  handleSituation,\n  setData,\n  handleOrderStep\n}) => {\n  const {\n    0: addressLoading,\n    1: setAddressLoading\n  } = useState(false);\n  const {\n    0: addressList,\n    1: setAddressList\n  } = useState([]);\n  const {\n    0: selectedAddress,\n    1: setSelectedAddress\n  } = useState(null);\n  const {\n    0: continueLoading,\n    1: setContinueLoading\n  } = useState(false);\n  const {\n    0: verifyLoading,\n    1: setVerifyLoading\n  } = useState(false);\n  const lang = useSelector(selectLang);\n  const PNF = PhoneNumberFormat;\n  const phoneUtil = PhoneNumberUtil.getInstance();\n\n  const getAddresses = () => {\n    setAddressLoading(true);\n    setSelectedAddress(null);\n    client_getAddresses().then(response => {\n      if (response.status === 200) {\n        setAddressList(response.result);\n        setAddressLoading(false);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getAddresses();\n    return () => {};\n  }, []);\n\n  const handleDelete = async addressId => {\n    const con = confirm(getErrorMsg(lang, \"confirm-address-delete\"));\n    if (!con) return;\n    setAddressLoading(true);\n    const del_resutl = await client_deleteAddress(addressId);\n\n    if (del_resutl.status === 200) {\n      client_getAddresses().then(response => {\n        if (response.status === 200) {\n          setAddressList(response.result);\n          setAddressLoading(false);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const handleEdit = adr => {\n    setData({\n      addressId: adr.addressId,\n      address: adr.address,\n      firstname: adr.transfereeName,\n      lastname: adr.transfereeFamily,\n      postalCode: adr.postalCode,\n      mobileNumber: adr.transfereeMobile,\n      requestId: null,\n      lat: adr.locationX,\n      lng: adr.locationY,\n      isUpdate: true\n    }, () => {\n      handleSituation(SELECT_ADDRESS);\n    });\n  };\n\n  const handleAddNew = () => {\n    setData({\n      addressId: null,\n      address: null,\n      firstname: null,\n      lastname: null,\n      postalCode: null,\n      mobileNumber: null,\n      lat: null,\n      lng: null,\n      isUpdate: false\n    }, () => {\n      handleSituation(SELECT_ADDRESS);\n    });\n  };\n\n  const handleSelectAddress = selected => {\n    const id = selected[0] ? parseInt(selected[0].name) : null;\n    const verified = selected[0] ? selected[0].value : null;\n    setSelectedAddress({\n      id,\n      verified\n    });\n  };\n\n  const handleContinueClick = async () => {\n    if (continueLoading) return;\n\n    if (!selectedAddress || selectedAddress.id === null) {\n      toast.error(getErrorMsg(lang, \"select-address\"), getToastConfig());\n      return;\n    }\n\n    if (!selectedAddress.verified) {\n      toast.error(getErrorMsg(lang, \"verify-mobile\"), getToastConfig());\n      return;\n    }\n\n    setContinueLoading(true);\n\n    try {\n      const res = await client_changeDestination(selectedAddress.id);\n\n      if (res.status === 200) {\n        handleOrderStep(NEXT);\n      }\n    } catch (err) {\n      setContinueLoading(false);\n      toast.error(err.response.data.message, getToastConfig());\n    }\n  };\n\n  const handleVerifyClick = async item => {\n    if (verifyLoading) return;\n    setVerifyLoading(true);\n\n    try {\n      const res = await client_changeMobileNumber({\n        addressId: item.addressId,\n        mobileNumber: item.transfereeMobile.trim()\n      });\n\n      if (res.status == \"200\") {\n        setData({\n          iso: item.iso,\n          phoneCode: item.phoneCode,\n          mobileNumber: item.transfereeMobile.trim(),\n          addressId: item.addressId,\n          requestId: res.result.requestId\n        }, () => {\n          handleSituation(VERIFY_PHONE);\n        });\n      }\n    } catch (err) {\n      // this.setState({ verifyLoading: false });\n      toast.error(err.response.data.message, getToastConfig());\n      setVerifyLoading(false);\n    }\n  };\n\n  const handleSetDefault = async addressId => {\n    try {\n      const res = await client_setDefaultAddress({\n        addressId\n      });\n\n      if (res.status == \"200\") {\n        getAddresses();\n      }\n    } catch (err) {\n      toast.error(err.response.data.message, getToastConfig());\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(BoxStyle2, {\n    className: \"orderaddress\"\n  }, addressLoading ? __jsx(Loading, {\n    type: \"gray\",\n    width: \"40px\",\n    height: \"40px\",\n    styleSheet: {\n      margin: \"50px auto\"\n    }\n  }) : __jsx(\"section\", {\n    className: \"orderaddress__cnt\"\n  }, addressList.length === 0 && __jsx(NoAddressesPage, {\n    withoutBtn: true\n  }), __jsx(\"div\", {\n    className: \"mt-2 mb-2\"\n  }, addressList.length > 0 ? __jsx(SelectBox, {\n    className: \"returns-add-single__select-box--addresses\",\n    onChange: handleSelectAddress\n  }, addressList.map(adr => {\n    return __jsx(SelectBox.SelectItem, {\n      justCircleClick: true,\n      name: adr.addressId,\n      value: adr.mobileVerifed\n    }, __jsx(\"div\", {\n      className: \"addresses__item-cnt no-gutters justify-content-between flex-wrap returns-add-single__addresses\"\n    }, __jsx(LandScapePhones, null, __jsx(MobileItemDrop, null, __jsx(\"a\", {\n      href: \"\",\n      className: \"addresses__right-item addresses__right-item--iconi\",\n      onClick: e => {\n        e.preventDefault();\n        handleDelete(adr.addressId);\n      }\n    }, __jsx(DeleteIcon, {\n      className: \"addresses__right-item-icon\"\n    }), __jsx(Translate, {\n      id: \"common.delete-address\"\n    })), __jsx(\"a\", {\n      href: \"\",\n      className: \"addresses__right-item addresses__right-item--iconi\",\n      onClick: e => {\n        e.preventDefault();\n        handleEdit(adr);\n      }\n    }, __jsx(EditIcon, {\n      className: \"addresses__right-item-icon\"\n    }), __jsx(Translate, {\n      id: \"common.edit\"\n    })))), __jsx(\"div\", {\n      className: \"col-12 col-md-5 addresses__row-item\"\n    }, __jsx(\"span\", {\n      className: \"addresses__icon-cnt\"\n    }, __jsx(ArsIcon1, {\n      className: \"addresses__left-icon\"\n    })), __jsx(\"p\", {\n      className: \"addresses__ars-text\"\n    }, adr.address)), __jsx(\"div\", {\n      className: \"col-auto addresses__row-item\"\n    }, __jsx(\"span\", {\n      className: \"addresses__ars-head\"\n    }, __jsx(Translate, {\n      id: \"common.name\"\n    })), __jsx(\"span\", {\n      className: \"addresses__ars-value\"\n    }, adr.transfereeName + \" \" + adr.transfereeFamily)), __jsx(\"div\", {\n      className: \"col-auto  col-sm-auto addresses__row-item\"\n    }, __jsx(\"span\", {\n      className: \"addresses__ars-head\"\n    }, __jsx(Translate, {\n      id: \"common.phone\"\n    })), __jsx(\"span\", {\n      className: \"addresses__ars-value\"\n    }, phoneUtil.format(phoneUtil.parseAndKeepRawInput(adr.phoneCode + adr.transfereeMobile, adr.iso), PNF.INTERNATIONAL)), !adr.mobileVerifed && __jsx(\"span\", {\n      className: classnames(\"addresses__ars-alert\", \"d-block\", {\n        \"addresses__ars-alert--disable\": verifyLoading\n      }),\n      onClick: () => {\n        handleVerifyClick(adr);\n      }\n    }, __jsx(\"span\", {\n      className: \"addresses__alert-icon\"\n    }, \"!\"), __jsx(Translate, {\n      id: \"common.not-verified\"\n    }))), __jsx(LandScapePhonesAndBigger, null, __jsx(\"div\", {\n      className: \"col-12 col-md-auto addresses__row-item\"\n    }, adr.isDefualt ? __jsx(\"a\", {\n      onClick: e => {\n        e.preventDefault();\n      },\n      href: \"\",\n      className: \"addresses__right-item addresses__right-item--gray-btn\"\n    }, __jsx(Translate, {\n      id: \"common.primary-address\"\n    })) : __jsx(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n        handleSetDefault(adr.addressId);\n      },\n      className: \"addresses__right-item addresses__right-item--primary-btn\"\n    }, __jsx(Translate, {\n      id: \"addresses.default\"\n    })), __jsx(\"a\", {\n      href: \"\",\n      className: \"addresses__right-item addresses__right-item--iconi\",\n      onClick: e => {\n        e.preventDefault();\n        handleDelete(adr.addressId);\n      }\n    }, __jsx(DeleteIcon, {\n      className: \"addresses__right-item-icon\"\n    }), __jsx(Translate, {\n      id: \"common.delete-address\"\n    })), __jsx(\"a\", {\n      href: \"\",\n      className: \"addresses__right-item addresses__right-item--iconi\",\n      onClick: e => {\n        e.preventDefault();\n        handleEdit(adr);\n      }\n    }, __jsx(EditIcon, {\n      className: \"addresses__right-item-icon\"\n    }), __jsx(Translate, {\n      id: \"common.edit\"\n    }))))));\n  })) : null))), __jsx(\"section\", {\n    className: \"order-re__btn-cnt d-flex justify-content-end mt-4 mb-4 mr-xl-0 mr-3\"\n  }, __jsx(ProtraitPhonesAndBigger, null, __jsx(\"button\", {\n    className: \"primary-btn\",\n    onClick: handleAddNew\n  }, __jsx(Translate, {\n    id: \"shipping.add-new-address\"\n  })), __jsx(\"button\", {\n    // onClick={this.handleContinueClick}\n    className: \"primary-btn ml-4  rtl-ml-0 rtl-mr-4\",\n    onClick: handleContinueClick\n  }, continueLoading ? __jsx(Loading, {\n    type: \"white\",\n    width: \"20px\",\n    height: \"19px\",\n    styleSheet: {\n      display: \"inline\"\n    }\n  }) : __jsx(Translate, {\n    id: \"common.continue\"\n  }))), __jsx(ProtraitPhones, {\n    className: \"w-100\"\n  }, __jsx(\"button\", {\n    className: \"orderaddress__full-with-btn\",\n    onClick: handleAddNew\n  }, __jsx(AddBlueIcon, {\n    className: \"orderaddress__full-with-btn-icon\"\n  }), __jsx(Translate, {\n    id: \"shipping.add-new-address\"\n  })), __jsx(\"div\", {\n    className: \"checkout-fix justify-content-center\"\n  }, __jsx(\"button\", {\n    //   onClick={this.handleContinueClick}\n    className: \"primary-btn returns__add-btn\",\n    onClick: handleContinueClick\n  }, continueLoading ? __jsx(Loading, {\n    type: \"white\",\n    width: \"20px\",\n    height: \"19px\",\n    styleSheet: {\n      display: \"inline\"\n    }\n  }) : __jsx(Translate, {\n    id: \"common.continue\"\n  }))))));\n};\n\nexport default AddressesList;","map":null,"metadata":{},"sourceType":"module"}