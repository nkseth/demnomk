{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Timer from \"react-compound-timer/build\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { selectLang } from \"../../../../../appConfigSlice\";\nimport EmailVerifyIcon from \"../../../../../assets/images/email-veri.png\";\nimport { client_sendForgetEmail, client_verifyForgetEmail } from \"../../../../../lib/api/client/clientCustomer\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { Button, Loading } from \"../../../../common\";\nimport { ENTER_NEW_PASSWORD } from \"../SignIn/SignIn\";\n\nvar VerifyEmail = function VerifyEmail(_ref) {\n  var dis = _ref.dis,\n      forgotEmail = _ref.forgotEmail;\n\n  var _useState = useState(\"\"),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var _useState2 = useState(false),\n      submitStatus = _useState2[0],\n      setSubmitStatus = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var lang = useSelector(selectLang);\n  var can_send_new_email = false;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!submitStatus) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setSubmitStatus(true);\n              _context.prev = 4;\n              _context.next = 7;\n              return client_verifyForgetEmail({\n                email: forgotEmail,\n                code: code\n              });\n\n            case 7:\n              res = _context.sent;\n              dis({\n                type: ENTER_NEW_PASSWORD\n              });\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              toast.error(_context.t0.response.data.message, getToastConfig());\n              setSubmitStatus(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sendEmail = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return client_sendForgetEmail({\n                email: forgotEmail\n              });\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 10;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast.error(_context2.t0.response.data.message, getToastConfig());\n              can_send_new_email = true;\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 6]]);\n    }));\n\n    return function sendEmail() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleResendEmail = function handleResendEmail() {\n    sendEmail();\n    can_send_new_email = false;\n  };\n\n  return __jsx(\"section\", {\n    className: \"forgetpass\"\n  }, __jsx(\"div\", {\n    className: \"verify-email\"\n  }, __jsx(\"img\", {\n    alt: \"verify your email\",\n    src: EmailVerifyIcon,\n    className: \"verify-email__img\"\n  }), __jsx(\"p\", {\n    className: \"verify-email__top-text\"\n  }, __jsx(Translate, {\n    id: \"check-inbox\"\n  })), __jsx(\"p\", {\n    className: \"verify-email__btm-text text-align-left px-5\"\n  }, __jsx(Translate, {\n    id: \"sent-email-msg1\"\n  }), __jsx(\"span\", {\n    className: \"timer__text\"\n  }, forgotEmail), __jsx(Translate, {\n    id: \"sent-email-msg2\"\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"verify-email__form\" //   onSubmit={this.handleSubmit}\n\n  }, __jsx(\"label\", {\n    className: \"auth__form-label\"\n  }, __jsx(Translate, null, function (_ref4) {\n    var translate = _ref4.translate;\n    return __jsx(\"input\", {\n      className: \"auth__input\",\n      type: \"text\",\n      placeholder: translate(\"verify-code-placeholder\"),\n      onChange: function onChange(event) {\n        setCode(event.target.value);\n      },\n      value: code,\n      name: \"code\",\n      required: true,\n      onBlur: function onBlur(e) {// validateEmail({\n        //   name: \"email\",\n        //   value: e.target.value,\n        //   handler: setErrors,\n        //   lang,\n        // });\n      } // pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n\n    });\n  })), __jsx(\"div\", {\n    className: \"forgetpass__btn-cnt\"\n  }, __jsx(Button, {\n    radius: \"true\",\n    value: submitStatus ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"verify\"\n    })\n  }))), __jsx(Timer, {\n    initialTime: 180000,\n    direction: \"backward\"\n  }, function (_ref5) {\n    var start = _ref5.start,\n        reset = _ref5.reset,\n        getTime = _ref5.getTime;\n\n    if (getTime() <= 0) {\n      can_send_new_email = true;\n    }\n\n    return __jsx(\"div\", {\n      className: \"timer mt-5 d-flex align-items-center justify-content-center\"\n    }, __jsx(\"span\", {\n      className: \"timer__count\"\n    }, __jsx(Timer.Minutes, null), \" : \", __jsx(Timer.Seconds, null)), __jsx(\"a\", {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        if (!can_send_new_email) return;\n        handleResendEmail();\n        reset();\n        start();\n      },\n      className: \"timer__text\"\n    }, __jsx(Translate, {\n      id: \"send-new-email\"\n    })));\n  })));\n};\n\nexport default VerifyEmail;","map":null,"metadata":{},"sourceType":"module"}