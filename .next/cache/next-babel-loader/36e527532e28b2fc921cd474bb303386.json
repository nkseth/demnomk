{"ast":null,"code":"import { client__fetchCities, client__fetchCountries, client__fetchProvince } from \"../../../../lib/api/client/clientCommon\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { client_fetchCart, client_fetchWishlist } from \"../../../../lib/api/client/clientCart\";\nexport const LOADING = \"loading\";\nexport const IDLE = \"idle\";\nexport const SUCCEEDED = \"succeeded\";\nexport const ERROR = \"error\"; //// selectors\n\nexport const selectStatus = state => state.cart_wishlist.status;\nexport const selectCart = state => state.cart_wishlist.cart;\nexport const selectWishListStatus = state => state.cart_wishlist.wishListStatus;\nexport const selectWishList = state => state.cart_wishlist.wishList;\nexport const selectCountryId = state => state.cart_wishlist.countryId;\nexport const selectProvinceId = state => state.cart_wishlist.provinceId;\nexport const selectCityId = state => state.cart_wishlist.cityId;\nexport const selectCityText = state => state.cart_wishlist.cityText;\nexport const selectCanCheckout = state => state.cart_wishlist.canCheckout;\nexport const selectCoupon = state => state.cart_wishlist.coupon;\nexport const selectErrorMsg = state => state.cart_wishlist.error;\nexport const selectCartCount = state => state.cart_wishlist.cartCount;\nexport const selectWishCount = state => state.cart_wishlist.wishCount;\nconst initialState = {\n  status: IDLE,\n  error: null,\n  cartCount: 0,\n  wishCount: 0,\n  cart: {},\n  countryId: null,\n  provinceId: null,\n  cityId: null,\n  cityText: null,\n  coupon: null,\n  wishList: [],\n  wishListStatus: IDLE,\n  canCheckout: true\n};\nexport const fetchCart = createAsyncThunk(\"cart_wishlist/fetchCart\", async (data, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const result = await client_fetchCart(data);\n    dispatch(addCartCount(result.result ? result.result.items.length : 0));\n    return result.result;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const fetchWishList = createAsyncThunk(\"cart_wishlist/fetchWhishlist\", async (data, {\n  dispatch\n}) => {\n  const result = await client_fetchWishlist();\n  dispatch(addWishCount(result.result.length));\n  return result.result;\n});\nconst cartSlice = createSlice({\n  name: \"cart_wishlist\",\n  initialState,\n  reducers: {\n    cityChanged(state, action) {\n      state.cityId = action.payload.cityId;\n      state.countryId = action.payload.countryId;\n      state.provinceId = action.payload.provinceId;\n      state.cityText = action.payload.cityText;\n    },\n\n    addCoupon(state, action) {\n      state.coupon = action.payload;\n    },\n\n    addCartCount(state, action) {\n      state.cartCount = action.payload;\n    },\n\n    addWishCount(state, action) {\n      state.wishCount = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [fetchCart.pending]: state => {\n      state.status = LOADING;\n    },\n    [fetchCart.fulfilled]: (state, action) => {\n      if (!action.payload) {\n        state.cart = {\n          items: [],\n          itemsCount: 0\n        };\n        state.status = SUCCEEDED;\n        state.error = null;\n        state.cityId = null;\n        state.countryId = null;\n        state.provinceId = null;\n        state.cityText = null;\n        state.canCheckout = false;\n        return;\n      }\n\n      const cartItems = action.payload.items;\n      let canCheckout = true;\n\n      for (let item of cartItems) {\n        if (!item.shippingAvailable) {\n          canCheckout = false;\n          break;\n        }\n\n        if (!item.exist) {\n          canCheckout = false;\n          break;\n        }\n      }\n\n      state.status = SUCCEEDED;\n      state.cart = action.payload;\n      state.cityId = action.payload.cityId;\n      state.countryId = action.payload.countryId;\n      state.provinceId = action.payload.provinceId;\n      state.cityText = action.payload.cityTitle;\n      state.canCheckout = canCheckout;\n      state.error = null;\n    },\n    [fetchCart.rejected]: (state, action) => {\n      state.status = ERROR;\n      state.error = action.payload.message;\n      state.coupon = null;\n    },\n    [fetchWishList.pending]: state => {\n      state.wishListStatus = LOADING;\n    },\n    [fetchWishList.fulfilled]: (state, action) => {\n      state.wishListStatus = SUCCEEDED;\n      state.wishList = action.payload;\n    },\n    [fetchWishList.rejected]: state => {\n      state.wishListStatus = ERROR;\n    }\n  }\n});\nexport const {\n  cityChanged,\n  addCoupon,\n  addCartCount,\n  addWishCount\n} = cartSlice.actions;\nexport default cartSlice.reducer; //// cart deliverty api\n\nexport const fetchCountry = async () => {\n  const result = await client__fetchCountries();\n  return result.result;\n};\nexport const fetchProvinces = async countryId => {\n  const result = await client__fetchProvince(countryId);\n  return result.result;\n};\nexport const fetchCities = async provinceId => {\n  const result = await client__fetchCities(provinceId);\n  return result.result;\n};","map":null,"metadata":{},"sourceType":"module"}