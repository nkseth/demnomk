{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // import \"./Credits.scss\";\n// import \"./Credits-rtl.scss\";\n\nimport BoxStyle2 from \"../../../../../common/BoxStyle2\";\nimport { Translate } from \"react-localize-redux\";\nimport { ReactComponent as EmptyWalletIcon } from \"./../../../../../../assets/icons/empty wallet.svg\";\nimport { client_getCreditList } from \"../../../../../../lib/api/client/clientUserPanel\";\nimport { Pager, Loading } from \"../../../../../common\";\nimport { LandScapePhones, LandScapePhonesAndBigger } from \"../../../../../../Responsive\";\nimport { selectCurr } from \"../../../../../../appConfigSlice\";\nimport { connect } from \"react-redux\";\n\nclass Credit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"pageChangedAction\", async pagenumber => {\n      this.setState({\n        pageNumber: pagenumber\n      });\n      await this.getData(pagenumber);\n    });\n\n    _defineProperty(this, \"getData\", async pagenumber => {\n      this.setState({\n        showLoader: true\n      });\n      const result = await client_getCreditList({\n        pageNumber: pagenumber,\n        pageSize: this.state.pageSize\n      });\n\n      if (result.result.count == 0) {\n        this.setState({\n          emptyCrdits: true\n        });\n      } else {\n        this.setState({\n          creditsItems: result.result.transactionList,\n          totalNumber: result.result.count,\n          credit: result.result.credit\n        });\n      }\n\n      this.setState({\n        showLoader: false\n      });\n    });\n\n    this.state = {\n      emptyCrdits: false,\n      pageNumber: 1,\n      pageSize: 10,\n      totalNumber: 0,\n      credit: 0,\n      showLoader: false,\n      creditsItems: []\n    };\n  }\n\n  renderEmtpySection() {\n    return __jsx(\"section\", {\n      className: \"no-address\"\n    }, __jsx(\"div\", null, __jsx(EmptyWalletIcon, {\n      className: \"no-address__icon\"\n    }), __jsx(\"p\", {\n      className: \"no-address__topText\"\n    }, __jsx(Translate, {\n      id: \"credits.msg2\"\n    }))));\n  }\n\n  componentDidMount() {\n    this.getData(this.state.pageNumber);\n  }\n\n  render() {\n    var _this$state$creditsIt, _this$state$creditsIt2;\n\n    return __jsx(BoxStyle2, {\n      className: \"credit\"\n    }, this.state.showLoader ? __jsx(Loading, {\n      type: \"gray\",\n      width: \"9%\",\n      height: \"70%\"\n    }) : __jsx(\"div\", null, __jsx(\"header\", {\n      className: \"credit__header row no-gutters align-items-center justify-content-between\"\n    }, __jsx(\"div\", {\n      className: \"credit__header-div col-md-5 col-lg-4\"\n    }, __jsx(\"div\", {\n      className: \"credit__header-div--back\"\n    }, __jsx(\"span\", {\n      className: \"credit__text-s2\"\n    }, __jsx(Translate, {\n      id: \"credits.av-balance\"\n    })), __jsx(\"span\", {\n      className: \"credit__text credit__text--bold\"\n    }, __jsx(Translate, {\n      id: this.props.curr\n    }), \" \", this.state.credit)))), __jsx(\"section\", {\n      className: \"credit__content\"\n    }, this.state.emptyCrdits && this.renderEmtpySection(), !this.state.emptyCrdits && __jsx(\"div\", {\n      className: \"credit__table-cnt\"\n    }, __jsx(LandScapePhonesAndBigger, null, __jsx(\"table\", {\n      className: \"credit__table\"\n    }, __jsx(\"thead\", {\n      className: \"credit__table-header\"\n    }, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(Translate, {\n      id: \"credits.date\"\n    })), __jsx(\"th\", null, __jsx(Translate, {\n      id: \"credits.type\"\n    })), __jsx(\"th\", null, __jsx(Translate, {\n      id: \"credits.details\"\n    })), __jsx(\"th\", null, __jsx(Translate, {\n      id: \"credits.amount\"\n    })), __jsx(\"th\", null, __jsx(Translate, {\n      id: \"credits.balance\"\n    })))), __jsx(\"tbody\", {\n      className: \"credit__table-body\"\n    }, (_this$state$creditsIt = this.state.creditsItems) === null || _this$state$creditsIt === void 0 ? void 0 : _this$state$creditsIt.map(item => {\n      return __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"credit__tbl-text credit__tbl-text--gray\"\n      }, item.transactionDateTime), __jsx(\"td\", {\n        className: \"credit__tbl-text credit__tbl-text--primary\"\n      }, item.transactionType), __jsx(\"td\", {\n        className: \"credit__tbl-text credit__tbl-text--primary\"\n      }, item.comment), __jsx(\"td\", {\n        className: `credit__tbl-text d-ltr ${item.transactionTypeId != 10 ? 'credit__tbl-text--green' : 'credit__tbl-text--orange'}`\n      }, item.transactionTypeId == 10 ? __jsx(\"span\", null, \"-\") : __jsx(\"span\", null, \"+\"), \" \", this.props.curr.toUpperCase(), \" \", item.amount), __jsx(\"td\", {\n        className: \"credit__tbl-text credit__tbl-text--primary\"\n      }, this.props.curr.toUpperCase(), \" \", item.balance));\n    })))), __jsx(LandScapePhones, null, __jsx(\"ul\", {\n      className: \"credit__landScape-list\"\n    }, (_this$state$creditsIt2 = this.state.creditsItems) === null || _this$state$creditsIt2 === void 0 ? void 0 : _this$state$creditsIt2.map(item => {\n      return __jsx(\"li\", {\n        className: \"credit__landScape-item\"\n      }, __jsx(\"div\", {\n        className: \"credit__div\"\n      }, __jsx(\"span\", {\n        className: \"d-block credit__tbl-text credit__tbl-text--primary\"\n      }, item.transactionType), __jsx(\"span\", {\n        className: \"credit__tbl-text credit__tbl-text--gray\"\n      }, item.transactionDateTime)), __jsx(\"div\", {\n        className: \"credit__div\"\n      }, __jsx(\"span\", {\n        className: \"d-block credit__tbl-text d-ltr\" + item.transactionTypeId == 10 ? \"credit__tbl-text--orange\" : \"credit__tbl-text--green\"\n      }, item.transactionTypeId == 10 ? __jsx(\"span\", null, \"-\") : __jsx(\"span\", null, \"+\"), \" \", this.props.curr.toUpperCase(), \" \", item.amount, \" \", this.props.curr.toUpperCase(), \" \", item.amount), __jsx(\"span\", {\n        className: \"d-block credit__tbl-text credit__tbl-text--primary d-ltr\"\n      }, __jsx(\"span\", {\n        className: \"credit__tbl-text credit__tbl-text--margin-right credit__tbl-text--gray\"\n      }, \"Balance\"), this.props.curr.toUpperCase(), \" \", item.balance)), __jsx(\"div\", {\n        className: \"credit__div credit__div--basis\"\n      }, __jsx(\"span\", {\n        className: \"d-block credit__tbl-text credit__tbl-text--primary\"\n      }, item.comment)));\n    }))), __jsx(Pager, {\n      count: Math.ceil(this.state.totalNumber / this.state.pageSize),\n      activeItem: this.state.pageNumber,\n      onPageClick: pageNumber => {\n        this.pageChangedAction(pageNumber);\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    curr: selectCurr(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Credit);","map":null,"metadata":{},"sourceType":"module"}