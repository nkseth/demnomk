{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport VerificationInput from \"react-verification-input\";\nimport { selectCurr, selectLang } from \"../../../../../../../appConfigSlice\";\nimport { client_changeMobileNumber, client_verifyAddressPhone } from \"../../../../../../../lib/api/client/clientCommon\";\nimport { getErrorMsg } from \"../../../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../../../lib/toast\";\nimport { Loading } from \"../../../../../../common\";\nimport { useHistory } from \"react-router-dom\";\nimport Timer from \"react-compound-timer/build\";\nvar COUNT = 4;\nexport default (function (_ref) {\n  var handleSituation = _ref.handleSituation,\n      addpage = _ref.addpage,\n      data = _ref.data,\n      setData = _ref.setData;\n  var lang = useSelector(selectLang);\n  var curr = useSelector(selectCurr);\n  var PNF = PhoneNumberFormat;\n  var phoneUtil = PhoneNumberUtil.getInstance();\n  var history = useHistory();\n  var phone = data.phoneCode + data.phoneNumber;\n  var number = phoneUtil.parseAndKeepRawInput(phone, data.phoneIso);\n  var can_send_new_email = false;\n\n  var handleclick = function handleclick() {\n    handleSituation({\n      type: \"next\"\n    });\n  };\n\n  var _useState = useState(\"\"),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var handleCode = function handleCode(ref) {\n    setCode(ref.target.value);\n  };\n\n  var _useState2 = useState(false),\n      submitLoading = _useState2[0],\n      setSubmitLoading = _useState2[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, _err$response$data, _err$response$data$re, text;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!submitLoading) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!(code.length < COUNT)) {\n                _context.next = 5;\n                break;\n              }\n\n              toast.error(getErrorMsg(lang, \"code-is-not-valid\"), getToastConfig());\n              return _context.abrupt(\"return\");\n\n            case 5:\n              setSubmitLoading(true);\n              _context.prev = 6;\n              _context.next = 9;\n              return client_verifyAddressPhone({\n                addressId: data.addressId,\n                code: code,\n                requestId: data.requestId\n              });\n\n            case 9:\n              result = _context.sent;\n\n              if (result.status == 200) {\n                // handleSituation({ type: \"addresses\" });\n                history.push(\"/\" + curr + \"-\" + lang + \"/panel/addresses\");\n              }\n\n              _context.next = 18;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](6);\n              text = (_err$response$data = _context.t0.response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$re = _err$response$data.result) === null || _err$response$data$re === void 0 ? void 0 : _err$response$data$re.errorText;\n              toast.error(text || _context.t0.response.data.message, getToastConfig());\n              setSubmitLoading(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 13]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleResendMessage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resetTimer) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return client_changeMobileNumber({\n                mobileNumber: data.phoneNumber,\n                addressId: data.addressId\n              });\n\n            case 3:\n              res = _context2.sent;\n              setData({\n                phoneNumberVeri: _objectSpread(_objectSpread({}, data), {}, {\n                  requestId: res.result.requestId\n                })\n              });\n              can_send_new_email = false;\n              resetTimer();\n              _context2.next = 13;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast.error(_context2.t0.response.data.message, getToastConfig());\n              can_send_new_email = true;\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function handleResendMessage(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Translate, null, function (_ref4) {\n    var t = _ref4.translate;\n    return __jsx(React.Fragment, null, __jsx(\"section\", {\n      className: \"add-address-step2\"\n    }, __jsx(\"div\", {\n      className: \"add-address-step2__col\"\n    }, __jsx(\"p\", {\n      className: \"add-address-step2__p1\"\n    }, __jsx(Translate, {\n      id: \"addresses.verify\"\n    })), __jsx(\"p\", {\n      className: \"add-address-step2__p2\"\n    }, __jsx(Translate, {\n      id: \"addresses.verify-des\"\n    })), __jsx(\"p\", {\n      className: \"add-address-step2__phone\"\n    }, phoneUtil.format(number, PNF.INTERNATIONAL)), __jsx(\"a\", {\n      onClick: handleclick,\n      className: \"add-address-step2__link primary-link\"\n    }, __jsx(Translate, {\n      id: \"addresses.changephone\"\n    })), __jsx(\"div\", {\n      className: \"add-address-step2__verification-container\"\n    }, __jsx(VerificationInput, {\n      placeholder: \"\",\n      inputField: {\n        onChange: handleCode\n      },\n      length: COUNT // getInputRef={handleCode}\n\n    })), __jsx(\"button\", {\n      onClick: handleSubmit,\n      className: \"primary-btn add-address-step2__btn\"\n    }, submitLoading ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"addresses.changephone-btn\"\n    })), __jsx(\"a\", {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        history.push(\"/\" + curr + \"-\" + lang + \"/panel/addresses\");\n      },\n      className: \"add-address-step2__link mt-3 d-block primary-link\"\n    }, __jsx(Translate, {\n      id: \"addresses.skip\"\n    }))), __jsx(\"div\", {\n      className: \"add-address-step2__col\"\n    }, __jsx(Timer, {\n      initialTime: 300000,\n      direction: \"backward\"\n    }, function (_ref5) {\n      var start = _ref5.start,\n          reset = _ref5.reset,\n          getTime = _ref5.getTime;\n\n      if (getTime() <= 0) {\n        can_send_new_email = true;\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"add-address-step2__opt\"\n      }, __jsx(Translate, {\n        id: \"addresses.dontreceive\"\n      })), \"\\xA0\\xA0\", __jsx(\"span\", {\n        className: \"timer__count ml-3 mr-3\"\n      }, __jsx(Timer.Minutes, null), \" : \", __jsx(Timer.Seconds, null)), __jsx(\"a\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          if (!can_send_new_email) return;\n          handleResendMessage(function () {\n            reset();\n            start();\n          });\n        },\n        className: \"add-address-step2__link primary-link\"\n      }, __jsx(Translate, {\n        id: \"addresses.resendnow\"\n      })));\n    }))));\n  });\n});","map":null,"metadata":{},"sourceType":"module"}