{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../../../../appConfigSlice\";\nimport { SEARCH_TYPE_CATEGORY, SEARCH_TYPE_SEARCH, SEARCH_TYPE_SLIDER } from \"../../../../../../lib/querys\";\nimport { Loading } from \"./../../../../../common\";\n\nclass SearchSugestion extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"header-top__search-sugestion\"\n    }, __jsx(\"div\", {\n      className: \"header-top__search-sugestion__triangle\"\n    }), __jsx(\"div\", {\n      className: \"header-top__search-sugestion__body\"\n    }, this.props.showLoader ? __jsx(Loading, {\n      type: \"gray\",\n      width: \"11%\",\n      height: \"70%\"\n    }) : __jsx(\"div\", {\n      className: \"w-100 d-flex flex-wrap\"\n    }, __jsx(\"div\", {\n      className: \"col-md-8 col-sm-6 col-12 header-top__search-sugestion__body__goods p-0\"\n    }, this.props.data.goods.map(item => {\n      return __jsx(\"div\", {\n        className: \" header-top__search-sugestion__body__goods__items\",\n        key: item.goodsId\n      }, __jsx(Link, {\n        href: `/${this.props.curr}-${this.props.lang}/search?search=${item.title}`\n      }, __jsx(\"a\", null, __jsx(\"span\", {\n        className: \"good\"\n      }, item.title), __jsx(\"span\", {\n        className: \"category ml-2 mr-2\"\n      }, item.categoryTitle))));\n    })), __jsx(\"div\", {\n      className: \"col-md-4 col-sm-6 col-12 header-top__search-sugestion__body__matches\"\n    }, __jsx(\"div\", {\n      className: \"mt-sm-0 mt-3 header-top__search-sugestion__body__matches__items\"\n    }, this.props.data.brand.length != 0 && __jsx(\"div\", {\n      className: \"header\"\n    }, __jsx(Translate, {\n      id: \"nav.matching-brand\"\n    })), this.props.data.brand.map(item => {\n      return __jsx(\"div\", {\n        className: \"items\",\n        key: item.brandId\n      }, __jsx(Link, {\n        href: `/${this.props.curr}-${this.props.lang}/search?brandId=${item.brandId}&type=${SEARCH_TYPE_SEARCH}`\n      }, __jsx(\"a\", null, item.brandTitle)));\n    })), __jsx(\"div\", {\n      className: \"mt-sm-0 mt-3 header-top__search-sugestion__body__matches__items\"\n    }, __jsx(\"div\", {\n      className: \"header-top__search-sugestion__body__matches__items\"\n    }, this.props.data.category.length != 0 && __jsx(\"div\", {\n      className: \"header\"\n    }, __jsx(Translate, {\n      id: \"nav.matching-category\"\n    })), this.props.data.category.map(cat => {\n      let allLink;\n\n      if (cat.haveWebPage) {\n        allLink = `/${this.props.curr}-${this.props.lang}/category/${cat.categoryId}`;\n      } else {\n        allLink = `/${this.props.curr}-${this.props.lang}/search?id=${cat.categoryId}&type=${SEARCH_TYPE_CATEGORY}`;\n      }\n\n      return __jsx(\"div\", {\n        className: \"items\",\n        key: cat.categoryId\n      }, __jsx(Link, {\n        href: allLink\n      }, __jsx(\"a\", null, cat.categoryTitle)));\n    })))))));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state)\n  };\n};\n\nexport default connect(mapDispatchToProps)(SearchSugestion);","map":null,"metadata":{},"sourceType":"module"}