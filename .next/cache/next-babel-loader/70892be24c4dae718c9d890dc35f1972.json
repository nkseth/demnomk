{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\"; // import \"./MultiAddInput.scss\";\n\nimport { ReactComponent as CloseIcon } from \"./../../../assets/icons/close-naviblue.svg\";\nimport { ReactComponent as AddIcon } from \"./../../../assets/icons/add-icon.svg\";\nvar id = 0;\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseClick\", function (itemIndex, e) {\n      // const newItems = this.state.items.filter((item) => {\n      //   return item.id !== itemId;\n      // });\n      // this.setState({ items: [...newItems] });\n      _this.props.handleCloseClick(itemIndex);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddClick\", function (e) {\n      if (!_this.state.inputText) return; // this.setState({\n      //   items: [\n      //     ...this.state.items,\n      //     {\n      //       id: id,\n      //       text: this.state.inputText,\n      //       item: (\n      //         <li\n      //           className=\"multiaddinput__list-item\"\n      //           style={{\n      //             backgroundColor: this.props.itemBgColor,\n      //             color: this.props.itemColor,\n      //           }}\n      //           key={id}\n      //         >\n      //           {this.state.inputText}\n      //           <CloseIcon\n      //             onClick={this.handleCloseClick.bind(this, id)}\n      //             className=\"multiaddinput__close-icon\"\n      //           />\n      //         </li>\n      //       ),\n      //     },\n      //   ],\n      // });\n\n      _this.props.handleAddClick(_this.state.inputText);\n\n      id++;\n\n      _this.setState({\n        inputText: \"\"\n      });\n\n      _this.inputRef.current.focus();\n    });\n\n    _this.inputRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      items: [],\n      inputText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$props$items;\n\n      return __jsx(\"div\", {\n        className: \"multiaddinput\"\n      }, __jsx(\"div\", {\n        className: \"multiaddinput__input-cnt\"\n      }, __jsx(\"input\", {\n        id: this.props.name,\n        ref: this.inputRef,\n        name: this.props.name,\n        placeholder: this.props.placeholder,\n        type: \"text\",\n        className: \"gray__input multiaddinput__input\",\n        value: this.state.inputText,\n        onChange: function onChange(e) {\n          _this2.setState({\n            inputText: e.target.value\n          });\n        }\n      }), __jsx(\"span\", {\n        onClick: this.handleAddClick,\n        className: \"multiaddinput__icon-cnt\"\n      }, __jsx(AddIcon, {\n        className: \"multiaddinput__input-icon\"\n      }))), __jsx(\"ul\", {\n        className: \"multiaddinput__list\"\n      }, (_this$props$items = this.props.items) === null || _this$props$items === void 0 ? void 0 : _this$props$items.map(function (item, index) {\n        return __jsx(\"li\", {\n          className: \"multiaddinput__list-item\",\n          style: {\n            backgroundColor: _this2.props.itemBgColor,\n            color: _this2.props.itemColor\n          },\n          key: index\n        }, item.pointText, _this2.props.disabled ? null : __jsx(CloseIcon, {\n          onClick: _this2.handleCloseClick.bind(_this2, index),\n          className: \"multiaddinput__close-icon\"\n        }));\n      })));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}