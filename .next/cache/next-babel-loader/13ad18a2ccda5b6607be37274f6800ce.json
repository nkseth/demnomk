{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { BoxStyle2, FormErrorMsg, Loading } from \"../../../../../common\";\nimport EmailVerifyIcon from \"../../../../../../assets/images/email-veri.png\";\nimport { client_sendVerifyEmail, client_verifyEmail } from \"../../../../../../lib/api/client/clientUserPanel\";\nimport { toast } from \"react-toastify\";\nimport { getErrorMsg } from \"../../../../../../lib/helpers\";\nimport { useSelector } from \"react-redux\";\nimport { selectLang } from \"../../../../../../appConfigSlice\";\nimport { getToastConfig } from \"../../../../../../lib/toast\";\nimport { PROFILE } from \"./Profile\";\nimport Timer from \"react-compound-timer/build\";\nimport { validateEmpty } from \"../../../../../../lib/formValidator\";\n\nvar ProfileVerifyEmail = function ProfileVerifyEmail(_ref) {\n  var handleSitu = _ref.handleSitu,\n      email = _ref.email;\n\n  var _useState = useState(\"\"),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var _useState2 = useState(false),\n      sendEmailLoading = _useState2[0],\n      setSendEmailLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      submitLoading = _useState3[0],\n      setSubmitLoading = _useState3[1];\n\n  var _useState4 = useState({}),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var can_send_new_email = false;\n  var lang = useSelector(selectLang); // const [errors]\n\n  var sendEmail = function sendEmail() {\n    setSendEmailLoading(true);\n    client_sendVerifyEmail({\n      email: email\n    }).then(function (res) {\n      setSendEmailLoading(false);\n    })[\"catch\"](function (err) {\n      toast.error(\"error occurred\", getToastConfig());\n      setSendEmailLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    sendEmail();\n    return function () {};\n  }, []);\n\n  var handleResendEmail = function handleResendEmail(e) {\n    e.preventDefault();\n    sendEmail();\n    can_send_new_email = false;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var key, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!submitLoading) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.t0 = _regeneratorRuntime.keys(errors);\n\n            case 4:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 11;\n                break;\n              }\n\n              key = _context.t1.value;\n\n              if (!errors[key]) {\n                _context.next = 9;\n                break;\n              }\n\n              toast.error(getErrorMsg(lang, \"error-detected\"), getToastConfig());\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.next = 4;\n              break;\n\n            case 11:\n              setSubmitLoading(true);\n              _context.prev = 12;\n              _context.next = 15;\n              return client_verifyEmail({\n                email: email,\n                code: code\n              });\n\n            case 15:\n              res = _context.sent;\n              toast.success(getErrorMsg(lang, \"verification-succes\"), getToastConfig());\n              handleSitu(PROFILE);\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t2 = _context[\"catch\"](12);\n              toast.error(_context.t2.response.data.message, getToastConfig());\n              setSubmitLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[12, 20]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(BoxStyle2, null, __jsx(\"section\", {\n    className: \"container-fluid verify-email-cnt\"\n  }, __jsx(\"div\", {\n    className: \"verify-email\"\n  }, sendEmailLoading ? __jsx(Loading, {\n    width: \"40px\",\n    height: \"40px\",\n    styleSheet: {\n      margin: \"60px auto 40px auto\"\n    }\n  }) : __jsx(\"img\", {\n    alt: \"verify your email\",\n    src: EmailVerifyIcon,\n    className: \"verify-email__img\"\n  }), __jsx(\"p\", {\n    className: \"verify-email__top-text\"\n  }, __jsx(Translate, {\n    id: \"email-verify.check-email\"\n  })), __jsx(\"p\", {\n    className: \"verify-email__btm-text\"\n  }, __jsx(Translate, {\n    id: \"email-verify.enter-code\"\n  })), __jsx(\"form\", {\n    className: \"verify-email__form\",\n    onSubmit: handleSubmit\n  }, __jsx(Translate, null, function (_ref3) {\n    var t = _ref3.translate;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"verify-email__input-cnt\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"gray__input\",\n      name: \"code\",\n      value: code,\n      required: true,\n      placeholder: t(\"email-verify.verification-code-placeholder\"),\n      onChange: function onChange(e) {\n        setCode(e.target.value);\n        validateEmpty({\n          name: \"code\",\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang\n        });\n      },\n      onBlur: function onBlur(e) {\n        validateEmpty({\n          name: \"code\",\n          value: e.target.value,\n          handler: setErrors,\n          lang: lang\n        });\n      }\n    })), __jsx(FormErrorMsg, {\n      show: errors[\"code\"],\n      msg: errors[\"code\"]\n    }));\n  }), __jsx(\"button\", {\n    className: \"primary-btn no-address__btn\"\n  }, submitLoading ? __jsx(Loading, {\n    type: \"white\",\n    width: \"20px\",\n    height: \"20px\"\n  }) : __jsx(Translate, {\n    id: \"email-verify.verify\"\n  })))), __jsx(Timer, {\n    initialTime: 180000,\n    direction: \"backward\"\n  }, function (_ref4) {\n    var start = _ref4.start,\n        reset = _ref4.reset,\n        getTime = _ref4.getTime;\n\n    if (getTime() <= 0) {\n      can_send_new_email = true;\n    }\n\n    return __jsx(\"div\", {\n      className: \"timer mt-5 d-flex align-items-center justify-content-center\"\n    }, __jsx(\"span\", {\n      className: \"timer__count\"\n    }, __jsx(Timer.Minutes, null), \" : \", __jsx(Timer.Seconds, null)), __jsx(\"a\", {\n      onClick: function onClick(e) {\n        if (!can_send_new_email) return;\n        handleResendEmail(e);\n        reset();\n        start();\n      },\n      className: \"timer__text\"\n    }, __jsx(Translate, {\n      id: \"profile.send-new-email\"\n    })));\n  })));\n};\n\nexport default ProfileVerifyEmail;","map":null,"metadata":{},"sourceType":"module"}