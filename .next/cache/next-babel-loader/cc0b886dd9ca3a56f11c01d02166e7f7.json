{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { NEXT, COMPLETE_AND_NEXT } from \"../CreateShopConstant\";\nimport { CreateShopContext } from \"../CreateShopContext\";\nimport { Translate } from \"react-localize-redux\";\nimport { SelectBox2 as SelectBox, Loading } from \"../../../../common\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport SearchIcon from \"./../../../../../assets/icons/search-gray.svg\";\nimport { client_getActiveCities, client_getActiveProvince } from \"./../../../../../lib/api/client/clientShop\";\n\nclass Country extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      if (this.state.cityId == 0 || this.state.cityId == undefined) {\n        this.setState({\n          citySelectError: true\n        });\n        return;\n      }\n\n      debugger;\n      this.setState({\n        countrySelectError: false,\n        citySelectError: false\n      });\n      this.context.handleCountry(this.state.cityId, this.state.cityName, this.state.clearAddress, this.state.provinceId);\n      this.context.handleStep(COMPLETE_AND_NEXT);\n    });\n\n    this.state = {\n      countryId: null,\n      provinceId: 0,\n      cityId: 0,\n      cityName: \"\",\n      phoneCode: \"\",\n      provinceItems: [],\n      cityItems: [],\n      countrySelectError: false,\n      citySelectError: false,\n      showLoader: false,\n      clearAddress: false\n    };\n    this.getActiveCities = this.getActiveCities.bind(this);\n    this.setCityId = this.setCityId.bind(this);\n  }\n\n  async componentDidMount() {\n    const result = await client_getActiveProvince(this.context.formData.fkCountryId);\n    this.setState({\n      provinceItems: result.result,\n      countryId: this.context.formData.fkCountryId,\n      cityId: this.context.formData.fkCityId,\n      provinceId: this.context.formData.fkProvinceId,\n      showLoader: false\n    });\n\n    if (this.state.provinceId != 0) {\n      this.getActiveCities(this.state.provinceId);\n    }\n  }\n\n  async getActiveCities(cntId) {\n    this.setState({\n      showLoader: true\n    });\n    const result = await client_getActiveCities(cntId);\n    this.setState({\n      cityItems: result.result,\n      isCitySelected: true,\n      showLoader: false,\n      clearAddress: true,\n      provinceId: cntId\n    });\n  }\n\n  setCityId(cityId) {\n    const cityName = this.state.cityItems.find(x => x.cityId == cityId).cityTitle;\n    this.setState({\n      cityId: cityId,\n      cityName: cityName,\n      clearAddress: true\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"createshop__transition-cnt\"\n    }, this.state.showLoader && __jsx(Loading, {\n      type: \"gray\",\n      width: \"11%\",\n      height: \"70%\"\n    }), __jsx(\"div\", {\n      className: this.state.showLoader ? \"d-none\" : \"\"\n    }, __jsx(\"div\", {\n      className: \"mt-5\"\n    }, __jsx(\"h3\", {\n      className: \"createshop__header-text\"\n    }, __jsx(Translate, {\n      id: \"country.country-msg1\"\n    })), __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-6\"\n    }, __jsx(\"h3\", {\n      className: \"createshop__header-text mt-5\"\n    }, __jsx(Translate, {\n      id: \"country.province-choose\"\n    })), __jsx(SelectBox, {\n      className: \"createshop__country-cnt createshop__form--country\"\n    }, this.state.provinceItems.map(item => {\n      return __jsx(SelectBox.SelectItem, {\n        isCountry: false,\n        handleSelect: this.getActiveCities,\n        name: item.provinceId,\n        value: item.provinceId,\n        key: item.provinceId,\n        selectedId: this.state.provinceId\n      }, __jsx(\"span\", {\n        className: \"createshop__text1rem\"\n      }, item.provinceName));\n    }))), __jsx(\"div\", {\n      className: \"col-md-6\"\n    }, __jsx(\"h3\", {\n      className: \"createshop__header-text mt-5\"\n    }, __jsx(Translate, {\n      id: \"country.city-choose\"\n    })), this.state.cityItems.length > 10 && __jsx(\"div\", {\n      className: \"checklist__search\"\n    }, __jsx(SearchIcon, {\n      className: \"checklist__search-input-icon\"\n    }), __jsx(\"input\", {\n      onChange: e => {\n        this.setState({\n          search: e.target.value\n        });\n      },\n      type: \"text\",\n      value: this.state.search,\n      className: \"checklist__search-input\",\n      placeholder: \"search\"\n    })), __jsx(Scrollbars, {\n      renderView: props => __jsx(\"div\", _extends({}, props, {\n        className: \"deliveryPanel__scrol-view\"\n      })),\n      renderTrackVertical: props => __jsx(\"div\", _extends({}, props, {\n        className: \"deliveryPanel__track-vertical\"\n      })) // Duration for hide animation in ms. autoHideDuration={200}\n      ,\n      style: {\n        height: \"400px\"\n      }\n    }, __jsx(SelectBox, {\n      className: \"createshop__country-cnt createshop__form--country\"\n    }, this.state.cityItems.map(item => {\n      var _item$cityTitle;\n\n      if (this.state.search && ((_item$cityTitle = item.cityTitle) === null || _item$cityTitle === void 0 ? void 0 : _item$cityTitle.includes(this.state.search)) || !this.state.search) return __jsx(SelectBox.SelectItem, {\n        isCountry: false,\n        handleSelect: this.setCityId,\n        name: item.cityId,\n        value: item.cityId,\n        key: item.cityId,\n        selectedId: this.state.cityId\n      }, __jsx(\"span\", {\n        className: \"createshop__text1rem\"\n      }, item.cityTitle));\n    })))), __jsx(\"div\", {\n      className: \"col-12 text-center\"\n    }, this.state.countrySelectError && __jsx(\"span\", {\n      className: \"country-error\"\n    }, __jsx(Translate, {\n      id: \"country.select-cntry\"\n    })), this.state.citySelectError && __jsx(\"span\", {\n      className: \"country-error\"\n    }, __jsx(Translate, {\n      id: \"country.select-city\"\n    })))))), __jsx(\"div\", {\n      className: \"createshop__btm text-align-center-ltr mb-5\"\n    }, __jsx(\"div\", {\n      className: \"auth__btn\"\n    }, __jsx(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"createshop__primary-btn primary-btn\"\n    }, __jsx(Translate, {\n      id: \"country.next\"\n    }))))));\n  }\n\n}\n\n_defineProperty(Country, \"contextType\", CreateShopContext);\n\nexport default Country;","map":null,"metadata":{},"sourceType":"module"}