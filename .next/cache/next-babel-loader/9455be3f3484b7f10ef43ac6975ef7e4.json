{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // import \"./Order.scss\";\n// import \"./Order-rtl.scss\";\n// import orderTranslations from \"./../../../../translations/order-translations.json\";\n/// for UI development\n// import data from \"../../../data/data2.json\";\n// import data2 from \"../../../data/data.jsx\";\n\nimport { connect } from \"react-redux\";\nimport { SHIPPING, PAYMENT, MAXSTEP, COMPLETE_AND_NEXT, NEXT, PREV, ORDERPLACED } from \"./OrderConstants\";\nimport { orderContext } from \"./OrderContext\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { v4 } from \"uuid\";\nimport { ShippingAddress, OrderNav, Payment, MobileOrderNav } from \"./OrderLayouts\";\nimport OrderPlaced from \"./OrderLayouts/OrderPlaced/OrderPlaced\";\nimport { DesktopsAndBigger, Desktops } from \"../../../../Responsive\";\nimport { selectLang } from \"../../../../appConfigSlice\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { isRtl } from \"../../../../lib/isRtl\";\nimport { getToastConfig } from \"../../../../lib/toast\";\nimport { withRouter } from \"next/router\";\n\nclass Order extends React.Component {\n  constructor(props) {\n    super(props); //this code is for Development purpose\n\n    _defineProperty(this, \"handleStep\", type => {\n      let step, newFormState;\n      const curstep = this.state.step;\n\n      if (type === COMPLETE_AND_NEXT) {\n        newFormState = _objectSpread(_objectSpread({}, this.state.orderState), {}, {\n          [curstep]: _objectSpread(_objectSpread({}, this.state.orderState[curstep]), {}, {\n            active: false,\n            complete: true\n          })\n        });\n        type = NEXT;\n      } else {\n        newFormState = _objectSpread(_objectSpread({}, this.state.orderState), {}, {\n          [curstep]: _objectSpread(_objectSpread({}, this.state.orderState[curstep]), {}, {\n            active: false\n          })\n        });\n      }\n\n      switch (type) {\n        case NEXT:\n          step = curstep >= MAXSTEP ? MAXSTEP : curstep + 1;\n          break;\n\n        case PREV:\n          step = curstep <= 1 ? 1 : curstep - 1;\n          break;\n\n        default:\n          step = type;\n          break;\n      }\n\n      newFormState[step].active = true;\n      this.setState({\n        step,\n        orderState: newFormState\n      });\n    });\n\n    this.lang = this.props.lang; // this.content = data[this.lang].search;\n    // this.content2 = data2[this.lang].goodsSliderComponent;\n    ///////////\n\n    this.randId = v4();\n    const formData = {\n      [SHIPPING]: {},\n      [PAYMENT]: {}\n    };\n    const token = this.props.router.query.token ? true : false;\n    const payment = this.props.router.query.to == \"pay\" ? true : this.props.router.query.to == \"downloadable\" ? true : false;\n    let _step = SHIPPING;\n\n    if (token) {\n      _step = ORDERPLACED;\n    } else if (payment) {\n      _step = PAYMENT;\n    }\n\n    const orderState = {\n      [SHIPPING]: {\n        complete: payment ? true : false,\n        active: payment ? false : true,\n        id: v4()\n      },\n      [PAYMENT]: {\n        complete: false,\n        active: payment ? true : false,\n        id: v4()\n      },\n      [ORDERPLACED]: {\n        complete: false,\n        active: false,\n        id: v4()\n      }\n    };\n    this.state = {\n      step: _step,\n      orderState,\n      handleStep: this.handleStep\n    };\n  }\n\n  componentDidMount() {//   setTimeout(() => {\n    //     this.setState(\n    //       {\n    //         step: PAYMENT,\n    //       },\n    //       () => {\n    //         setTimeout(() => {\n    //           this.setState({\n    //             step: ORDERPLACED,\n    //           });\n    //         }, 4000);\n    //       }\n    //     );\n    //   }, 2000);\n  }\n\n  render() {\n    const step = this.state.step;\n    let content;\n\n    switch (step) {\n      case SHIPPING:\n        content = __jsx(ShippingAddress, {\n          handleOrderStep: this.handleStep\n        });\n        break;\n\n      case PAYMENT:\n        content = __jsx(Payment, {\n          content2: this.content2\n        });\n        break;\n\n      case ORDERPLACED:\n        content = __jsx(OrderPlaced, {\n          content2: this.content2\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return __jsx(\"main\", {\n      className: \"order-re container siteWidthContainer\"\n    }, __jsx(ToastContainer, _extends({\n      rtl: isRtl(this.props.lang)\n    }, getToastConfig())), __jsx(orderContext.Provider, {\n      value: this.state\n    }, __jsx(SwitchTransition, {\n      className: \"user-panel__container\"\n    }, __jsx(CSSTransition, {\n      key: step !== ORDERPLACED ? this.randId : this.state.orderState[step].id,\n      classNames: \"user-panel__routes\",\n      timeout: 200\n    }, __jsx(React.Fragment, null, step !== ORDERPLACED && __jsx(\"div\", null, __jsx(React.Fragment, null, __jsx(DesktopsAndBigger, null, __jsx(OrderNav, null)), __jsx(Desktops, null, __jsx(MobileOrderNav, null)), __jsx(SwitchTransition, {\n      className: \"user-panel__container\"\n    }, __jsx(CSSTransition, {\n      key: this.state.orderState[step].id,\n      classNames: \"user-panel__routes\",\n      timeout: 200\n    }, __jsx(\"div\", {\n      className: \"animate-cnt\"\n    }, content))))), step === ORDERPLACED && content)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state)\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Order));","map":null,"metadata":{},"sourceType":"module"}