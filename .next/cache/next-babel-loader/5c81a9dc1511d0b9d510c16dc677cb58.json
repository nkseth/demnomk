{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { Desktops, DesktopsAndBigger } from \"../../../../../../Responsive\"; // import \"./SearchBoxHeader.scss\";\n// import \"./SearchBoxHeader-rtl.scss\";\n\nimport { Filter } from \"..\";\nimport { ReactComponent as RowItemIcon } from \"./../../../../../../assets/icons/menu.svg\";\nimport { ReactComponent as GridItemIcon } from \"./../../../../../../assets/icons/cols-view.svg\";\nimport { ReactComponent as FilterIcon } from \"./../../../../../../assets/icons/mobile/filter.svg\";\nimport { ReactComponent as Popularity } from \"./../../../../../../assets/icons/mobile/Popularity.svg\";\nimport { initialState, orderByTypeAddedAction, pageSizeAddedAction, selectFilters, selectGoods, priceAddedAction, goodsCreatedDayAddedAction, selectSpecs, brandsRemovedAction, brandsChangedAction, selectSelectedBrands, justExistClickAction } from \"../../searchSlice\";\nimport { connect } from \"react-redux\";\nimport { selectLang } from \"../../../../../../appConfigSlice\";\nimport FiltersData from \"../../../../filters/filtersData\";\nimport { searchPageQueriesDefaults, SEARCH_TYPE_DEAL, SEARCH_TYPE_SEARCH } from \"../../../../../../lib/querys\";\nimport classnames from \"classnames\";\n\nvar SearchBoxHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchBoxHeader, _React$Component);\n\n  var _super = _createSuper(SearchBoxHeader);\n\n  function SearchBoxHeader(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBoxHeader);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFilters\", function () {\n      var filtersItem = [];\n      var filters = _this.props.filters;\n      var initialFilter = searchPageQueriesDefaults; /// from price - to price filter\n\n      if (filters[\"fromPrice\"] !== initialFilter[\"fromPrice\"] || filters[\"toPrice\"] !== initialFilter[\"toPrice\"]) {\n        filtersItem.push(__jsx(Filter, {\n          key: filtersItem.length + 1,\n          name: _this.props.translate(\"searchAside.Price\"),\n          value: \"\".concat(filters.fromPrice, \" - \").concat(filters.toPrice),\n          onClose: function onClose() {\n            _this.props.priceAddedAction(initialFilter[\"fromPrice\"], initialFilter[\"toPrice\"]);\n          }\n        }));\n      } //// goods created day filter\n\n\n      if (filters[\"goodsCreatedDay\"] !== initialFilter[\"goodsCreatedDay\"]) {\n        var currGoodsCreatedDay;\n\n        for (var key in _this.newArrivals) {\n          if (_this.newArrivals[key].value === filters[\"goodsCreatedDay\"]) {\n            currGoodsCreatedDay = _this.newArrivals[key];\n            break;\n          }\n        }\n\n        filtersItem.push(__jsx(Filter, {\n          key: filtersItem.length + 1,\n          name: _this.props.translate(\"searchAside.NewArrivals\"),\n          value: currGoodsCreatedDay.title,\n          onClose: function onClose() {\n            _this.props.goodsCreatedDayAddedAction(initialFilter[\"goodsCreatedDay\"]);\n          }\n        }));\n      } //// options filter\n\n\n      if (filters[\"optionIds\"].length > 0) {\n        (function () {\n          var specs = _this.props.specs;\n          var optionsId = filters[\"optionIds\"];\n\n          var _iterator = _createForOfIteratorHelper(optionsId),\n              _step;\n\n          try {\n            var _loop = function _loop() {\n              var id = _step.value;\n\n              var _loop2 = function _loop2(_key) {\n                if (specs[_key].options[id]) {\n                  filtersItem.push(__jsx(Filter, {\n                    key: filtersItem.length + 1,\n                    name: specs[_key].specTitle,\n                    value: specs[_key].options[id].optionTitle,\n                    onClose: function onClose() {\n                      var selectedIds = _this.props.specSelected[specs[_key].specId];\n                      selectedIds = selectedIds.filter(function (optionId) {\n                        return optionId !== specs[_key].options[id].optionId;\n                      });\n\n                      _this.props.handleSpecSelect(specs[_key].specId, selectedIds);\n                    }\n                  }));\n                }\n              };\n\n              for (var _key in specs) {\n                _loop2(_key);\n              }\n            };\n\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        })();\n      } /// brands filter\n\n\n      if (_this.props.brands.length > 0) {\n        var brands = _this.props.brands;\n\n        var _iterator2 = _createForOfIteratorHelper(brands),\n            _step2;\n\n        try {\n          var _loop3 = function _loop3() {\n            var brand = _step2.value;\n            filtersItem.push(__jsx(Filter, {\n              key: filtersItem.length + 1,\n              name: __jsx(Translate, {\n                id: \"searchAside.Brand\"\n              }),\n              value: brand.value,\n              onClose: function onClose() {\n                _this.props.brandsChangedAction(brand, false);\n              }\n            }));\n          };\n\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            _loop3();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } // just exists\n\n\n      if (filters[\"justExist\"]) {\n        filtersItem.push(__jsx(Filter, {\n          key: filtersItem.length + 1,\n          name: __jsx(Translate, {\n            id: \"just-exist\"\n          }),\n          value: \"\",\n          onClose: function onClose() {\n            _this.props.justExistClickAction(false);\n          }\n        }));\n      }\n\n      return filtersItem;\n    });\n\n    var filtersData = new FiltersData(_this.props.translate);\n    _this.sortedBy = filtersData.sortedBy;\n    _this.perPage = filtersData.perPage;\n    _this.newArrivals = filtersData.arrivals;\n    return _this;\n  }\n\n  _createClass(SearchBoxHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filters = this.renderFilters();\n      return __jsx(\"div\", null, __jsx(\"section\", {\n        className: \"searchBoxHeader\"\n      }, __jsx(\"div\", {\n        className: \"searchBoxHeader__left-container\"\n      }, this.props.filters.search && this.props.filters.type === SEARCH_TYPE_SEARCH && __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text d-none rtl-d-inline\"\n      }, __jsx(Translate, {\n        id: \"found\"\n      })), __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text searchBoxHeader__header-text--bold\"\n      }, this.props.resultCount), __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text\"\n      }, __jsx(Translate, {\n        id: \"resualtfound\"\n      })), __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text searchBoxHeader__header-text--bold\"\n      }, this.props.filters.search))), __jsx(\"div\", {\n        className: \"searchBoxHeader__right-container\"\n      }, __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text align-center\"\n      }, __jsx(Translate, {\n        id: \"sortby\"\n      })), __jsx(Dropdown, {\n        onChange: function onChange(data) {\n          _this2.props.orderByTypeAddedAction(data.value);\n        },\n        placeholder: __jsx(Translate, {\n          id: \"sortbySelect\"\n        }),\n        options: this.sortedBy,\n        value: this.sortedBy[this.props.orderByType + 1]\n      })), __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text align-center\"\n      }, __jsx(Translate, {\n        id: \"display\"\n      })), __jsx(Dropdown, {\n        onChange: function onChange(data) {\n          _this2.props.pageSizeAddedAction(data.value);\n        },\n        options: this.perPage,\n        value: this.perPage[0]\n      }), __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text align-center\"\n      }, this.props.currentView ? __jsx(Translate, {\n        id: \"row\"\n      }) : __jsx(Translate, {\n        id: \"grid\"\n      })), __jsx(\"a\", {\n        onClick: this.props.viewHandler,\n        href: \"/#\",\n        className: \"searchBoxHeader__row-icon-con\"\n      }, this.props.currentView ? __jsx(RowItemIcon, {\n        className: \"searchBoxHeader__row-icon\"\n      }) : __jsx(GridItemIcon, {\n        className: \"searchBoxHeader__row-icon\"\n      }))), __jsx(\"div\", {\n        className: \"searchBoxHeader__btm-container\"\n      }, filters.length > 0 && __jsx(\"span\", {\n        className: \"searchBoxHeader__header-text align-center\"\n      }, __jsx(Translate, {\n        id: \"filter\"\n      })), filters), __jsx(Desktops, {\n        className: \"w-100\"\n      }, __jsx(\"section\", {\n        className: classnames(\"searchBoxHeader-mobile mt-4\", {\n          \"searchBoxHeader-mobile--deal\": this.props.filters.type == SEARCH_TYPE_DEAL\n        })\n      }, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this2.props.showFilter(false);\n        },\n        className: \"searchBoxHeader-mobile__items searchBoxHeader-mobile-filter\"\n      }, __jsx(FilterIcon, null), __jsx(\"span\", null, __jsx(Translate, {\n        id: \"filter2\"\n      }))), this.props.filters.type != SEARCH_TYPE_DEAL && __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this2.props.showFilter(true);\n        },\n        className: \"searchBoxHeader-mobile__items searchBoxHeader-mobile-popularity\"\n      }, __jsx(Popularity, null), __jsx(\"span\", null, __jsx(Translate, {\n        id: \"popularity\"\n      }))), __jsx(\"div\", {\n        onClick: this.props.viewHandler,\n        className: \"searchBoxHeader-mobile__items searchBoxHeader-mobile-row\"\n      }, __jsx(\"span\", null, this.props.currentView ? __jsx(RowItemIcon, {\n        className: \"searchBoxHeader__row-icon\"\n      }) : __jsx(GridItemIcon, {\n        className: \"searchBoxHeader__row-icon\"\n      })), __jsx(\"span\", null, this.props.currentView ? __jsx(Translate, {\n        id: \"row\"\n      }) : __jsx(Translate, {\n        id: \"grid\"\n      })))))), __jsx(Desktops, {\n        className: \"w-100\"\n      }, __jsx(\"div\", {\n        className: \"searchBoxHeader__mobile-filter-box mb-3 p-1\"\n      }, filters)));\n    }\n  }]);\n\n  return SearchBoxHeader;\n}(React.Component);\n\nvar mapDispatchToProps = {\n  orderByTypeAddedAction: orderByTypeAddedAction,\n  pageSizeAddedAction: pageSizeAddedAction,\n  priceAddedAction: priceAddedAction,\n  goodsCreatedDayAddedAction: goodsCreatedDayAddedAction,\n  brandsChangedAction: brandsChangedAction,\n  justExistClickAction: justExistClickAction\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _selectGoods;\n\n  return {\n    lang: selectLang(state),\n    resultCount: (_selectGoods = selectGoods(state)) === null || _selectGoods === void 0 ? void 0 : _selectGoods.count,\n    filters: selectFilters(state),\n    orderByTypeId: selectFilters(state).orderByType,\n    specs: selectSpecs(state),\n    brands: selectSelectedBrands(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLocalize(SearchBoxHeader));","map":null,"metadata":{},"sourceType":"module"}