{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport { LocalizeProvider, Translate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { updateCurrency } from \"../../../appConfigSlice\";\nimport { translationsPayload } from \"../../../translations/payload\";\nimport shopTranslations from \"../../../translations/create-shop-translations.json\";\nimport CreateShop from \"../../../components/app/pages/CreateShop/CreateShop\";\nimport Head from \"next/head\";\nimport { wrapper } from \"../../../store\";\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(LocalizeProvider, {\n      initialize: translationsPayload(shopTranslations, this.props.lang)\n    }, __jsx(Translate, null, ({\n      translate: t\n    }) => {\n      return __jsx(Head, null, __jsx(\"title\", null, t(\"@sellerTitle\")), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: t(\"@sellerTitle\"),\n        key: \"og:title\"\n      }), __jsx(\"meta\", {\n        property: \"title\",\n        content: t(\"@sellerTitle\"),\n        key: \"title\"\n      }));\n    }), __jsx(CreateShop, {\n      loc: this.props.router.asPath\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    langs: state.appConfig.currency.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCurrency\n})(withRouter(Shop));\nexport const getServerSideProps = wrapper.getServerSideProps(async () => {\n  return {\n    props: {}\n  };\n});","map":null,"metadata":{},"sourceType":"module"}