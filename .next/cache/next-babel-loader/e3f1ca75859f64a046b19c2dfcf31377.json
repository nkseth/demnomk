{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport Switch from \"react-switch\"; // import \"./Search.scss\";\n// import \"./Search-rtl.scss\";\n\nimport { Dropdown, BoxStyle1, GoodItemRow, Pager, MobileMenu, BreadCrump, GoodItemLoader, GoodItemRowLoader } from \"../../../common\";\nimport CheckBoxList from \"./SearchLayout/CheckBoxList/CheckBoxList\";\nimport exp from \"./../../../../assets/icons/express.png\";\nimport expAr from \"./../../../../assets/icons/express-ar.png\"; // import SeeMore from \"./SearchLayout/SeeMore/SeeMore\";\n\nimport RangeBox from \"./SearchLayout/RangeBox/RangeBox\";\nimport GoodItem from \"../../../common/GoodItem\";\nimport { connect } from \"react-redux\";\nimport { SearchBoxHeader, EmptySearch } from \"./SearchLayout\"; // import Fader from \"react-fader\";\n\nimport Pagination from \"react-js-pagination\";\nimport { DesktopsAndBigger, Desktops } from \"../../../../Responsive\";\nimport { fetchSearch, LOADING, selectSearch, priceAddedAction, selectFilters, selectGoods, goodsCreatedDayAddedAction, selectSpecs, changeUrl, brandsChangedAction, pageChangedAction, mobileFilterUpdateAction, goodsOptionsAddedAction, orderByTypeAddedAction, justExistClickAction, categoryClickAction, selectSelectedBrands } from \"./searchSlice\";\nimport { selectCurr, selectLang } from \"../../../../appConfigSlice\";\nimport { withRouter } from \"next/router\";\nimport queryString from \"query-string\";\nimport FiltersData from \"../../filters/filtersData\";\nimport CheckBoxList2 from \"./SearchLayout/CheckBoxList/CheckBoxList2\";\nimport { searchFiltersToQuery } from \"../../../../lib/QueryToFilters\";\nimport Link from \"next/link\";\nimport BrandsCheckList from \"./SearchLayout/CheckBoxList/BrandsCheckList\";\n\nvar Search = /*#__PURE__*/function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onMobileFilterClick\", function (arrival, brands, range, justExist) {\n      var specsIds = [];\n\n      for (var key in _this.specSelected) {\n        specsIds = [].concat(_toConsumableArray(_this.specSelected[key]), _toConsumableArray(specsIds));\n      }\n\n      _this.props.mobileFilterUpdateAction({\n        brands: brands,\n        specsId: specsIds,\n        arrival: arrival[0],\n        price: {\n          min: range.min,\n          max: range.max\n        },\n        justExist: justExist\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMobileSortClick\", function (sortId) {\n      _this.props.orderByTypeAddedAction(sortId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSpecSelect\", function (specId, selecetdIds) {\n      var dontSubmit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      _this.specSelected[specId] = selecetdIds;\n      if (dontSubmit) return;\n      var ids = [];\n\n      for (var key in _this.specSelected) {\n        ids = [].concat(_toConsumableArray(_this.specSelected[key]), _toConsumableArray(ids));\n      }\n\n      _this.props.goodsOptionsAddedAction(ids);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showfilterBox: false,\n      filterSort: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"viewHandler\", function (e) {\n      e.preventDefault();\n\n      _this.setState(function (state) {\n        return {\n          view: !state.view\n        };\n      });\n    });\n\n    _this.lang = _this.props.lang;\n    _this.currency = _this.props.curr;\n    _this.state = {\n      view: true,\n      ///// true --> Grid - false --> Row\n      isServer: true\n    };\n    var filtersData = new FiltersData(_this.props.translate);\n    _this.arrivals = filtersData.arrivals;\n    _this.sortedBy = filtersData.sortedBy;\n    _this.specSelected = {};\n    _this.goodsWrapperRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var selectedOptions = this.props.filters.optionIds;\n      var specs = this.props.specs;\n\n      var _iterator = _createForOfIteratorHelper(selectedOptions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var id = _step.value;\n\n          for (var key in specs) {\n            if (specs[key].options[id]) {\n              this.specSelected[specs[key].specId] = this.specSelected[specs[key].specId] || [];\n              this.specSelected[specs[key].specId].push(specs[key].options[id].optionId);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.changeUrlBool) {\n        var filters = this.props.filters;\n        this.props.changeUrl();\n        var queryParam = searchFiltersToQuery(filters);\n        var result = queryString.stringify(queryParam, {\n          arrayFormat: \"comma\"\n        });\n        this.props.router.push(\"?\".concat(result), \"/\".concat(this.props.curr, \"-\").concat(this.props.lang, \"/search/?\").concat(result), {\n          shallow: true\n        });\n        window.scrollTo({\n          top: this.goodsWrapperRef.current.offsetTop,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  }, {\n    key: \"printLoader\",\n    value: function printLoader() {\n      var loader = [];\n\n      for (var i = 0; i < 10; i++) {\n        if (this.state.view) loader.push(__jsx(GoodItemLoader, null));else loader.push(__jsx(GoodItemRowLoader, null)); // loader.push(<GoodItemLoader />);\n      }\n\n      return loader;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$parentCat,\n          _this$props$childCate,\n          _this2 = this,\n          _Object$keys,\n          _this$data,\n          _this$data$goods,\n          _this$data2,\n          _this$data2$goods;\n\n      this.data = this.props.search.search;\n      this.loading = this.props.status === LOADING;\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"container siteWidthContainer\"\n      }, __jsx(\"div\", {\n        className: \"search-page flex-wrap\"\n      }, __jsx(DesktopsAndBigger, {\n        className: \"w-100\"\n      }, ((_this$props$parentCat = this.props.parentCategory) === null || _this$props$parentCat === void 0 ? void 0 : _this$props$parentCat.length) > 0 ? __jsx(BreadCrump, {\n        className: \"col-12 p-0 mt-2\",\n        data: this.props.parentCategory\n      }) : __jsx(\"div\", {\n        style: {\n          height: \"10px\",\n          width: \"100%\"\n        }\n      })), __jsx(\"div\", {\n        className: \"search-page__left\"\n      }, __jsx(DesktopsAndBigger, null, __jsx(\"aside\", {\n        className: \"search\"\n      }, this.props.childCategory && __jsx(Dropdown, {\n        alwaysOpen: false,\n        headerClass: \"search__filter-header\",\n        containerClass: \"search__list-container\",\n        text: this.props.childCategory.categoryTitle\n      }, __jsx(\"ul\", {\n        className: \"search__filter-list\"\n      }, (_this$props$childCate = this.props.childCategory.child) === null || _this$props$childCate === void 0 ? void 0 : _this$props$childCate.map(function (cat) {\n        return __jsx(\"li\", {\n          key: cat.categoryId,\n          className: \"search__list-item\"\n        }, __jsx(Dropdown, {\n          headerClass: \"search__drop-header\",\n          text: cat.categoryTitle,\n          haveLink: true,\n          link: \"/\".concat(_this2.props.curr, \"-\").concat(_this2.props.lang, \"/search?type=2&id=\").concat(cat.categoryId)\n        }, __jsx(\"ul\", {\n          className: \"search__drop-list\"\n        }, cat.child && cat.child.map(function (child2) {\n          return __jsx(\"li\", {\n            key: child2.categoryId,\n            className: \"search__list-item\"\n          }, __jsx(Link, {\n            href: \"/\".concat(_this2.props.curr, \"-\").concat(_this2.props.lang, \"/search?type=2&id=\").concat(child2.categoryId)\n          }, __jsx(\"a\", {\n            className: \"search__list-link\"\n          }, child2.categoryTitle)));\n        }))));\n      }))), __jsx(Dropdown, {\n        alwaysOpen: false,\n        headerClass: \"search__filter-header\",\n        containerClass: \"search__list-container\",\n        text: __jsx(Translate, {\n          id: \"searchAside.Brand\"\n        })\n      }, __jsx(Translate, null, function (_ref) {\n        var translate = _ref.translate;\n        return __jsx(BrandsCheckList, {\n          catId: _this2.props.filters.id,\n          itemClass: \"search__list-item search__list-item--check\",\n          listClass: \"search__filter-list\",\n          placeholder: translate(\"searchplaceholder\"),\n          selecteIds: _this2.props.filters.brandId,\n          onSelect: function onSelect(brand, checked) {\n            _this2.props.brandsChangedAction(brand, checked);\n          }\n        }) // <CheckBoxList2\n        //   search\n        //   textOpen={<Translate id=\"seemore\" />}\n        //   textClose=\"close\"\n        //   seeMore\n        //   maxItemShow={20}\n        //   placeholder={translate(\"searchplaceholder\")}\n        //   data={this.props.brands}\n        //   dataName=\"brandTitle\"\n        //   dataValue=\"brandId\"\n        //   initialSelectIdArr={this.props.filters.brandId}\n        //   listClass=\"search__filter-list\"\n        //   itemClass=\"search__list-item search__list-item--check\"\n        //   onSelect={(arr) => {\n        //     this.props.BrandAddedAction(arr);\n        //   }}\n        // />\n        ;\n      })), __jsx(\"div\", {\n        className: \"dropdown search__list-container\"\n      }, __jsx(\"div\", {\n        href: \"#\",\n        className: \"dropdown__link search__filter-header single-lined\"\n      }, __jsx(\"span\", null, __jsx(Translate, {\n        id: \"just-exist\"\n      })), __jsx(Switch, {\n        onChange: function onChange(checked) {\n          _this2.props.justExistClickAction(checked);\n        },\n        width: 46,\n        height: 22,\n        uncheckedIcon: \"\",\n        checkedIcon: \"\",\n        checked: this.props.filters.justExist\n      }))), __jsx(Dropdown, {\n        alwaysOpen: false,\n        headerClass: \"search__filter-header\",\n        containerClass: \"search__list-container\",\n        text: __jsx(Translate, {\n          id: \"searchAside.NewArrivals\"\n        })\n      }, __jsx(CheckBoxList, {\n        listClass: \"search__filter-list\",\n        itemClass: \"search__list-item search__list-item--check\",\n        data: this.arrivals,\n        dataName: \"title\",\n        dataValue: \"value\",\n        initialSelectIdArr: [this.props.filters.goodsCreatedDay],\n        singleSelect: true,\n        onSelect: function onSelect(arr) {\n          _this2.props.goodsCreatedDayAddedAction(arr[0]);\n        }\n      })), (_Object$keys = Object.keys(this.props.specs || {})) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(function (key) {\n        return __jsx(Dropdown, {\n          key: _this2.props.specs[key].specId,\n          alwaysOpen: false,\n          headerClass: \"search__filter-header\",\n          containerClass: \"search__list-container\",\n          text: _this2.props.specs[key].specTitle\n        }, __jsx(CheckBoxList2, {\n          listClass: \"search__filter-list\",\n          itemClass: \"search__list-item search__list-item--check\",\n          data: _this2.props.specs[key].options,\n          dataName: \"optionTitle\",\n          dataValue: \"optionId\",\n          initialSelectIdArr: _this2.props.filters.optionIds,\n          singleSelect: !_this2.props.specs[key].isMultiSelectInFilter,\n          onSelect: function onSelect(arr) {\n            _this2.handleSpecSelect(_this2.props.specs[key].specId, arr);\n          }\n        }));\n      }), __jsx(Dropdown, {\n        alwaysOpen: false,\n        headerClass: \"search__filter-header\",\n        containerClass: \"search__list-container\",\n        text: __jsx(Translate, {\n          id: \"searchAside.Price-\" + this.currency\n        })\n      }, this.props.maxPrice > 0 && __jsx(RangeBox, {\n        show: \"true\",\n        min: 0,\n        max: this.props.maxPrice,\n        onSet: function onSet(values) {\n          _this2.props.priceAddedAction(values.min, values.max);\n        },\n        setText: __jsx(Translate, {\n          id: \"setPrice\"\n        })\n      }))))), __jsx(\"div\", {\n        className: \"search-page__right\"\n      }, __jsx(BoxStyle1, {\n        childRef: this.goodsWrapperRef,\n        headerContent: __jsx(SearchBoxHeader, {\n          newArrivals: this.arrivals,\n          currentView: this.state.view,\n          specSelected: this.specSelected,\n          handleSpecSelect: this.handleSpecSelect,\n          viewHandler: this.viewHandler,\n          showFilter: function showFilter(sortvalue) {\n            _this2.setState({\n              showfilterBox: true,\n              filterSort: sortvalue\n            });\n          }\n        })\n      }, __jsx(\"div\", {\n        className: classnames(\"search__item-container\", {\n          \"search__item-container--row\": !this.state.view\n        })\n      }, this.loading ? this.printLoader() : ((_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$goods = _this$data.goods) === null || _this$data$goods === void 0 ? void 0 : _this$data$goods.data.length) === 0 ? __jsx(EmptySearch, null) : (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : (_this$data2$goods = _this$data2.goods) === null || _this$data2$goods === void 0 ? void 0 : _this$data2$goods.data.map(function (item) {\n        return _this2.state.view ? __jsx(GoodItem, _extends({}, item, {\n          hover: true\n        })) : __jsx(GoodItemRow, _extends({}, item, {\n          hover: true\n        }));\n      })), __jsx(\"div\", null, __jsx(Pagination, {\n        activePage: this.props.pageNumber,\n        itemsCountPerPage: this.props.perPage,\n        totalItemsCount: this.props.resultGoodsCount,\n        itemClass: \"pager__item\",\n        hideFirstLastPages: true,\n        innerClass: \"pager\",\n        linkClass: \"pager__link\",\n        activeLinkClass: \"active\",\n        pageRangeDisplayed: 5,\n        onChange: function onChange(pageNumber) {\n          _this2.props.pageChangedAction(pageNumber);\n        }\n      })))))), __jsx(Desktops, null, __jsx(\"section\", {\n        className: \"search-page-mobile-filter\"\n      }, this.state.showfilterBox ? __jsx(MobileMenu, {\n        filterSort: this.state.filterSort,\n        rtl: this.is_rtl,\n        isMainMenu: false,\n        closeMenu: function closeMenu() {\n          _this2.setState({\n            showfilterBox: false,\n            filterSort: false\n          });\n        },\n        selectedBrands: this.props.selectedBrands,\n        data: this.props.search.search,\n        filtersMenu: true,\n        filters: this.props.filters,\n        arrivals: this.arrivals,\n        searchMenu: true,\n        handleSpecSelect: this.handleSpecSelect,\n        specSelected: this.specSelected,\n        mobileFilterClick: this.onMobileFilterClick,\n        sortedBy: this.sortedBy,\n        mobileSortClick: this.onMobileSortClick\n      }) : null)));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar mapDispatchToProps = {\n  fetchSearch: fetchSearch,\n  priceAddedAction: priceAddedAction,\n  goodsCreatedDayAddedAction: goodsCreatedDayAddedAction,\n  goodsOptionsAddedAction: goodsOptionsAddedAction,\n  brandsChangedAction: brandsChangedAction,\n  pageChangedAction: pageChangedAction,\n  changeUrl: changeUrl,\n  mobileFilterUpdateAction: mobileFilterUpdateAction,\n  orderByTypeAddedAction: orderByTypeAddedAction,\n  categoryClickAction: categoryClickAction,\n  justExistClickAction: justExistClickAction\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _selectGoods;\n\n  var filters = selectFilters(state);\n  var search = selectSearch(state);\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state),\n    search: state.search,\n    status: state.search.status,\n    childCategory: search.childCategory,\n    maxPrice: search.maxPrice,\n    pageNumber: filters.pageNumber,\n    perPage: filters.pageSize,\n    resultGoodsCount: (_selectGoods = selectGoods(state)) === null || _selectGoods === void 0 ? void 0 : _selectGoods.count,\n    goodsCreatedDay: filters.goodsCreatedDay,\n    specs: selectSpecs(state),\n    filters: filters,\n    selectedBrands: selectSelectedBrands(state),\n    changeUrlBool: state.search.changeUrl,\n    parentCategory: search.parentCategory\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLocalize(withRouter(Search)));","map":null,"metadata":{},"sourceType":"module"}