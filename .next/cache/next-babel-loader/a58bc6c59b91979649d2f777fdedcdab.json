{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport { LocalizeProvider, Translate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { updateCurrency } from \"../../../appConfigSlice\";\nimport Head from \"next/head\";\nimport { wrapper } from \"../../../store\";\nimport MobileHtmlDescComp from \"../../../components/app/pages/MobileHtmlDescComp/MobileHtmlDescComp\";\nimport { server_fetchGetMobileDescriptionPageData } from \"../../../lib/api/client/serverHome\";\n\nclass MobileHtmlDesc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(LocalizeProvider, null, __jsx(Translate, null, ({\n      translate: t\n    }) => {\n      return __jsx(Head, null, __jsx(\"title\", null, \"desc\"));\n    }), __jsx(MobileHtmlDescComp, {\n      htmlStr: this.props.data.htmlStr,\n      lang: this.props.data.lang,\n      curr: this.props.data.curr,\n      type: this.props.data.type,\n      goodsId: this.props.data.goodsId\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    langs: state.appConfig.currency.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCurrency\n})(withRouter(MobileHtmlDesc));\nexport const getServerSideProps = wrapper.getServerSideProps(async ({\n  req,\n  store,\n  query\n}) => {\n  const goodsId = query['goodsId'];\n  const articleId = query['articleId'];\n  const type = query['type'];\n  const lang = query['lang'];\n  const curr = query['curr'];\n  const storeName = query['storeName'];\n  const contentType = query['contentType'];\n  const model = {\n    type: type,\n    goodsId: goodsId,\n    articleId: articleId,\n    contentType: contentType,\n    storeName: storeName,\n    lang: lang,\n    curr: curr\n  };\n  const result = await server_fetchGetMobileDescriptionPageData(model);\n  return {\n    props: {\n      data: {\n        goodsId: goodsId,\n        type: type,\n        lang: lang,\n        curr: curr,\n        htmlStr: result === undefined ? null : result === null || result === void 0 ? void 0 : result.result\n      }\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}