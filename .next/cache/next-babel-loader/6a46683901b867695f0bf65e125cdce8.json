{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { LocalizeProvider, Translate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { translationsPayload } from \"../../../translations/payload\";\nimport authTranslations from \"../../../translations/auth-translations.json\";\nimport Auth from \"../../../components/app/pages/Auth\";\nimport { withRouter } from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { isServer } from \"../../../lib/isServer\";\nimport Head from \"next/head\";\n\nvar AuthPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(AuthPage, _React$Component);\n\n  var _super = _createSuper(AuthPage);\n\n  function AuthPage(props) {\n    var _this;\n\n    _classCallCheck(this, AuthPage);\n\n    _this = _super.call(this, props);\n\n    if (!isServer()) {\n      _this.redirect = false;\n      var token = Cookies.get(process.env.NEXT_PUBLIC_Token_Cookie_name);\n\n      if (token) {\n        _this.props.router.push(\"/\".concat(_this.props.curr, \"-\").concat(_this.props.lang, \"/panel/profile\"));\n\n        _this.redirect = true;\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(AuthPage, [{\n    key: \"render\",\n    value: function render() {\n      if (this.redirect) {\n        return __jsx(\"p\", null, \"Redirecting...\");\n      }\n\n      return __jsx(React.Fragment, null, __jsx(LocalizeProvider, {\n        initialize: translationsPayload(authTranslations, this.props.lang)\n      }, __jsx(Translate, null, function (_ref) {\n        var t = _ref.translate;\n        return __jsx(Head, null, __jsx(\"title\", null, t(\"@authtitle\")));\n      }), __jsx(Auth, {\n        lang: this.props.lang,\n        loc: this.props.router.asPath,\n        data: this.props.data,\n        isDesktop: this.props.ua.isDesktop\n      })));\n    }\n  }]);\n\n  return AuthPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport var __N_SSP = true;\nexport default connect(mapStateToProps)(withRouter(AuthPage)); // export const getStaticProps = wrapper.getStaticProps(\n//   async ({ params, store }) => {\n//     const lang = detectLang(params[\"lang-curr\"]);\n//     const curr = detectCurrency(params[\"lang-curr\"]);\n//     store.dispatch(updateLang(lang));\n//     store.dispatch(updateCurrency(curr));\n//     axiosClient.setLangAndCurrency(lang, curr);\n//     return {\n//       props: { lang, curr },\n//     };\n//   }\n// );\n// export async function getStaticPaths() {\n//   return {\n//     paths: [...langUsdParams],\n//     fallback: false, // See the \"fallback\" section below\n//   };\n// }","map":null,"metadata":{},"sourceType":"module"}