{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\"; // import \"./Profile.scss\";\n\nimport { BoxStyle1, Loading } from \"../../../../../common\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { client_getProfileGeneralDetail } from \"../../../../../../lib/api/client/clientUserPanel\";\nimport TickIcon from \"../../../../../../assets/icons/tick.svg\";\nimport ProfileEdit from \"./ProfileEdit\"; // import \"./Profile-rtl.scss\";\n\nimport profileImage from \"./../../../../../../assets/icons/profile.svg\";\nimport classnames from \"classnames\";\nimport { ProtraitPhonesAndBigger, ProtraitPhones, LandScapePhones, Tablets } from \"../../../../../../Responsive\";\nimport PanelNavi from \"../../PanelLayouts/PanelNavi/PanelNavi\";\nimport ProfileVerifyEmail from \"./ProfileVerifyEmail\";\nimport { ToastContainer } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport { selectLang } from \"../../../../../../appConfigSlice\";\nimport { getToastConfig } from \"../../../../../../lib/toast\";\nimport { isRtl } from \"../../../../../../lib/isRtl\";\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\nexport const PROFILE = 1;\nexport const PROFILE_EMAIL_VERIFY = 2;\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async () => {\n      this.setState({\n        showLoader: true\n      });\n      const result = await client_getProfileGeneralDetail();\n      this.setState({\n        birthDate: result.result.birthDate,\n        cityName: result.result.cityName,\n        countryName: result.result.countryName,\n        customerId: result.result.customerId,\n        email: result.result.email,\n        family: result.result.family,\n        fkCountryId: result.result.fkCountryId,\n        lastLogin: result.result.lastLogin,\n        mobileNumber: result.result.mobileNumber,\n        name: result.result.name,\n        nationalCode: result.result.nationalCode,\n        registeryDate: result.result.registeryDate,\n        emailVerifed: result.result.emailVerifed,\n        iso: result.result.iso,\n        phoneCode: result.result.phoneCode,\n        mobileVerifed: result.result.mobileVerifed,\n        fkCityId: result.result.fkCityId,\n        fkProvinceId: result.result.fkProvinceId,\n        provinceName: result.result.provinceName,\n        showLoader: false\n      });\n    });\n\n    _defineProperty(this, \"handleSituation\", situ => {\n      switch (situ) {\n        case PROFILE:\n          this.setState({\n            profilePosi: PROFILE\n          });\n          this.getData();\n          break;\n\n        case PROFILE_EMAIL_VERIFY:\n          this.setState({\n            profilePosi: PROFILE_EMAIL_VERIFY\n          });\n          break;\n      }\n    });\n\n    _defineProperty(this, \"formatPhoneNumber\", () => {\n      if (this.state.mobileNumber) {\n        try {\n          return this.phoneUtil.format(this.phoneUtil.parseAndKeepRawInput(this.state.phoneCode + this.state.mobileNumber, this.state.iso), this.PNF.INTERNATIONAL);\n        } catch (error) {\n          console.log(error);\n          return \"\";\n        }\n      } else {\n        return \"\";\n      }\n    });\n\n    this.state = {\n      profilePosi: PROFILE,\n      birthDate: \"\",\n      cityName: \"\",\n      countryName: \"\",\n      customerId: 0,\n      email: \"\",\n      family: \"\",\n      fkCountryId: \"\",\n      lastLogin: \"\",\n      mobileNumber: \"\",\n      name: \"\",\n      nationalCode: \"\",\n      registeryDate: \"\",\n      showLoader: false\n    };\n    this.phoneUtil = PhoneNumberUtil.getInstance();\n    this.PNF = PhoneNumberFormat;\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  renderBoxHeader() {\n    return __jsx(\"h2\", {\n      className: \"user-panel__box-header\"\n    }, __jsx(Translate, {\n      id: \"nav.profile\"\n    }));\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(ToastContainer, _extends({\n      rtl: isRtl(this.props.lang)\n    }, getToastConfig())), __jsx(Switch, null, __jsx(Route, {\n      path: `${this.props.match.path}/edit`,\n      render: () => __jsx(ProfileEdit, {\n        state: this.state,\n        getData: this.getData\n      })\n    }), __jsx(Route, {\n      exact: true,\n      path: `${this.props.match.path}`\n    }, this.state.profilePosi === PROFILE_EMAIL_VERIFY ? __jsx(React.Fragment, null, __jsx(ProfileVerifyEmail, {\n      email: this.state.email,\n      handleSitu: this.handleSituation\n    })) : __jsx(React.Fragment, null, this.state.showLoader ? __jsx(\"div\", {\n      style: {\n        minHeight: \"100vh\"\n      }\n    }, __jsx(Loading, {\n      type: \"gray\",\n      width: \"11%\",\n      height: \"70%\"\n    })) : __jsx(BoxStyle1, {\n      headerContent: this.renderBoxHeader()\n    }, __jsx(\"section\", {\n      className: \"profile\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-12 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"profile__item-container flex-wrap\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.firstname\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.name)), __jsx(\"div\", {\n      className: \"profile__item-container profile__item-container--color\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.lastname\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.family)), __jsx(\"div\", {\n      className: \"profile__item-container\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.national-code\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.nationalCode)), __jsx(\"div\", {\n      className: \"profile__item-container profile__item-container--color\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.birthday-date\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.birthDate))), __jsx(\"div\", {\n      className: \"col-12 mt-md-0 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"profile__item-container profile__item-container--color\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.email1\"\n    })), __jsx(\"div\", null, __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.email, this.state.emailVerifed && __jsx(TickIcon, {\n      className: \"ml-3 mr-3 mb-1\"\n    })), !this.state.emailVerifed && __jsx(\"div\", null, __jsx(\"span\", {\n      className: classnames(\"addresses__ars-alert\"),\n      onClick: () => {\n        this.handleSituation(PROFILE_EMAIL_VERIFY);\n      }\n    }, __jsx(\"span\", {\n      className: \"addresses__alert-icon\"\n    }, \"!\"), __jsx(Translate, {\n      id: \"email-verify.verify-email\"\n    }))))), __jsx(\"div\", {\n      className: \"profile__item-container\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.country-name\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.countryName)), __jsx(\"div\", {\n      className: \"profile__item-container profile__item-container--color\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.city-name\"\n    })), __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.state.cityName)), __jsx(\"div\", {\n      className: \"profile__item-container profile__item-container\"\n    }, __jsx(\"span\", {\n      className: \"profile__item\"\n    }, __jsx(Translate, {\n      id: \"profile.mobile-number\"\n    })), __jsx(\"div\", null, __jsx(\"span\", {\n      className: \"profile__item profile__item--color\"\n    }, this.formatPhoneNumber(), this.state.mobileVerifed && __jsx(TickIcon, {\n      className: \"ml-3 mr-3 mb-1\"\n    })), this.state.mobileNumber && !this.state.mobileVerifed ? __jsx(\"div\", null, __jsx(\"span\", {\n      className: classnames(\"addresses__ars-alert\"),\n      onClick: () => {// this.handleSituation(\n        //   PROFILE_EMAIL_VERIFY\n        // );\n      }\n    }, __jsx(\"span\", {\n      className: \"addresses__alert-icon\"\n    }, \"!\"), __jsx(Translate, {\n      id: \"addresses.notvery\"\n    }))) : null)))), __jsx(Link, {\n      to: `${this.props.match.url}/edit`,\n      className: \"primary-btn profile__btn\"\n    }, __jsx(Translate, {\n      id: \"profile.editprofile\"\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":null,"metadata":{},"sourceType":"module"}