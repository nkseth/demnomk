{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\"; // import { connectRouter } from 'connected-react-router';\n\nimport { appConfigReducer } from \"./appConfigSlice\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport homeReducer from \"./components/app/pages/index/homeSlice\";\nimport searchReducer from \"./components/app/pages/Search/searchSlice\";\nimport goodDetailReducer from \"./components/app/pages/GoodDetail/GoodDetailSlice\";\nimport categoryReducer from \"./components/app/pages/Categories/categorySlice\";\nimport providerReducer from \"./components/app/pages/Provider/providerSlice\";\nimport cartReducer from \"./components/app/pages/CartAndWishlist/cartAndWishlistSlice\";\nvar combinedReducer = combineReducers({\n  appConfig: appConfigReducer,\n  home: homeReducer,\n  search: searchReducer,\n  goodDetail: goodDetailReducer,\n  category: categoryReducer,\n  provider: providerReducer,\n  cart_wishlist: cartReducer\n});\n\nvar reducer = function reducer(state, action) {\n  if (action.type === HYDRATE) {\n    var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    if (state.home) nextState.home = state.home;\n    if (state.appConfig.login.isLogin) nextState.appConfig.login = state.appConfig.login;\n\n    if (state.appConfig.login.prevLink) {\n      nextState.appConfig.login.prevLink = state.appConfig.login.prevLink;\n    }\n\n    nextState.cart_wishlist.cartCount = state.cart_wishlist.cartCount;\n    nextState.cart_wishlist.wishCount = state.cart_wishlist.wishCount;\n    return nextState;\n  } else {\n    return combinedReducer(state, action);\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}