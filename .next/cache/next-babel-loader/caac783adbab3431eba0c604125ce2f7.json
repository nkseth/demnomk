{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { CategoryBoxStyle } from \"../../../common\";\nimport { withLocalize } from \"react-localize-redux\";\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\nimport { EmptySearch } from \"../Search/SearchLayout\";\nimport { selectCurr, selectLang } from \"../../../../appConfigSlice\";\nimport { connect } from \"react-redux\";\nimport CategoriesSlider from \"./MobileCategoriesLayouts/CategoriesSlider\";\nimport \"./MobileCategories.scss\";\nimport \"./MobileCategories-rtl.scss\";\nimport { client_getMobileCategory } from \"../../../../lib/api/client/clientHome\";\nimport { SEARCH_TYPE_CATEGORY } from \"../../../../lib/querys\";\n\nclass MobileCategories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getVendors\", async () => {\n      if (this.state.vendorsLoading) return;\n      this.setState({\n        vendorsLoading: true\n      });\n\n      try {\n        const res = await client_getMobileCategory();\n\n        if (res.status == 200) {\n          console.log(res);\n          this.setState({\n            vendorsLoading: false,\n            categories: res.result\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          vendorsLoading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"printPhone\", (phone, iso) => {\n      try {\n        const number = this.phoneUtil.parseAndKeepRawInput(phone, iso);\n        return this.phoneUtil.format(number, this.PNF.INTERNATIONAL);\n      } catch (err) {\n        return phone;\n      }\n    });\n\n    this.state = {\n      search: \"\",\n      categories: [],\n      vendorsLoading: false,\n      countries: [],\n      cities: [],\n      selectedCity: {\n        value: null,\n        label: this.props.translate(\"all\")\n      }\n    };\n    this.filters = {\n      StoreName: \"\",\n      Sort: 0,\n      CategoryId: 0,\n      PageNumber: 1,\n      PageSize: 9,\n      CityId: null,\n      CountryId: null\n    };\n    this.PNF = PhoneNumberFormat;\n    this.phoneUtil = PhoneNumberUtil.getInstance();\n    this.phonenumber = null;\n    this.timeout = null;\n  }\n\n  componentDidMount() {\n    this.getVendors();\n  }\n\n  render() {\n    var _this$state$categorie;\n\n    const count = (_this$state$categorie = this.state.categories) === null || _this$state$categorie === void 0 ? void 0 : _this$state$categorie.length;\n    const categories = this.state.categories;\n    return __jsx(\"div\", {\n      className: \"categories container siteWidthContainer\"\n    }, !this.state.vendorsLoading ? __jsx(\"section\", null, __jsx(\"div\", {\n      className: \"row categories__row\"\n    }, count <= 0 && __jsx(EmptySearch, null), categories === null || categories === void 0 ? void 0 : categories.map(vendor => {\n      var _categories$childs;\n\n      let link = \"#\";\n\n      if (vendor.haveWebPage) {\n        link = `/${this.props.curr}-${this.props.lang}/category/${vendor.categoryId}`;\n      } else {\n        link = `/${this.props.curr}-${this.props.lang}/search?id=${vendor.categoryId}&type=${SEARCH_TYPE_CATEGORY}`;\n      }\n\n      return __jsx(CategoryBoxStyle, {\n        link: link,\n        headerContent: vendor.categoryTitle,\n        showViewAll: true\n      }, __jsx(CategoriesSlider, {\n        count: categories === null || categories === void 0 ? void 0 : (_categories$childs = categories.childs) === null || _categories$childs === void 0 ? void 0 : _categories$childs.length,\n        data: vendor\n      }));\n    }))) : // <VendorLoading />\n    null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    curr: selectCurr(state)\n  };\n};\n\nexport default connect(mapStateToProps)(withLocalize(MobileCategories));","map":null,"metadata":{},"sourceType":"module"}