{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { LocalizeProvider, Translate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { wrapper } from \"../../store\";\nimport { translationsPayload } from \"../../translations/payload\";\nimport HeaderTranslations from \"./../../translations/header-translations.json\";\nimport Footer from \"../../components/app/footer\";\nimport { Header } from \"../../components/app/header\";\nimport Index from \"../../components/app/pages/index/index\";\nimport { server_fetchHeader, server_fetchFooter } from \"../../lib/api/client/serverCommon\";\nimport Head from \"next/head\";\nimport { useUserAgent } from \"next-useragent\";\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const index = __jsx(Index, {\n      data: this.props.data.result\n    });\n\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"ajyal.bh | Online Shopping in Bahrain\")), __jsx(LocalizeProvider, {\n      initialize: translationsPayload(HeaderTranslations, this.props.lang)\n    }, __jsx(Translate, null, ({\n      translate: t\n    }) => {\n      return __jsx(Head, null, __jsx(\"title\", null, this.props.data.header.pageTitle), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: this.props.data.header.metaTitle,\n        key: \"og:title\"\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: this.props.data.header.metaDescription,\n        key: \"og:description\"\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: process.env.NEXT_PUBLIC_LOGO_PREFIX + \"/\" + this.props.data.header.logoUrlShopHeader,\n        key: \"og:image\"\n      }), __jsx(\"meta\", {\n        property: \"twitter:title\",\n        content: this.props.data.header.metaTitle,\n        key: \"twitter:title\"\n      }), __jsx(\"meta\", {\n        property: \"twitter:description\",\n        content: this.props.data.header.metaDescription,\n        key: \"twitter:description\"\n      }), __jsx(\"meta\", {\n        property: \"twitter:image\",\n        content: process.env.NEXT_PUBLIC_LOGO_PREFIX + \"/\" + this.props.data.header.logoUrlShopHeader,\n        key: \"twitter:image\"\n      }), __jsx(\"meta\", {\n        property: \"title\",\n        content: this.props.data.header.metaTitle,\n        key: \"title\"\n      }), __jsx(\"meta\", {\n        property: \"description\",\n        content: this.props.data.header.metaDescription,\n        key: \"description\"\n      }), __jsx(\"meta\", {\n        property: \"keywords\",\n        content: this.props.data.header.metaKeywords,\n        key: \"keywords\"\n      }));\n    }), __jsx(Header, {\n      data: this.props.data.header,\n      lang: this.props.lang,\n      curr: this.props.curr,\n      isDesktop: this.props.ua.isDesktop\n    }), index, __jsx(Footer, {\n      lang: this.props.lang,\n      isDesktop: this.props.ua.isDesktop,\n      data: this.props.data.footer,\n      cartCount: this.props.data.header.cartCount\n    })));\n  }\n\n}\n\nexport default connect()(IndexPage);\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const ua = useUserAgent(context.req.headers[\"user-agent\"]); // initialize page lang and currency\n\n  const Result = await Promise.all([server_fetchHeader(ua.isDesktop), server_fetchFooter()]);\n  return {\n    props: {\n      ua,\n      data: {\n        header: Result[0].result,\n        footer: Result[1].result\n      }\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}