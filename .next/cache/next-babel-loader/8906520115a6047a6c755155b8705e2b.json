{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport helpImage from \"./../../../assets/images/helpCenter.jpg\";\nimport HelpSearchIcon from \"./../../../assets/icons/help-search-icon.svg\";\nimport { client_getSearchResult } from \"../../../lib/api/client/clientHelpCenter\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../appConfigSlice\";\nimport { slugy } from \"../../../lib/helpers\";\nimport Link from \"next/link\";\nlet timer = null;\n\nconst HelpSubHeader = ({\n  img\n}) => {\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: searchResult,\n    1: setSearchResult\n  } = useState([]);\n  const lang = useSelector(selectLang);\n  const curr = useSelector(selectCurr);\n  const wrapperRef = useRef(null);\n\n  const removeResult = event => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      setSearch(\"\");\n      setSearchResult([]);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", removeResult);\n    return () => {\n      document.removeEventListener(\"mousedown\", removeResult);\n    };\n  }, []);\n\n  const onSearchChange = e => {\n    const q = e.target.value;\n    setSearch(q);\n\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    if (!q) {\n      setSearchResult([]);\n      return;\n    }\n\n    const callback = async q => {\n      try {\n        const res = await client_getSearchResult(q);\n        if (res.result) setSearchResult(res.result);\n      } catch (er) {\n        setSearchResult([]);\n      }\n    };\n\n    timer = setTimeout(callback.bind(null, q), 500);\n  };\n\n  return __jsx(\"div\", {\n    className: \"subheader container-fluid p-0\"\n  }, __jsx(\"img\", {\n    src: img ? `${process.env.NEXT_PUBLIC_LOGO_PREFIX}/${img}` : helpImage,\n    alt: \"help center background\",\n    className: \"subheader__background\"\n  }), __jsx(\"div\", {\n    className: \"subheader__content\"\n  }, __jsx(\"h1\", {\n    className: \"subheader__header\"\n  }, __jsx(Translate, {\n    id: \"help-center-title\"\n  })), __jsx(\"div\", {\n    className: \"subheader__form-cnt\"\n  }, __jsx(\"label\", {\n    className: \"subheader__form-lable\",\n    htmlFor: \"help-search\"\n  }, __jsx(HelpSearchIcon, {\n    className: \"subheader__search-icon\"\n  }), __jsx(Translate, null, ({\n    translate: t\n  }) => {\n    return __jsx(\"input\", {\n      className: \"subheader__search-input\",\n      type: \"text\",\n      name: \"help-search\",\n      placeholder: t(\"help-center-search-placeholder\"),\n      value: search,\n      onChange: onSearchChange,\n      id: \"help-search\"\n    });\n  })), searchResult.length > 0 && __jsx(\"div\", {\n    ref: wrapperRef,\n    className: \"subheader__result-cnt\"\n  }, __jsx(\"ul\", {\n    className: \"subheader__list\"\n  }, searchResult.map(item => {\n    return __jsx(\"li\", {\n      className: \"subheader__item\"\n    }, __jsx(Link, {\n      href: `/${curr}-${lang}/hc/articles/${item.articleId}/${slugy(item.subject)}`\n    }, __jsx(\"a\", {\n      onClick: () => {\n        setSearchResult([]);\n        setSearch(\"\");\n      },\n      className: \"subheader__link\"\n    }, __jsx(\"span\", {\n      className: \"subheader__subject\"\n    }, item.subject), __jsx(\"span\", {\n      className: \"subheader__topic\"\n    }, \"\\xA0 -\\xA0 \", item.topic))));\n  }))))));\n};\n\nexport default HelpSubHeader;","map":null,"metadata":{},"sourceType":"module"}