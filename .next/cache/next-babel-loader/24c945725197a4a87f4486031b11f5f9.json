{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport Error from \"next/error\";\nimport { LocalizeProvider } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { wrapper } from \"../../../../store\";\nimport { translationsPayload, mergeTranslations } from \"../../../../translations/payload\";\nimport helpCenterTranlations from \"../../../../translations/help-center-translations.json\";\nimport HeaderTranslations from \"../../../../translations/header-translations.json\";\nimport Footer from \"../../../../components/app/footer\";\nimport { Header } from \"../../../../components/app/header\";\nimport { server_fetchFooter, server_fetchHeader } from \"../../../../lib/api/client/serverCommon\";\nimport { Article } from \"../../../../components/app/pages/HelpCenter\";\nimport HelpSubHeader from \"../../../../components/app/helpSubHeader/HelpSubHeader\";\nimport { server_fetchArticle, server_fetchImage } from \"../../../../lib/api/client/serverHelpcenter\";\nimport Head from \"next/head\";\nimport { WithUserAgentProps, withUserAgent, useUserAgent } from \"next-useragent\";\n\nclass GoodDetailPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.errorCode !== 200) {\n      return __jsx(Error, {\n        statusCode: this.props.errorCode\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"ajyal.bh - \", this.props.article.subject), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: this.props.article.subject,\n      key: \"og:title\"\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: this.props.article.subject,\n      key: \"og:description\"\n    }), __jsx(\"meta\", {\n      property: \"title\",\n      content: this.props.article.subject,\n      key: \"title\"\n    }), __jsx(\"meta\", {\n      property: \"description\",\n      content: this.props.article.subject,\n      key: \"description\"\n    })), __jsx(LocalizeProvider, {\n      initialize: translationsPayload(mergeTranslations(helpCenterTranlations, HeaderTranslations), this.props.lang)\n    }, __jsx(Header, {\n      data: this.props.data.header,\n      lang: this.props.lang,\n      curr: this.props.curr,\n      isDesktop: this.props.ua.isDesktop\n    }), __jsx(HelpSubHeader, {\n      img: this.props.data.img\n    }), __jsx(Article, {\n      data: this.props.article\n    }), __jsx(Footer, {\n      data: this.props.data.footer,\n      isDesktop: this.props.ua.isDesktop,\n      lang: this.props.lang,\n      cartCount: this.props.data.header.cartCount\n    })));\n  }\n\n}\n\nexport default connect()(withRouter(GoodDetailPage));\nexport const getServerSideProps = wrapper.getServerSideProps(async ctx => {\n  var _Result$, _Result$2, _Result$3;\n\n  const [articleId] = ctx.query.id;\n  const ua = useUserAgent(ctx.req.headers[\"user-agent\"]);\n  const Result = await Promise.all([server_fetchHeader(ua.isDesktop), server_fetchFooter(), server_fetchArticle(articleId), server_fetchImage()]);\n\n  if (Result[2].status !== 200) {\n    return {\n      props: {\n        ua,\n        errorCode: Result[2].status\n      }\n    };\n  }\n\n  return {\n    props: {\n      //   errorCode: Result[2].status ? Result[2].status : 500,\n      // article: data.result,\n      article: Result[2].result,\n      errorCode: 200,\n      ua,\n      data: {\n        header: (_Result$ = Result[0]) === null || _Result$ === void 0 ? void 0 : _Result$.result,\n        footer: (_Result$2 = Result[1]) === null || _Result$2 === void 0 ? void 0 : _Result$2.result,\n        img: (_Result$3 = Result[3]) === null || _Result$3 === void 0 ? void 0 : _Result$3.result\n      }\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"module"}