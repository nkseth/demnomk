{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\"; // import \"./GoodDetailTabs.scss\";\n// import \"./GoodDetailTabs-rtl.scss\";\n// import \"react-tabs/style/react-tabs.css\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Translate } from \"react-localize-redux\";\nimport SpecificationsTab from \"./SpecificationsTab\";\nimport RatingAndOverviews from \"./RatingAndOverviews\";\nimport { connect } from \"react-redux\";\nimport { fetchComment, LOADING, selectCommnetStatus, SUCCEEDED, selectSpecifiStatus, fetchSpecifi } from \"./../../GoodDetailSlice\";\nimport { withRouter } from \"next/router\";\nimport { Loading } from \"../../../../../common/\";\nvar REVIEW_AND_RATING = 2;\nvar SPECIFICATION = 1;\n\nvar GoodDetailTabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(GoodDetailTabs, _React$Component);\n\n  var _super = _createSuper(GoodDetailTabs);\n\n  function GoodDetailTabs(props) {\n    var _this;\n\n    _classCallCheck(this, GoodDetailTabs);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchTab\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(index, lastIndex) {\n        var result, moreCommentExist, _result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(index === REVIEW_AND_RATING && _this.props.commnetStatus !== SUCCEEDED && _this.state.comments.length === 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.props.fetchComment({\n                  pageSize: _this.state.commentsPageSize,\n                  pageNumber: _this.state.commentsPageNumber,\n                  id: _this.state.goodId\n                });\n\n              case 3:\n                result = _context.sent;\n                result = result.payload.result; // let result = {\n                //   status: 0,\n                //   result: {\n                //     surveyList: [\n                //       {\n                //         value: 0,\n                //         average: 0,\n                //       },\n                //       {\n                //         value: 5,\n                //         average: 10,\n                //       },\n                //       {\n                //         value: 10,\n                //         average: 10,\n                //       },\n                //     ],\n                //     goodsComment: [\n                //       {\n                //         commentId: 0,\n                //         commentText: \"string\",\n                //         commentDate: \"2020-10-22T07:37:55.834Z\",\n                //         customerName: \"string\",\n                //         likeCount: 0,\n                //         reviewPoint: 0,\n                //         isAccepted: true,\n                //         tGoodsCommentPoints: [\n                //           {\n                //             pointId: 0,\n                //             pointText: \"string\",\n                //             pointType: true,\n                //           },\n                //         ],\n                //       },\n                //       {\n                //         commentId: 10,\n                //         commentText: \"string\",\n                //         commentDate: \"2020-10-22T07:37:55.834Z\",\n                //         customerName: \"string\",\n                //         likeCount: 0,\n                //         reviewPoint: 0,\n                //         isAccepted: true,\n                //         tGoodsCommentPoints: [\n                //           {\n                //             pointId: 0,\n                //             pointText: \"string\",\n                //             pointType: true,\n                //           },\n                //         ],\n                //       },\n                //       {\n                //         commentId: 5,\n                //         commentText: \"commmentewsfsdf\",\n                //         commentDate: \"2020-10-22T07:37:55.834Z\",\n                //         customerName: \"john hall\",\n                //         likeCount: 40,\n                //         reviewPoint: 4,\n                //         isAccepted: true,\n                //         tGoodsCommentPoints: [\n                //           {\n                //             pointId: 1,\n                //             pointText: \"possetive\",\n                //             pointType: true,\n                //           },\n                //           {\n                //             pointId: 10,\n                //             pointText: \"false item\",\n                //             pointType: false,\n                //           },\n                //         ],\n                //       },\n                //     ],\n                //     goodsCommentCount: 1000,\n                //     allSurveyAverage: 5,\n                //   },\n                //   message: \"string\",\n                // };\n                // result = result.result;\n\n                moreCommentExist = true;\n                if (result.goodsComment.length < _this.state.commentsPageSize) moreCommentExist = false;\n\n                _this.setState({\n                  comments: result.goodsComment,\n                  moreCommentExist: moreCommentExist,\n                  reqResult: result\n                });\n\n              case 8:\n                if (!(index === SPECIFICATION && _this.props.specifiStatus !== SUCCEEDED)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return _this.props.fetchSpecifi(_this.state.goodId);\n\n              case 11:\n                _result = _context.sent;\n                _result = _result.payload.result;\n\n                _this.setState({\n                  specifications: _result\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMoreReview\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var newPageNumber, result, moreCommentExist;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newPageNumber = _this.state.commentsPageNumber++;\n              _context2.next = 3;\n              return _this.props.fetchComment({\n                pageSize: _this.state.pageSize,\n                pageNumber: newPageNumber,\n                id: _this.state.goodId\n              });\n\n            case 3:\n              result = _context2.sent;\n              result = result.payload.result;\n              moreCommentExist = true;\n              if (result.goodsComment.length < _this.state.commentsPageSize) moreCommentExist = false;\n\n              _this.setState(function (state) {\n                var newCommentsList = [].concat(_toConsumableArray(state.comments), _toConsumableArray(result.goodsComment));\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  commentsPageNumber: newPageNumber,\n                  comments: newCommentsList,\n                  moreCommentExist: moreCommentExist\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _this.comments = \"hello\";\n    _this.state = {\n      commentsPageNumber: 1,\n      commentsPageSize: 10,\n      goodId: _this.props.router.query.good[0],\n      comments: [],\n      moreCommentExist: false,\n      reqResult: {},\n      specifications: []\n    };\n    return _this;\n  }\n\n  _createClass(GoodDetailTabs, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", {\n        className: \"goodDetailTabs\"\n      }, __jsx(Tabs, {\n        onSelect: this.handleSwitchTab\n      }, __jsx(TabList, null, __jsx(Tab, null, __jsx(Translate, {\n        id: \"tabs.overview\"\n      })), __jsx(Tab, null, __jsx(Translate, {\n        id: \"tabs.specification\"\n      })), __jsx(Tab, null, __jsx(Translate, {\n        id: \"tabs.rating\"\n      }))), __jsx(TabPanel, null, __jsx(\"div\", {\n        className: \"ql-editor\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.description\n        }\n      })), __jsx(TabPanel, null, __jsx(SpecificationsTab, {\n        specifications: this.state.specifications\n      })), __jsx(TabPanel, null, this.state.comments.length === 0 && this.props.commnetStatus === LOADING ? __jsx(Loading, {\n        type: \"gray\",\n        width: \"80px\"\n      }) : __jsx(RatingAndOverviews, {\n        asideData: this.state.reqResult,\n        data: this.state.comments,\n        moreCommentExist: this.state.moreCommentExist,\n        handleMoreReview: this.handleMoreReview\n      }))));\n    }\n  }]);\n\n  return GoodDetailTabs;\n}(React.Component);\n\nvar mapDispatchToProps = {\n  fetchComment: fetchComment,\n  fetchSpecifi: fetchSpecifi\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    commnetStatus: selectCommnetStatus(state),\n    specifiStatus: selectSpecifiStatus(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GoodDetailTabs));","map":null,"metadata":{},"sourceType":"module"}