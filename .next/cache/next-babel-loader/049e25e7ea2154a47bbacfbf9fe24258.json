{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport { BoxStyle1, Loading } from \"../../../../../common\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport { selectLang } from \"../../../../../../appConfigSlice\";\nimport { validateConfirmPassword, validateEmpty } from \"../../../../../../lib/formValidator\";\nimport { client_updateProfile, client_changeCustomerPassword } from \"../../../../../../lib/api/client/clientUserPanel\";\nimport { FormErrorMsg } from \"../../../../../common\";\nimport { toast } from \"react-toastify\";\nimport { getToastConfig } from \"../../../../../../lib/toast\";\nimport { getErrorMsg } from \"../../../../../../lib/helpers\";\nimport { isRtl } from \"../../../../../../lib/isRtl\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport { client_getActiveCities, client_getActiveCountries, client_getActiveProvince } from \"../../../../../../lib/api/client/clientShop\";\n\nvar renderBoxHeader = function renderBoxHeader() {\n  return __jsx(\"div\", {\n    className: \"profile-edit__header-container\"\n  }, __jsx(\"h2\", {\n    className: \"profile-edit__box-header\"\n  }, __jsx(Translate, {\n    id: \"profile.editprofile\"\n  })), __jsx(\"p\", {\n    className: \"profile-edit__box-subheader\"\n  }, __jsx(Translate, {\n    id: \"profile.manageprofile\"\n  })));\n};\n\nvar ProfileEdit = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileEdit, _React$Component);\n\n  var _super = _createSuper(ProfileEdit);\n\n  function ProfileEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileEdit);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPasswordModal\", function () {\n      return __jsx(Translate, null, function (_ref) {\n        var t = _ref.translate;\n        return __jsx(\"form\", {\n          className: \"changepass\",\n          onSubmit: _this.handleSubmitChangePass\n        }, __jsx(\"header\", {\n          className: \"changepass__header\"\n        }, __jsx(\"h2\", {\n          className: \"changepass__header-text\"\n        }, t(\"profile.changepass\"))), __jsx(\"div\", {\n          className: \"changepass__content\"\n        }, __jsx(\"p\", {\n          className: \"changepass__des\"\n        }, t(\"profile.des-changepass\")), __jsx(\"label\", {\n          className: \"changepass__input-cnt gray__form-label\"\n        }, __jsx(\"span\", {\n          className: \"gray__input-label\"\n        }, t(\"profile.cur-pass\")), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"password\",\n          placeholder: t(\"profile.cur-pass-placeholder\"),\n          onBlur: function onBlur(e) {\n            validateEmpty({\n              name: \"curr\",\n              value: e.target.value,\n              handler: _this.setErrors,\n              lang: _this.lang\n            });\n          },\n          required: true,\n          onChange: _this.handleChangeCurrPass,\n          value: _this.state.currPass\n        }), __jsx(FormErrorMsg, {\n          show: _this.state.errors[\"curr\"],\n          msg: _this.state.errors[\"curr\"]\n        })), __jsx(\"label\", {\n          className: \"changepass__input-cnt gray__form-label\"\n        }, __jsx(\"span\", {\n          className: \"gray__input-label\"\n        }, t(\"profile.new-pass\")), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"password\",\n          placeholder: t(\"profile.new-pass-placeholder\"),\n          onBlur: function onBlur(e) {\n            validateEmpty({\n              name: \"pass\",\n              value: e.target.value,\n              handler: _this.setErrors,\n              lang: _this.lang\n            });\n          },\n          required: true,\n          onChange: _this.handleChangepass,\n          value: _this.state.pass\n        }), __jsx(FormErrorMsg, {\n          show: _this.state.errors[\"pass\"],\n          msg: _this.state.errors[\"pass\"]\n        })), __jsx(\"label\", {\n          className: \"changepass__input-cnt gray__form-label mt-5\"\n        }, __jsx(\"span\", {\n          className: \"gray__input-label\"\n        }, t(\"profile.con-pass\")), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"password\",\n          placeholder: t(\"profile.con-pass-placeholder\"),\n          required: true,\n          value: _this.state.cPass,\n          onBlur: function onBlur(e) {\n            validateConfirmPassword({\n              name: e.target.name,\n              value1: _this.state.pass,\n              value2: e.target.value,\n              handler: _this.setErrors,\n              lang: _this.context.lang\n            });\n          },\n          onChange: function onChange(e) {\n            _this.handleConfirmPassChange(e);\n\n            validateConfirmPassword({\n              name: \"cpassword\",\n              value1: _this.state.pass,\n              value2: e.target.value,\n              handler: _this.setErrors,\n              lang: _this.context.lang\n            });\n          }\n        }), __jsx(FormErrorMsg, {\n          show: _this.state.errors[\"cpassword\"],\n          msg: _this.state.errors[\"cpassword\"]\n        }))), __jsx(\"footer\", {\n          className: \"changepass__footer\"\n        }, __jsx(\"button\", {\n          onClick: _this.handleModalClose,\n          className: \"changepass__footer-btn\",\n          type: \"button\"\n        }, t(\"profile.cancel\")), __jsx(\"button\", {\n          className: \"changepass__footer-btn changepass__footer-btn--primary\"\n        }, _this.state.showPassLoader ? __jsx(Loading, {\n          type: \"gray\",\n          width: \"11%\",\n          height: \"70%\"\n        }) : t(\"profile.save-pass\"))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setErrors\", function (func) {\n      var error = func(_this.state.errors);\n\n      _this.setState({\n        errors: error\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clickHandler\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isPasswordModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleModalClose\", function () {\n      _this.setState({\n        isPasswordModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeName\", function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFamily\", function (e) {\n      _this.setState({\n        family: e.target.value\n      }, function () {});\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeCurrPass\", function (e) {\n      _this.setState({\n        currPass: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangepass\", function (e) {\n      _this.setState({\n        pass: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangepass\", function (e) {\n      _this.setState({\n        pass: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleConfirmPassChange\", function (e) {\n      _this.setState({\n        cPass: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var key, _this$state$date, _this$state$selectedC, _this$state$selectedC2, _this$state$selectedP, result, _error$response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.t0 = _regeneratorRuntime.keys(_this.state.errors);\n\n              case 2:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 9;\n                  break;\n                }\n\n                key = _context.t1.value;\n\n                if (!_this.state.errors[key]) {\n                  _context.next = 7;\n                  break;\n                }\n\n                console.log(\"error\");\n                return _context.abrupt(\"return\");\n\n              case 7:\n                _context.next = 2;\n                break;\n\n              case 9:\n                _context.prev = 9;\n\n                _this.setState({\n                  showLoader: true\n                });\n\n                _context.next = 13;\n                return client_updateProfile({\n                  userName: _this.state.email,\n                  name: _this.state.name,\n                  family: _this.state.family,\n                  nationalCode: _this.state.nationalCode,\n                  birthDate: (_this$state$date = _this.state.date) === null || _this$state$date === void 0 ? void 0 : _this$state$date.toLocaleDateString(),\n                  FkCountryId: (_this$state$selectedC = _this.state.selectedCountry) === null || _this$state$selectedC === void 0 ? void 0 : _this$state$selectedC.value,\n                  FkCityId: (_this$state$selectedC2 = _this.state.selectedCity) === null || _this$state$selectedC2 === void 0 ? void 0 : _this$state$selectedC2.value,\n                  FkProvinceId: (_this$state$selectedP = _this.state.selectedProvince) === null || _this$state$selectedP === void 0 ? void 0 : _this$state$selectedP.value\n                });\n\n              case 13:\n                result = _context.sent;\n\n                if (result.status == 200) {\n                  toast.success(getErrorMsg(_this.props.lang, \"succ-update-profile\"), getToastConfig());\n                }\n\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t2 = _context[\"catch\"](9);\n                toast.error((_error$response = _context.t2.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message, getToastConfig());\n\n              case 20:\n                _this.setState({\n                  showLoader: false\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[9, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitChangePass\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var key, result, _error$response2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.t0 = _regeneratorRuntime.keys(_this.state.errors);\n\n              case 2:\n                if ((_context2.t1 = _context2.t0()).done) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                key = _context2.t1.value;\n\n                if (!_this.state.errors[key]) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 6:\n                _context2.next = 2;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n\n                _this.setState({\n                  showPassLoader: true\n                });\n\n                _context2.next = 12;\n                return client_changeCustomerPassword({\n                  oldPassword: _this.state.currPass,\n                  newPassword: _this.state.pass,\n                  userName: _this.state.email\n                });\n\n              case 12:\n                result = _context2.sent;\n\n                if (result.status == 200) {\n                  toast.success(getErrorMsg(_this.props.lang, \"succ-update-password\"), getToastConfig());\n\n                  _this.setState({\n                    isPasswordModalOpen: false\n                  });\n                }\n\n                _context2.next = 19;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t2 = _context2[\"catch\"](8);\n                toast.error((_error$response2 = _context2.t2.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message, getToastConfig());\n\n              case 19:\n                _this.setState({\n                  showPassLoader: false\n                });\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[8, 16]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCountryChange\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(item) {\n        var result, provinces;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.setState(function (state) {\n                  return _objectSpread(_objectSpread({}, state), {}, {\n                    selectedCountry: item,\n                    selectedCity: null,\n                    selectedProvince: null\n                  });\n                });\n\n                _context3.next = 3;\n                return client_getActiveProvince(item.value);\n\n              case 3:\n                result = _context3.sent;\n                provinces = [];\n                result.result.forEach(function (item) {\n                  provinces.push({\n                    value: item.provinceId,\n                    label: item.provinceName\n                  });\n                });\n                provinces.sort(_this.compare);\n\n                _this.setState(function (state) {\n                  return _objectSpread(_objectSpread({}, state), {}, {\n                    form: _objectSpread(_objectSpread({}, state.form), {}, {\n                      provinces: provinces\n                    })\n                  });\n                }); // const result = await client_getActiveCities(item.value);\n                // let cities = [];\n                // result.result.forEach((item) => {\n                //   cities.push({ value: item.cityId, label: item.cityTitle });\n                // });\n                // this.setState((state) => {\n                //   return {\n                //     ...state,\n                //     form: {\n                //       ...state.form,\n                //       cities: cities,\n                //     },\n                //   };\n                // });\n\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProvinceChange\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(item) {\n        var _this$state$selectedP2;\n\n        var result, cities;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this.setState(function (state) {\n                  return _objectSpread(_objectSpread({}, state), {}, {\n                    selectedProvince: item,\n                    selectedCity: null\n                  });\n                });\n\n                _context4.next = 3;\n                return client_getActiveCities(item.value);\n\n              case 3:\n                result = _context4.sent;\n\n                if (item.value != ((_this$state$selectedP2 = _this.state.selectedProvince) === null || _this$state$selectedP2 === void 0 ? void 0 : _this$state$selectedP2.value)) {\n                  _this.setState(function (state) {\n                    return _objectSpread(_objectSpread({}, state), {}, {\n                      selectedProvince: null\n                    });\n                  });\n                }\n\n                cities = [];\n                result.result.forEach(function (item) {\n                  cities.push({\n                    value: item.cityId,\n                    label: item.cityTitle\n                  });\n                });\n                cities.sort(_this.compare);\n\n                _this.setState(function (state) {\n                  return _objectSpread(_objectSpread({}, state), {}, {\n                    form: _objectSpread(_objectSpread({}, state.form), {}, {\n                      cities: cities\n                    })\n                  });\n                }); // setCityItems(cities);\n                // setProvinceEmptyError(false);\n\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      form: {\n        countries: [],\n        provinces: [],\n        cities: []\n      },\n      nationalCode: \"\",\n      birthdat: \"\",\n      email: \"\",\n      family: \"\",\n      name: \"\",\n      errors: \"\",\n      currPass: \"\",\n      pass: \"\",\n      cPass: \"\",\n      selectedCountry: null,\n      selectedCity: null,\n      selectedProvince: null,\n      customerId: 0,\n      componentLogged: false,\n      showLoader: false,\n      showPassLoader: false,\n      date: null\n    };\n    _this.is_rtl = isRtl(_this.props.lang);\n    _this.handleChangeName = _this.handleChangeName.bind(_assertThisInitialized(_this));\n    _this.handleFamily = _this.handleFamily.bind(_assertThisInitialized(_this));\n    _this.handleChangeCurrPass = _this.handleChangeCurrPass.bind(_assertThisInitialized(_this));\n    _this.handleChangepass = _this.handleChangepass.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProfileEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        componentLogged: false\n      }); // get active countries\n\n      client_getActiveCountries().then(function (res) {\n        var countries = [];\n        res.result.forEach(function (item) {\n          countries.push({\n            value: item.countryId,\n            label: item.countryTitle,\n            iso: item.iso,\n            phoneCode: item.phoneCode\n          });\n\n          _this2.setState(function (state) {\n            return {\n              form: _objectSpread(_objectSpread({}, state.form), {}, {\n                countries: countries\n              })\n            };\n          });\n        });\n      });\n\n      if (this.props.state.fkCountryId) {\n        this.handleCountryChange({\n          value: this.props.state.fkCountryId,\n          label: this.props.state.countryName\n        });\n      }\n\n      if (this.props.state.fkProvinceId) {\n        this.handleProvinceChange({\n          value: this.props.state.fkProvinceId,\n          label: this.props.state.provinceName\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.getData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.state.componentLogged && this.props.state.email != \"\") {\n        this.setState({\n          name: this.props.state.name,\n          family: this.props.state.family,\n          email: this.props.state.email,\n          customerId: this.props.state.customerId,\n          componentLogged: true,\n          selectedCountry: this.props.state.fkCountryId ? {\n            value: this.props.state.fkCountryId,\n            label: this.props.state.countryName\n          } : null,\n          selectedProvince: this.props.state.fkProvinceId ? {\n            value: this.props.state.fkProvinceId,\n            label: this.props.state.provinceName\n          } : null,\n          selectedCity: this.props.state.fkCityId ? {\n            value: this.props.state.fkCityId,\n            label: this.props.state.cityName\n          } : null\n        }); // if (this.props.state.fkCountryId) {\n        //   this.handleCountryChange({ value: this.props.state.fkCountryId, label: this.props.state.countryName });\n        // }\n      }\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(a, b) {\n      return a.label > b.label ? 1 : b.label > a.label ? -1 : 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(BoxStyle1, {\n        headerContent: renderBoxHeader()\n      }, __jsx(Modal, {\n        closeTimeoutMS: 200,\n        className: \"changepass-modal\",\n        overlayClassName: \"editProfileOverly\",\n        onRequestClose: this.handleModalClose,\n        isOpen: this.state.isPasswordModalOpen,\n        ariaHideApp: false\n      }, this.renderPasswordModal(0)), __jsx(\"section\", {\n        className: \"container-fluid profile-edit\"\n      }, __jsx(\"form\", {\n        className: \"profile-edit__form-container mt-4\",\n        onSubmit: this.handleSubmit\n      }, __jsx(Translate, null, function (_ref6) {\n        var translate = _ref6.translate;\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"row no-gutters justify-content-between\"\n        }, __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"profile-edit__input-label gray__input-label\"\n        }, __jsx(Translate, {\n          id: \"profile.firstname\"\n        }), __jsx(\"span\", {\n          className: \"input-required\"\n        }, \"*\")), __jsx(\"input\", {\n          className: \"profile-edit__input gray__input\",\n          type: \"text\",\n          onBlur: function onBlur(e) {\n            validateEmpty({\n              name: \"name\",\n              value: e.target.value,\n              handler: _this3.setErrors,\n              lang: _this3.lang\n            });\n          },\n          required: true,\n          onChange: _this3.handleChangeName,\n          value: _this3.state.name\n        }), __jsx(FormErrorMsg, {\n          show: _this3.state.errors[\"name\"],\n          msg: _this3.state.errors[\"name\"]\n        }))), __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"profile-edit__input-label gray__input-label\"\n        }, __jsx(Translate, {\n          id: \"profile.lastname\"\n        }), __jsx(\"span\", {\n          className: \"input-required\"\n        }, \"*\")), __jsx(\"input\", {\n          className: \"profile-edit__input gray__input\",\n          type: \"text\",\n          onBlur: function onBlur(e) {\n            validateEmpty({\n              name: \"family\",\n              value: e.target.value,\n              handler: _this3.setErrors,\n              lang: _this3.lang\n            });\n          },\n          required: true,\n          onChange: _this3.handleFamily,\n          value: _this3.state.family\n        }), __jsx(FormErrorMsg, {\n          show: _this3.state.errors[\"family\"],\n          msg: _this3.state.errors[\"family\"]\n        })))), __jsx(\"div\", {\n          className: \"row no-gutters justify-content-between mt-4\"\n        }, __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"profile-edit__input-label gray__input-label\"\n        }, __jsx(Translate, {\n          id: \"profile.national-code\"\n        })), __jsx(\"input\", {\n          className: \"profile-edit__input gray__input\",\n          type: \"text\" // onChange={this.handleChangeName}\n          ,\n          value: _this3.state.nationalCode,\n          placeholder: translate(\"profile.national-code-placeholder\"),\n          onChange: function onChange(e) {\n            _this3.setState({\n              nationalCode: e.target.value\n            });\n          }\n        }))), __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"profile-edit__input-label gray__input-label\"\n        }, __jsx(Translate, {\n          id: \"profile.birthday-date\"\n        })), __jsx(DatePicker, {\n          placeholderText: \"Click to select a date\",\n          peekNextMonth: true,\n          showMonthDropdown: true,\n          showYearDropdown: true,\n          withPortal: true,\n          dropdownMode: \"select\",\n          selected: _this3.state.date,\n          onChange: function onChange(date) {\n            _this3.setState({\n              date: date\n            });\n          },\n          className: \"profile-edit__input gray__input\"\n        })))), __jsx(\"div\", {\n          className: \"row no-gutters justify-content-between mt-4\"\n        }, __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"addresses.country\"\n        })), __jsx(Select, {\n          className: \"react-select\",\n          options: _this3.state.form.countries // isDisabled={isDisableCountry}\n          ,\n          onChange: _this3.handleCountryChange,\n          placeholder: translate(\"addresses.country-placeholder\"),\n          value: _this3.state.selectedCountry,\n          required: true\n        }))), __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"addresses.province\"\n        })), __jsx(Select, {\n          className: \"react-select\",\n          options: _this3.state.form.provinces,\n          onChange: function onChange(item) {\n            _this3.handleProvinceChange(item); // setSelectedProvince(item);\n\n          },\n          placeholder: translate(\"addresses.province-placeholder\"),\n          value: _this3.state.selectedProvince,\n          required: true\n        })))), __jsx(\"div\", {\n          className: \"row no-gutters justify-content-between mt-2\"\n        }, __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"addresses.city\"\n        })), __jsx(Select, {\n          className: \"react-select\",\n          options: _this3.state.form.cities // isDisabled={isDisableCountry}\n          ,\n          onChange: function onChange(item) {\n            _this3.setState({\n              selectedCity: item\n            });\n          },\n          placeholder: translate(\"addresses.city-placeholder\"),\n          value: _this3.state.selectedCity,\n          required: true\n        }))), __jsx(\"div\", {\n          className: \"col-md-6\"\n        }, __jsx(\"label\", {\n          className: \"profile-edit__form-label gray__form-label mt-3\"\n        }, __jsx(\"span\", {\n          className: \"profile-edit__input-label gray__input-label\"\n        }, __jsx(Translate, {\n          id: \"profile.email1\"\n        })), __jsx(\"input\", {\n          className: \"profile-edit__input gray__input\",\n          type: \"email\",\n          placeholder: translate(\"profile.email-placeholder\"),\n          required: true,\n          readOnly: true,\n          value: _this3.state.email\n        }), __jsx(\"span\", {\n          className: \"profile-edit__sub-label-form\"\n        }, __jsx(Translate, {\n          id: \"profile.cantchange\"\n        }))))), __jsx(\"div\", {\n          className: \"profile-edit__passchange-link-cnt\"\n        }, __jsx(\"a\", {\n          onClick: _this3.clickHandler,\n          className: \"profile-edit__passchange-link\"\n        }, __jsx(Translate, {\n          id: \"profile.changepass\"\n        }))), __jsx(\"button\", {\n          className: \"primary-btn profile-edit__save-btn\",\n          type: \"submit\"\n        }, _this3.state.showLoader ? __jsx(Loading, {\n          type: \"gray\",\n          width: \"20px\",\n          height: \"20px\"\n        }) : __jsx(Translate, {\n          id: \"profile.save\"\n        })));\n      }))));\n    }\n  }]);\n\n  return ProfileEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lang: selectLang(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileEdit);","map":null,"metadata":{},"sourceType":"module"}