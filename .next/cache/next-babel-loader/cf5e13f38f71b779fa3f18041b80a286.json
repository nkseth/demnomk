{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { SlideDown } from \"react-slidedown\";\nimport \"react-slidedown/lib/slidedown.css\"; // import \"./Dropdown.scss\";\n// import \"./Dropdown-rtl.scss\";\n\nimport { ReactComponent as LinearArrow } from \"./../../../assets/icons/linear-arrow.svg\";\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      e.preventDefault();\n      if (!_this.alwaysOpen) _this.setState(function (state) {\n        return {\n          open: !state.open\n        };\n      }); // this.arrowRef.current.classList.toggle(\"dropdown__arrow--open\");\n    });\n\n    if (_this.props.alwaysOpen) _this.alwaysOpen = true;else _this.alwaysOpen = false;\n    _this.firstOpen = _this.props.firstOpen;\n    _this.state = {\n      open: _this.firstOpen == true ? true : _this.alwaysOpen\n    }; //this.arrowRef = React.createRef();\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"dropdown \".concat(this.props.containerClass)\n      }, __jsx(\"div\", {\n        href: \"#\",\n        className: \"dropdown__link \".concat(this.props.headerClass),\n        onClick: this.handleClick\n      }, this.props.haveLink ? __jsx(Link, {\n        href: this.props.link\n      }, __jsx(\"a\", null, __jsx(\"span\", {\n        style: {\n          color: \"#4d5a6c\"\n        },\n        className: \"dropdown__text\"\n      }, this.props.text))) : __jsx(\"span\", {\n        className: \"dropdown__text\"\n      }, this.props.text), !this.props.noDropIcon && __jsx(LinearArrow, {\n        className: \"dropdown__arrow \".concat(this.state.open ? \"dropdown__arrow--open\" : \"dropdown__arrow--close\")\n      })), this.alwaysOpen ? __jsx(\"div\", null, this.props.children) : __jsx(SlideDown, null, this.state.open && this.props.children));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}