{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { BoxStyle2, SelectBox3 as SelectBox, Loading } from \"../../../../../../common\";\nimport { Translate } from \"react-localize-redux\";\nimport { ReactComponent as BackIcon } from \"./../../../../../../../assets/icons/back.svg\";\nimport { Link } from \"react-router-dom\";\nimport SlideDown from \"react-slidedown\";\nimport { ReactComponent as CreditCardIcon } from \"./../../../../../../../assets/icons/credit-card.svg\";\nimport ajyallWallet from \"./../../../../../../../assets/icons/ajyal-wallet.png\";\nimport OrderItem from \"./OrderItem\";\nimport DropDown from \"react-dropdown\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport CancelResult from \"./CancelResult\";\nimport { ProtraitPhonesAndBigger, ProtraitPhones } from \"../../../../../../../Responsive\";\nimport { client_getCancelList, client_getCancelReasonList, client_submitCancelRequest } from \"../../../../../../../lib/api/client/clientUserPanel\";\nimport { connect } from \"react-redux\";\nimport { selectCurr, selectLang } from \"../../../../../../../appConfigSlice\";\nimport Select from \"react-select\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { getErrorMsg } from \"../../../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../../../lib/toast\";\nimport { isRtl } from \"../../../../../../../lib/isRtl\";\n\nclass CancelOrders extends React.Component {\n  constructor(props) {\n    super(props); // console.log(this.props.content2,\"----------\");\n\n    _defineProperty(this, \"showResultPage\", async () => {\n      if (this.state.selectedItems.some(x => x.fkCancelingReasonId == 0) == true) {\n        toast.error(getErrorMsg(this.props.lang, \"reason-error\"), getToastConfig());\n        return;\n      }\n\n      try {\n        this.setState({\n          showButtonLoader: true\n        });\n        const result = await client_submitCancelRequest(this.state.selectedItems);\n        this.setState({\n          showButtonLoader: false\n        });\n\n        if (result.status == 200) {\n          toast.success(getErrorMsg(this.props.lang, \"return-req\"), getToastConfig());\n          this.setState({\n            showResultPage: true,\n            cancelResultData: result.result\n          });\n        }\n      } catch (error) {\n        var _error$response;\n\n        this.setState({\n          showButtonLoader: false\n        });\n        toast.error((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message, getToastConfig());\n      }\n    });\n\n    _defineProperty(this, \"handleStarClick\", () => {\n      if (!this.state.showRatingInput) {\n        this.setState({\n          showRatingInput: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"getListCancelData\", async () => {\n      this.setState({\n        showLoader: true\n      });\n      const result = await client_getCancelList(this.props.match.params.id);\n      this.setState({\n        showLoader: false\n      });\n      this.setState({\n        data: result.data.result\n      });\n    });\n\n    _defineProperty(this, \"getListCancelReason\", async () => {\n      const result = await client_getCancelReasonList();\n      let options = [];\n      result.result.forEach(element => {\n        options.push({\n          value: element.reasonId,\n          label: element.reasonTitle\n        });\n      });\n      this.setState({\n        cancelReasonData: options\n      });\n    });\n\n    _defineProperty(this, \"handleSelectReason\", (itemId, index, reason) => {\n      const items = this.state.selectedItems;\n      items.find(c => c.fkOrderItemId == itemId).fkCancelingReasonId = reason.value;\n      const reasonItem = this.state.selectedReasopnOPtions;\n      reasonItem[index] = reason;\n      this.setState({\n        selectedItems: items,\n        selectedReasopnOPtions: reasonItem\n      });\n    });\n\n    this.state = {\n      selectedItems: [],\n      showResultPage: false,\n      showLoader: false,\n      data: [],\n      cancelReasonData: [],\n      selectedReasopnOPtions: [],\n      cancelResultData: []\n    };\n  }\n\n  handleItemSelect(SelecetdItemData) {\n    let newItemState = [];\n\n    for (let item of SelecetdItemData) {\n      const orderItem = this.state.data.find(x => x.itemId == item.value);\n      const datas = {};\n      datas.fkOrderId = this.props.match.params.id;\n      datas.fkOrderItemId = orderItem.itemId;\n      datas.fkCancelingReasonId = 0;\n      newItemState.push(datas);\n    }\n\n    this.setState({\n      selectedItems: newItemState\n    });\n  }\n\n  componentDidMount() {\n    this.getListCancelData();\n    this.getListCancelReason();\n  }\n\n  renderQuestions(itemId, index) {\n    return __jsx(\"div\", {\n      className: \"order-cancel__slide-cnt mt-2 mt-md-0\"\n    }, __jsx(\"div\", {\n      className: \"cart-item__quantity order-cancel__que\"\n    }, __jsx(ProtraitPhonesAndBigger, null, __jsx(\"span\", {\n      className: \"order-cancel__text\"\n    }, __jsx(Translate, {\n      id: \"orders.cancel-msg1\"\n    }))), __jsx(Select, {\n      className: \"react-select\",\n      options: this.state.cancelReasonData,\n      onChange: this.handleSelectReason.bind(event, itemId, index),\n      placeholder: __jsx(Translate, {\n        id: \"returns.select-reason-place\"\n      }),\n      value: this.state.selectedReasopnOPtions[index],\n      required: true\n    })));\n  }\n\n  renderBoxHeader() {\n    return __jsx(\"header\", {\n      className: \"mapAddress__header\"\n    }, __jsx(Link, {\n      to: this.props.match.url.split(\"/\").slice(0, -1).join(\"/\"),\n      className: \"orderDetail__backlink\"\n    }, __jsx(BackIcon, {\n      className: \"mapAddress__back-icon\"\n    }), __jsx(\"div\", {\n      className: \"orders__item-header\"\n    }, __jsx(\"h2\", {\n      className: \"orders__item-cnt-header\"\n    }, __jsx(Translate, {\n      id: \"orders.select-for-cancel\"\n    })))));\n  }\n\n  render() {\n    var _this$state$data$, _this$state$data;\n\n    return __jsx(\"div\", null, __jsx(ToastContainer, _extends({\n      rtl: isRtl(this.props.lang)\n    }, getToastConfig())), __jsx(SwitchTransition, null, __jsx(CSSTransition, {\n      classNames: \"user-panel__routes\",\n      timeout: 200,\n      key: this.state.showResultPage ? 1 : 2\n    }, this.state.showResultPage ? __jsx(CancelResult, {\n      content: this.state.cancelResultData,\n      currency: this.props.currency,\n      lang: this.props.lang,\n      orderBackLink: this.props.match.url.split(\"/\").slice(0, -1).join(\"/\")\n    }) : __jsx(\"section\", {\n      className: \"order-cancel\"\n    }, __jsx(BoxStyle2, {\n      headerContent: this.renderBoxHeader()\n    }, __jsx(ProtraitPhonesAndBigger, null, __jsx(\"div\", {\n      className: \"order-cart__credit-cnt\"\n    }, ((_this$state$data$ = this.state.data[0]) === null || _this$state$data$ === void 0 ? void 0 : _this$state$data$.customerRefound) == 2 ? __jsx(React.Fragment, null, __jsx(CreditCardIcon, {\n      className: \"order-cart__credit-icon\"\n    }), __jsx(\"span\", {\n      className: \"order-cancel__card\"\n    }, __jsx(Translate, {\n      id: \"orders.card-refund\"\n    }))) : __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: ajyallWallet,\n      className: \"payment__icon\",\n      alt: \"cash icon\"\n    }), __jsx(\"span\", {\n      className: \"order-cancel__card\"\n    }, __jsx(Translate, {\n      id: \"preference.wallet\"\n    })))), __jsx(\"p\", {\n      className: \"order-cancel__text\"\n    }, __jsx(Translate, {\n      id: \"orders.card-msg1\"\n    }), __jsx(\"br\", null), __jsx(\"a\", {\n      href: \"/bhd-en/panel/preference\",\n      className: \"order-cancel__link\"\n    }, __jsx(Translate, {\n      id: \"orders.de-re\"\n    })))), __jsx(\"div\", {\n      className: \"row no-gutters\"\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(SelectBox, {\n      multiSelect: true,\n      onChange: this.handleItemSelect.bind(this)\n    }, (_this$state$data = this.state.data) === null || _this$state$data === void 0 ? void 0 : _this$state$data.map((item, index) => {\n      return __jsx(React.Fragment, null, __jsx(SelectBox.SelectItem, {\n        name: index,\n        value: item.itemId\n      }, __jsx(OrderItem, {\n        data: item,\n        key: item.itemId,\n        currency: this.props.currency,\n        lang: this.props.lang,\n        withoutRightBox: \"true\"\n      })), __jsx(SlideDown, null, this.state.selectedItems.find(c => c.fkOrderItemId == item.itemId) && this.renderQuestions(item.itemId, index)));\n    })), __jsx(ProtraitPhonesAndBigger, null, __jsx(\"div\", {\n      className: \"order-cancel__btn-cnt\"\n    }, this.state.selectedItems.length > 0 && __jsx(\"button\", {\n      onClick: this.showResultPage,\n      className: \"primary-btn order-review__submit-btn\"\n    }, this.state.showButtonLoader ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(\"span\", null, __jsx(Translate, {\n      id: \"orders.cancel\"\n    }), \"\\xA0 \", this.state.selectedItems.length, \"\\xA0 \", __jsx(Translate, {\n      id: \"orders.items\"\n    }))))), __jsx(ProtraitPhones, null, __jsx(\"div\", {\n      className: \"checkout-fix justify-content-center\"\n    }, this.state.selectedItems.length > 0 && __jsx(\"button\", {\n      onClick: this.showResultPage,\n      className: \"primary-btn order-review__submit-btn\"\n    }, this.state.showButtonLoader ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(\"span\", null, __jsx(Translate, {\n      id: \"orders.cancel\"\n    }), \"\\xA0 \", this.state.selectedItems.length, \"\\xA0 \", __jsx(Translate, {\n      id: \"orders.items\"\n    }))))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: selectLang(state),\n    currency: selectCurr(state)\n  };\n};\n\nexport default connect(mapStateToProps)(CancelOrders);","map":null,"metadata":{},"sourceType":"module"}