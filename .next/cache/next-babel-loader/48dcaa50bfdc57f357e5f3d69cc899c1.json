{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport VerificationInput from \"react-verification-input\";\nimport { Loading } from \"../../common\";\nimport { ProtraitPhones, ProtraitPhonesAndBigger } from \"../../../Responsive\";\nimport { useSelector } from \"react-redux\";\nimport { PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\nimport { toast } from \"react-toastify\";\nimport { getErrorMsg } from \"../../../lib/helpers\";\nimport { getToastConfig } from \"../../../lib/toast\";\nimport { selectCurr, selectLang } from \"../../../appConfigSlice\";\nimport { client_resendVerifyMobileNumber } from \"../../../lib/api/client/clientCustomer\";\nimport Timer from \"react-compound-timer/build\";\nconst COUNT = 4;\n\nconst VerifyPhone = ({\n  currdata,\n  submitRegister,\n  loaderSubmitButton,\n  Backclick\n}) => {\n  const lang = useSelector(selectLang);\n  const curr = useSelector(selectCurr);\n  const PNF = PhoneNumberFormat;\n  const phoneUtil = PhoneNumberUtil.getInstance();\n  const phone = currdata.phoneCode + currdata.mobileNumber;\n  const number = phoneUtil.parseAndKeepRawInput(phone, currdata.iso);\n  let can_send_new_email = false;\n  const {\n    0: code,\n    1: setCode\n  } = useState(\"\");\n\n  const handleCode = ref => {\n    setCode(ref.target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (loaderSubmitButton) return;\n\n    if (code.length < COUNT) {\n      toast.error(getErrorMsg(lang, \"code-is-not-valid\"), getToastConfig());\n      return;\n    }\n\n    submitRegister(code, currdata.requestId);\n  };\n\n  const handleResendMessage = async resetTimer => {\n    try {\n      const res = await client_resendVerifyMobileNumber({\n        mobileNumber: '+' + currdata.phoneCode + currdata.mobileNumber\n      });\n      currdata.requestId = res.result.requestId, can_send_new_email = false;\n      toast.success(res.message, getToastConfig());\n      resetTimer();\n    } catch (err) {\n      toast.error(err.response.data.message, getToastConfig());\n      can_send_new_email = true;\n    }\n  };\n\n  const handleBackclick = () => {\n    Backclick();\n  };\n\n  return __jsx(Translate, null, ({\n    translate: t\n  }) => {\n    return __jsx(\"div\", {\n      className: \"auth__verify-phone p-5\"\n    }, __jsx(\"section\", {\n      className: \"add-address-step2\"\n    }, __jsx(\"div\", {\n      className: \"add-address-step2__col\"\n    }, __jsx(\"p\", {\n      className: \"add-address-step2__p1 text-align-center\"\n    }, __jsx(Translate, {\n      id: \"verify-sms\"\n    })), __jsx(\"p\", {\n      className: \"add-address-step2__p2 text-align-center\"\n    }, __jsx(Translate, {\n      id: \"verify-sms-des\"\n    })), __jsx(\"p\", {\n      className: \"add-address-step2__phone text-align-center\"\n    }, phoneUtil.format(number, PNF.INTERNATIONAL)), __jsx(\"a\", {\n      onClick: handleBackclick,\n      className: \"add-address-step2__link primary-link\"\n    }, __jsx(Translate, {\n      id: \"changeRegisterData\"\n    })), __jsx(\"div\", {\n      className: \"add-address-step2__verification-container\"\n    }, __jsx(VerificationInput, {\n      inputField: {\n        onChange: handleCode\n      },\n      length: COUNT,\n      placeholder: \"\"\n    })), __jsx(ProtraitPhonesAndBigger, null, __jsx(\"button\", {\n      onClick: handleSubmit,\n      className: \"primary-btn add-address-step2__btn\"\n    }, loaderSubmitButton ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"changephone-btn\"\n    })))), __jsx(\"div\", {\n      className: \"add-address-step2__col mt-4\"\n    }, __jsx(Timer, {\n      initialTime: 300000,\n      direction: \"backward\"\n    }, ({\n      start,\n      reset,\n      getTime\n    }) => {\n      if (getTime() <= 0) {\n        can_send_new_email = true;\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"add-address-step2__opt\"\n      }, __jsx(Translate, {\n        id: \"dontreceive\"\n      })), \"\\xA0\\xA0\", __jsx(\"span\", {\n        className: \"timer__count ml-3 mr-3\"\n      }, __jsx(Timer.Minutes, null), \" : \", __jsx(Timer.Seconds, null)), __jsx(\"a\", {\n        onClick: e => {\n          e.preventDefault();\n          if (!can_send_new_email) return;\n          handleResendMessage(() => {\n            reset();\n            start();\n          });\n        },\n        className: \"add-address-step2__link primary-link\"\n      }, __jsx(Translate, {\n        id: \"resendnow\"\n      })));\n    })), __jsx(ProtraitPhones, null, __jsx(\"div\", {\n      className: \"checkout-fix justify-content-center\"\n    }, __jsx(\"button\", {\n      onClick: handleSubmit,\n      className: \"primary-btn returns__add-btn\"\n    }, loaderSubmitButton ? __jsx(Loading, {\n      type: \"white\",\n      width: \"20px\",\n      height: \"20px\"\n    }) : __jsx(Translate, {\n      id: \"changephone-btn\"\n    }))))));\n  });\n};\n\nexport default VerifyPhone;","map":null,"metadata":{},"sourceType":"module"}