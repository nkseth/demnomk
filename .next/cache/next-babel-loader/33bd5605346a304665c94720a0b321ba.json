{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { client_fetchCategory } from \"../../../../lib/api/client/clientCategory\";\nexport const LOADING = \"loading\";\nexport const IDLE = \"idle\";\nexport const SUCCEEDED = \"succeeded\";\nexport const ERROR = \"error\";\nconst initialState = {\n  status: IDLE,\n  error: null,\n  catId: null,\n  category: {}\n}; //// categories selectors\n\nexport const selectCatId = state => state.category.catId;\nexport const selectwebHomeModuleList = state => state.category.category.webHomeModuleList;\nexport const selectSlider = state => state.category.category.slider;\nexport const selectCategoryStatus = state => state.category.status;\nexport const selectBrands = state => {\n  var _state$category$categ, _state$category$categ2;\n\n  return (_state$category$categ = state.category.category) === null || _state$category$categ === void 0 ? void 0 : (_state$category$categ2 = _state$category$categ.category) === null || _state$category$categ2 === void 0 ? void 0 : _state$category$categ2.websiteBrand;\n};\nexport const selectCats = state => {\n  var _state$category$categ3, _state$category$categ4;\n\n  return (_state$category$categ3 = state.category.category) === null || _state$category$categ3 === void 0 ? void 0 : (_state$category$categ4 = _state$category$categ3.category) === null || _state$category$categ4 === void 0 ? void 0 : _state$category$categ4.childs;\n};\nexport const selectCatTitle = state => {\n  var _state$category$categ5, _state$category$categ6;\n\n  return (_state$category$categ5 = state.category.category) === null || _state$category$categ5 === void 0 ? void 0 : (_state$category$categ6 = _state$category$categ5.category) === null || _state$category$categ6 === void 0 ? void 0 : _state$category$categ6.categoryTitle;\n};\nexport const setCatId = createAction(\"category/setCatId\");\nexport const fetchCategory = createAsyncThunk(\"category/fetchCategory\", async (catId, {\n  dispatch\n}) => {\n  const result = await client_fetchCategory(catId);\n  dispatch(setCatId(parseInt(catId)));\n  return result.result;\n});\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchCategory.pending]: state => {\n      state.status = LOADING;\n    },\n    [fetchCategory.fulfilled]: (state, action) => {\n      state.status = SUCCEEDED;\n      state.category = action.payload;\n    },\n    [fetchCategory.rejected]: state => {\n      state.status = ERROR;\n    },\n    [setCatId]: (state, action) => {\n      state.catId = action.payload;\n    }\n  }\n});\nexport default categorySlice.reducer;","map":null,"metadata":{},"sourceType":"module"}