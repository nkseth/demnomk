{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { CreateShopContext } from \"../CreateShopContext\";\nimport { Translate } from \"react-localize-redux\";\nimport { toast } from \"react-toastify\";\nimport { Button, FormErrorMsg, Loading } from \"../../../../common\";\nimport { getErrorMsg } from \"../../../../../lib/helpers\";\nimport { getToastConfig } from \"../../../../../lib/toast\";\nimport { validateEmail, validatePasswordCreateShop, validateConfirmPassword, validatePhoneNumber } from \"../../../../../lib/formValidator\";\nimport { COMPLETE_AND_NEXT } from \"../CreateShopConstant\";\nimport { client_getActiveCountries, client_checkShopEmail, client_VerifyProviderMobileNumber } from \"./../../../../../lib/api/client/clientShop\";\nimport VerifyPhone from \"../../../verifyPhone/VerifyPhone\";\nimport Select from \"react-select\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setErrors\", function (func) {\n      var error = func(_this.state.errors);\n\n      _this.setState({\n        errors: error\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEmailChange\", function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePassChange\", function (event) {\n      _this.setState({\n        pass: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleConfirmPassChange\", function (event) {\n      _this.setState({\n        cPass: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeToken\", function (token) {\n      _this.setState({\n        captchaToken: token\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeRef\", function (e) {\n      _this.setState({\n        captchaRef: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var key, checkMobileNumber, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  showLoader: true\n                });\n\n                _context.t0 = _regeneratorRuntime.keys(_this.state.errors);\n\n              case 3:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 11;\n                  break;\n                }\n\n                key = _context.t1.value;\n\n                if (!_this.state.errors[key]) {\n                  _context.next = 9;\n                  break;\n                }\n\n                toast.error(getErrorMsg(_this.state.lang, \"error-detected\"), getToastConfig());\n\n                _this.setState({\n                  showLoader: false\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 3;\n                break;\n\n              case 11:\n                if (!(_this.state.captchaToken === \"\")) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _this.setState({\n                  captchaErrors: true\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 16:\n                _this.setState({\n                  captchaErrors: false\n                });\n\n              case 17:\n                checkMobileNumber = false;\n\n                if (_this.state.oldMobileNumber !== _this.state.mobileNumber) {\n                  checkMobileNumber = true;\n                }\n\n                _context.next = 21;\n                return client_checkShopEmail(\"+\" + _this.state.phoneCode + _this.state.mobileNumber, _this.state.email, checkMobileNumber, _this.state.captchaToken);\n\n              case 21:\n                data = _context.sent;\n\n                if (!(data.status !== 200)) {\n                  _context.next = 28;\n                  break;\n                }\n\n                toast.error(data.message, getToastConfig());\n\n                _this.setState({\n                  showLoader: false\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 28:\n                if (!(data.result == null)) {\n                  _context.next = 35;\n                  break;\n                }\n\n                toast.error(data.message, getToastConfig());\n\n                _this.setState({\n                  showLoader: false\n                });\n\n                _this.state.captchaRef.reset();\n\n                return _context.abrupt(\"return\");\n\n              case 35:\n                if (checkMobileNumber) {\n                  _this.setState({\n                    showLoader: false,\n                    currentSituation: 2,\n                    requestId: data.result.requestId\n                  });\n                } else {\n                  _this.nextSection();\n                }\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handlerVerifySms\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(smsCode, requestSmsId) {\n        var data, _err$response;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                _this.setState({\n                  loaderFinalSubmitButton: true\n                });\n\n                _context2.next = 4;\n                return client_VerifyProviderMobileNumber(\"+\" + _this.state.phoneCode + _this.state.mobileNumber, smsCode, requestSmsId);\n\n              case 4:\n                data = _context2.sent;\n\n                if (data.status === 200) {\n                  _this.nextSection();\n                } else {}\n\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this.setState({\n                  showLoader: false,\n                  loaderFinalSubmitButton: false\n                });\n\n                toast.error((_err$response = _context2.t0.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message, getToastConfig());\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBackclick\", function () {\n      _this.setState({\n        currentSituation: 1,\n        pass: \"\",\n        cPass: \"\",\n        showLoader: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextSection\", function () {\n      _this.context.handleLogin(_this.state.email, _this.state.pass, _this.state.mobileNumber, _this.state.countryId, _this.state.iso, _this.state.phoneCode, _this.state.countryName);\n\n      _this.context.handleStep(COMPLETE_AND_NEXT);\n\n      _this.setState({\n        showLoader: false,\n        loaderFinalSubmitButton: false\n      });\n    });\n\n    _this.state = {\n      countryItems: [],\n      email: \"\",\n      pass: \"\",\n      cPass: \"\",\n      mobileNumber: \"\",\n      oldMobileNumber: \"\",\n      countryId: 0,\n      selectedCountry: null,\n      countryName: \"\",\n      iso: \"\",\n      phoneCode: \"\",\n      requestId: \"\",\n      errors: {},\n      showLoader: false,\n      loaderFinalSubmitButton: false,\n      currentSituation: 1,\n      captchaErrors: false,\n      captchaToken: \"\",\n      captchaRef: {}\n    };\n    _this.handleEmailChange = _this.handleEmailChange.bind(_assertThisInitialized(_this));\n    _this.handlePassChange = _this.handlePassChange.bind(_assertThisInitialized(_this));\n    _this.handleConfirmPassChange = _this.handleConfirmPassChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var result, countries;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return client_getActiveCountries();\n\n              case 2:\n                result = _context3.sent;\n                countries = [];\n                result.result.forEach(function (item) {\n                  countries.push({\n                    value: item.countryId,\n                    label: __jsx(\"div\", null, __jsx(\"img\", {\n                      src: \"/assets/flags/\".concat(item.flagUrl),\n                      height: \"15px\",\n                      width: \"15px\"\n                    }), \" \", \"+ \", item.phoneCode),\n                    iso: item.iso,\n                    phoneCode: item.phoneCode,\n                    countryName: item.countryTitle\n                  });\n                });\n                this.setState({\n                  email: this.context.formData.email,\n                  mobileNumber: \"\",\n                  oldMobileNumber: this.context.formData.phone,\n                  pass: this.context.formData.password,\n                  cPass: this.context.formData.password,\n                  phoneCode: this.context.formData.phoneCode,\n                  iso: this.context.formData.iso,\n                  countryId: this.context.formData.fkCountryId,\n                  countryName: this.context.formData.countryName,\n                  countryItems: countries\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }, this.state.currentSituation === 1 ? __jsx(\"div\", {\n        className: \"createshop__transition-cnt\"\n      }, __jsx(\"div\", {\n        className: \"mt-5\"\n      }, __jsx(\"h3\", {\n        className: \"createshop__header-text\"\n      }, __jsx(Translate, {\n        id: \"login.signIn-msg1\"\n      })), __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"auth__form auth__form--login createshop__login createshop__form--login\"\n      }, __jsx(Translate, null, function (_ref3) {\n        var t = _ref3.translate;\n        return __jsx(React.Fragment, null, __jsx(\"label\", {\n          className: \"auth__form-label\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"login.mobileNumber\"\n        })), __jsx(\"div\", {\n          className: \"auth__mobile-number\"\n        }, __jsx(Select, {\n          className: \"react-select\",\n          options: _this2.state.countryItems,\n          value: _this2.state.selectedCountry,\n          placeholder: \"code\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              selectedCountry: event,\n              iso: event.iso,\n              countryId: event.value,\n              phoneCode: event.phoneCode,\n              countryName: event.countryName\n            });\n          },\n          onBlur: function onBlur(e) {\n            validatePhoneNumber({\n              name: \"mobileNumber\",\n              value: _this2.state.mobileNumber,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang,\n              iso: _this2.state.iso\n            });\n          }\n        }), __jsx(\"input\", {\n          className: \"auth__input auth__input-mobile\",\n          type: \"text\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              mobileNumber: event.target.value\n            });\n          },\n          value: _this2.state.mobileNumber,\n          name: \"mobileNumber\",\n          onBlur: function onBlur(e) {\n            validatePhoneNumber({\n              name: e.target.name,\n              value: e.target.value,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang,\n              iso: _this2.state.iso\n            });\n          },\n          required: true,\n          placeholder: t(\"login.mobile-placeholder\")\n        })), __jsx(FormErrorMsg, {\n          show: _this2.state.errors[\"mobileNumber\"],\n          msg: _this2.state.errors[\"mobileNumber\"]\n        })), __jsx(\"label\", {\n          className: \"auth__form-label\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"login.email\"\n        })), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"email\",\n          onChange: _this2.handleEmailChange,\n          placeholder: t(\"login.email-placeholder\"),\n          required: true,\n          value: _this2.state.email,\n          onBlur: function onBlur(e) {\n            validateEmail({\n              name: \"email\",\n              value: e.target.value,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang\n            });\n          },\n          pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\n        }), __jsx(FormErrorMsg, {\n          show: _this2.state.errors[\"email\"],\n          msg: _this2.state.errors[\"email\"]\n        })), __jsx(\"label\", {\n          className: \"auth__form-label\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"login.pass\"\n        })), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"password\",\n          placeholder: t(\"login.pass-placeholder\"),\n          onChange: _this2.handlePassChange,\n          value: _this2.state.pass,\n          required: true,\n          onBlur: function onBlur(e) {\n            validatePasswordCreateShop({\n              name: \"password\",\n              value: e.target.value,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang\n            });\n          }\n        }), __jsx(FormErrorMsg, {\n          show: _this2.state.errors[\"password\"],\n          msg: _this2.state.errors[\"password\"]\n        })), __jsx(\"label\", {\n          className: \"auth__form-label\"\n        }, __jsx(\"span\", {\n          className: \"auth__input-label\"\n        }, __jsx(Translate, {\n          id: \"login.confirm-Pass\"\n        })), __jsx(\"input\", {\n          className: \"gray__input\",\n          type: \"password\",\n          placeholder: t(\"login.confirm-pass-placeholder\"),\n          required: true,\n          value: _this2.state.cPass,\n          onBlur: function onBlur(e) {\n            validateConfirmPassword({\n              name: e.target.name,\n              value1: _this2.state.pass,\n              value2: e.target.value,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang\n            });\n          },\n          onChange: function onChange(e) {\n            _this2.handleConfirmPassChange(e);\n\n            validateConfirmPassword({\n              name: \"cpassword\",\n              value1: _this2.state.pass,\n              value2: e.target.value,\n              handler: _this2.setErrors,\n              lang: _this2.context.lang\n            });\n          }\n        }), __jsx(FormErrorMsg, {\n          show: _this2.state.errors[\"cpassword\"],\n          msg: _this2.state.errors[\"cpassword\"]\n        })));\n      }), __jsx(\"div\", {\n        className: \"auth__captcha-cnt\"\n      }, __jsx(ReCAPTCHA // size=\"compact\"\n      , {\n        sitekey: \"6Lfh-usZAAAAAP3ZYWqEZ4hmjWOi_GA606Ho19aW\",\n        onChange: this.handleChangeToken,\n        ref: this.handleChangeRef\n      }), this.state.captchaErrors ? __jsx(FormErrorMsg, {\n        show: true,\n        msg: \"please set captcha\"\n      }) : null), __jsx(\"div\", {\n        className: \"auth__btn\"\n      }, __jsx(Button, {\n        radius: \"true\",\n        type: \"submit\",\n        value: this.state.showLoader ? __jsx(Loading, {\n          type: \"white\",\n          width: \"20px\",\n          height: \"20px\"\n        }) : __jsx(Translate, {\n          id: \"login.signup\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"createshop__btm text-align-center-ltr mb-5\"\n      }, __jsx(\"p\", {\n        className: \"createshop__text1\"\n      }, __jsx(Translate, {\n        id: \"login.dont-acc\"\n      })), __jsx(\"a\", {\n        href: \"https://panel.ajyal.bh\",\n        className: \"createshop__text-sky\"\n      }, __jsx(Translate, {\n        id: \"login.signup-msg1\"\n      })))) : __jsx(\"div\", {\n        className: \"createshop__transition-cnt mt-5\"\n      }, __jsx(VerifyPhone, {\n        Backclick: this.handleBackclick,\n        loaderSubmitButton: this.state.loaderFinalSubmitButton,\n        currdata: {\n          phoneCode: this.state.phoneCode,\n          mobileNumber: this.state.mobileNumber,\n          iso: this.state.iso,\n          requestId: this.state.requestId\n        },\n        submitRegister: this.handlerVerifySms\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\n_defineProperty(Login, \"contextType\", CreateShopContext);\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}