{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\"; // import \"./ShippingAddress.scss\";\n// import \"./ShippingAddress-rtl.scss\";\n\nimport { COMPLETE, VERIFY_PHONE, CHANGE_PHONE, SELECT_ADDRESS, GET_ADDRESS_DETAIL } from \"./ShippingAddressConstant\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport VerifyPhone from \"./VerifyPhone\";\nimport ChangePhone from \"./ChangePhone\";\nimport { COMPLETE_AND_NEXT } from \"../../OrderConstants\";\nimport { orderContext } from \"../../OrderContext\";\nimport SelectAddress from \"./SelectAddress\";\nimport AddressDetails from \"./AddressDetails\";\nimport AddressesList from \"./AddressesList\";\nimport { client_addAddress, client_updateAddress } from \"../../../../../../lib/api/client/clientOrder\";\n\nvar ShippingAddress = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShippingAddress, _React$Component);\n\n  var _super = _createSuper(ShippingAddress);\n\n  function ShippingAddress(props) {\n    var _this;\n\n    _classCallCheck(this, ShippingAddress);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setData\", function (newData, cb) {\n      _this.setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: _objectSpread(_objectSpread({}, state.data), newData)\n        });\n      }, function () {\n        if (cb) {\n          cb();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewAddress\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cb) {\n        var result, _result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.state.data.isUpdate) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return client_updateAddress({\n                  addressId: _this.state.data.addressId,\n                  transfereeMobile: _this.state.data.mobileNumber,\n                  postalCode: _this.state.data.postalCode,\n                  address: _this.state.data.address,\n                  locationX: _this.state.data.lat,\n                  locationY: _this.state.data.lng,\n                  transfereeName: _this.state.data.firstname,\n                  transfereeFamily: _this.state.data.lastname\n                });\n\n              case 4:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  cb && cb();\n                }\n\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n              case 10:\n                _context.next = 21;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.next = 15;\n                return client_addAddress({\n                  transfereeMobile: _this.state.data.mobileNumber,\n                  postalCode: _this.state.data.postalCode,\n                  address: _this.state.data.address,\n                  locationX: _this.state.data.lat,\n                  locationY: _this.state.data.lng,\n                  transfereeName: _this.state.data.firstname,\n                  transfereeFamily: _this.state.data.lastname\n                });\n\n              case 15:\n                _result = _context.sent;\n\n                if (_result.status === 200) {\n                  _this.setData({\n                    addressId: _result.result.addressId,\n                    requestId: _result.result.requestId\n                  }, function () {\n                    cb && cb();\n                  });\n                }\n\n                _context.next = 21;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t1 = _context[\"catch\"](12);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8], [12, 19]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleContinueClick\", function () {\n      _this.bool ? _this.handleSituation(VERIFY_PHONE) : _this.context.handleStep(COMPLETE_AND_NEXT);\n      _this.bool = false;\n    });\n\n    _this.state = {\n      situation: COMPLETE,\n      get_address_Loading: false,\n      data: {\n        addressId: null,\n        requestId: null,\n        isUpdate: false,\n        address: null,\n        iso: null,\n        phoneCode: null,\n        firstname: null,\n        lastname: null,\n        postalCode: null,\n        mobileNumber: null,\n        lat: null,\n        lng: null\n      }\n    }; // for test\n\n    _this.bool = true; ////\n\n    _this.handleSituation = _this.handleSituation.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ShippingAddress, [{\n    key: \"handleSituation\",\n    value: function handleSituation(type) {\n      var situation;\n\n      switch (type) {\n        case CHANGE_PHONE:\n          situation = CHANGE_PHONE;\n          break;\n\n        case COMPLETE:\n          situation = COMPLETE;\n          break;\n\n        case VERIFY_PHONE:\n          situation = VERIFY_PHONE;\n          break;\n\n        case GET_ADDRESS_DETAIL:\n          situation = GET_ADDRESS_DETAIL;\n          break;\n\n        case SELECT_ADDRESS:\n          situation = SELECT_ADDRESS;\n          break;\n\n        default:\n          situation = COMPLETE;\n          break;\n      }\n\n      this.setState({\n        situation: situation\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _jsx;\n\n      var content;\n      var situation = this.state.situation;\n\n      switch (situation) {\n        case COMPLETE:\n          content = __jsx(AddressesList, {\n            setData: this.setData,\n            handleSituation: this.handleSituation,\n            handleOrderStep: this.props.handleOrderStep\n          });\n          break;\n\n        case VERIFY_PHONE:\n          content = __jsx(VerifyPhone, {\n            setData: this.setData,\n            currdata: this.state.data,\n            handleSituation: this.handleSituation\n          });\n          break;\n\n        case CHANGE_PHONE:\n          content = __jsx(ChangePhone, {\n            setData: this.setData,\n            handleSituation: this.handleSituation,\n            currdata: this.state.data\n          });\n          break;\n\n        case SELECT_ADDRESS:\n          content = __jsx(SelectAddress, {\n            handleSituation: this.handleSituation,\n            setData: this.setData,\n            lat: this.state.data.lat,\n            lng: this.state.data.lng\n          });\n          break;\n\n        case GET_ADDRESS_DETAIL:\n          content = __jsx(AddressDetails, {\n            addAddress: this.addNewAddress,\n            setData: this.setData,\n            handleSituation: this.handleSituation,\n            currdata: this.state.data\n          });\n          break;\n\n        default:\n          content = this.renderAddresses();\n          break;\n      }\n\n      return __jsx(React.Fragment, null, __jsx(SwitchTransition, null, __jsx(CSSTransition, (_jsx = {\n        key: this.state.situation\n      }, _defineProperty(_jsx, \"key\", this.state.situation), _defineProperty(_jsx, \"classNames\", \"user-panel__routes\"), _defineProperty(_jsx, \"timeout\", 200), _jsx), content)));\n    }\n  }]);\n\n  return ShippingAddress;\n}(React.Component);\n\n_defineProperty(ShippingAddress, \"contextType\", orderContext);\n\nexport { ShippingAddress as default };","map":null,"metadata":{},"sourceType":"module"}